!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AFX_ADVANCEDDLG_H__BC093F43_EC15_42F9_BFD5_C06A368BF9C6__INCLUDED_	mate/AdvancedDlg.h	2;"	d
AFX_APPLOGFILE_H__4B3A3781_1664_41DB_B9CB_BF74075EC77D__INCLUDED_	mate/AppLogFile.h	2;"	d
AFX_CDRMATEDOC_H__190A69A0_8D73_4F3A_9A51_EBB79FFDD53A__INCLUDED_	mate/CDRMateDoc.h	6;"	d
AFX_CDRMATEVIEW_H__56510255_E2C7_4089_9927_935DD1E00A85__INCLUDED_	mate/CDRMateView.h	6;"	d
AFX_CDRMATE_H__3EE72DF2_E9CD_4FC1_81CA_1A7B11AE09A8__INCLUDED_	mate/CDRMate.h	5;"	d
AFX_CDROPPANNEL_H__7BA8E296_F4DD_4AFF_AB49_C71614115D3D__INCLUDED_	mate/CDROpPannel.h	2;"	d
AFX_CDRSESSIONDATA_H__26B5777E_201E_4C80_9561_C27D1E7DF978__INCLUDED_	mate/CDRData.h	2;"	d
AFX_CLMDATA_H__832880AF_1CA9_4E4A_A471_9A3C4C6712CB__INCLUDED_	mate/CLMData.h	2;"	d
AFX_CONNECTPAGE_H__2DC65067_A3C6_4914_912C_045FDA44C489__INCLUDED_	mate/ConnectPage.h	2;"	d
AFX_DATAFRM_H__3A4ABC7B_5A4D_4611_B471_DC7ADB6171CD__INCLUDED_	mate/DataFrm.h	2;"	d
AFX_DATAVIEW_H__61297D4C_ADBE_4B44_89B6_7877579F8061__INCLUDED_	mate/DataView.h	2;"	d
AFX_DEVICEDRAWINFO_H__6258396F_F07E_4762_83E3_6DE0166602D9__INCLUDED_	mate/DeviceDrawInfo.h	2;"	d
AFX_DEVICEVIEW_H__6CC8B847_9854_4316_97B8_87C9A7CFF27C__INCLUDED_	mate/DeviceView.h	2;"	d
AFX_FILESYSTEM_H__3129FC73_78CD_4C35_8AC1_19DAF8627DF4__INCLUDED_	mate/FileSystem.h	2;"	d
AFX_GENERALPAGE_H__91DB9425_F075_4278_B865_1E60DF1718F5__INCLUDED_	mate/GeneralPage.h	2;"	d
AFX_IMPORTDLG_H__B2299F55_56ED_4442_AC61_436B0431FEA9__INCLUDED_	mate/ImportDlg.h	2;"	d
AFX_INSTANCECHECKER_H__312486A6_E6A7_40D0_B449_C6E66F8B5C9E__INCLUDED_	mate/InstanceChecker.h	2;"	d
AFX_ITEMDRAWINFO_H__AC5BCE2F_2BE2_48B2_8B3F_CE267A0463F9__INCLUDED_	mate/ItemDrawInfo.h	2;"	d
AFX_LABLE_H__E890BAEB_B406_43C4_8132_2C8C01AD0EDC__INCLUDED_	mate/Lable.h	2;"	d
AFX_MAINFRM_H__234194DE_0A52_49DD_B038_6CA66747A712__INCLUDED_	mate/MainFrm.h	6;"	d
AFX_MRKDATA_H__9ECCC125_CDF9_4137_A346_5275C99DEE50__INCLUDED_	mate/MRKData.h	2;"	d
AFX_OFFICEDRAWINFO_H__4D335F8B_12D6_492D_B2CA_28E671D1121A__INCLUDED_	mate/OfficeDrawInfo.h	2;"	d
AFX_PATIENTHISTORY_H__31646B5C_EFC4_446E_86EE_046F817B5330__INCLUDED_	mate/PatientHistory.h	2;"	d
AFX_PRINTPAGE_H__082BC941_958A_422C_ABBC_7D8689C8F239__INCLUDED_	mate/PrintPage.h	2;"	d
AFX_SETUPINFO_H__F0360D95_4678_4DA9_ADEA_66123E762E8B__INCLUDED_	mate/SetupInfo.h	2;"	d
AFX_SETUPSHEET_H__3AE71BB5_D1BA_4757_9AA3_1C714834EEC7__INCLUDED_	mate/SetupSheet.h	2;"	d
AFX_STDAFX_H__84D143C1_71C6_4D05_B84A_C55260280140__INCLUDED_	tmp/StdAfx.h	7;"	d
AFX_STDAFX_H__F9EFFD3C_67F7_4A3E_A4CE_C4E0189A1991__INCLUDED_	mate/StdAfx.h	7;"	d
AFX_TABWND_H__E22ADFB8_5063_11D1_8E9B_4854E827046F__INCLUDED_	mate/Tabwnd.h	2;"	d
AFX_ZERNIKEVIEW_H__FB4D26CE_C8AD_43CA_98B9_95DA6EB61F8E__INCLUDED_	mate/ZernikeView.h	2;"	d
AFX_ZERNIKEWND_H__F401743E_B8F9_483A_9187_02FC2312B280__INCLUDED_	mate/ZernikeWnd.h	2;"	d
ALIGN_CENTER	mate/DeviceDrawInfo.h	23;"	d
ALIGN_CENTER	mate/OfficeDrawInfo.h	26;"	d
ALIGN_LEFT	mate/DeviceDrawInfo.h	22;"	d
ALIGN_LEFT	mate/OfficeDrawInfo.h	25;"	d
ALIGN_RIGHT	mate/DeviceDrawInfo.h	24;"	d
ALIGN_RIGHT	mate/OfficeDrawInfo.h	27;"	d
AR	Makefile	/^AR=ar$/;"	m
AcceptAllChanges	mate/excel8.cpp	/^void _Workbook::AcceptAllChanges(const VARIANT& When, const VARIANT& Who, const VARIANT& Where)$/;"	f	class:_Workbook
AcceptAllRevisions	mate/msword8.cpp	/^void _Document::AcceptAllRevisions()$/;"	f	class:_Document
Activate	mate/excel8.cpp	/^void Range::Activate()$/;"	f	class:Range
Activate	mate/excel8.cpp	/^void _Workbook::Activate()$/;"	f	class:_Workbook
Activate	mate/excel8.cpp	/^void _Worksheet::Activate()$/;"	f	class:_Worksheet
Activate	mate/msword8.cpp	/^void _ApplicationWord::Activate()$/;"	f	class:_ApplicationWord
Activate	mate/msword8.cpp	/^void _Document::Activate()$/;"	f	class:_Document
ActivateMicrosoftApp	mate/excel8.cpp	/^void _ApplicationExcel::ActivateMicrosoftApp(long Index)$/;"	f	class:_ApplicationExcel
ActivateTooltip	mate/ButtonST.cpp	/^void CButtonST::ActivateTooltip(BOOL bActivate)$/;"	f	class:CButtonST
Add	mate/excel8.cpp	/^LPDISPATCH Workbooks::Add(const VARIANT& Template)$/;"	f	class:Workbooks
Add	mate/excel8.cpp	/^LPDISPATCH Worksheets::Add(const VARIANT& Before, const VARIANT& After, const VARIANT& Count, const VARIANT& Type)$/;"	f	class:Worksheets
Add	mate/msword8.cpp	/^LPDISPATCH Cells::Add(VARIANT* BeforeCell)$/;"	f	class:Cells
Add	mate/msword8.cpp	/^LPDISPATCH Columns::Add(VARIANT* BeforeColumn)$/;"	f	class:Columns
Add	mate/msword8.cpp	/^LPDISPATCH Documents::Add(VARIANT* Template, VARIANT* NewTemplate)$/;"	f	class:Documents
Add	mate/msword8.cpp	/^LPDISPATCH Paragraphs::Add(VARIANT* Range)$/;"	f	class:Paragraphs
Add	mate/msword8.cpp	/^LPDISPATCH Rows::Add(VARIANT* BeforeRow)$/;"	f	class:Rows
Add	mate/msword8.cpp	/^LPDISPATCH Tables::Add(LPDISPATCH Range, long NumRows, long NumColumns)$/;"	f	class:Tables
AddChartAutoFormat	mate/excel8.cpp	/^void _ApplicationExcel::AddChartAutoFormat(const VARIANT& Chart, LPCTSTR Name, const VARIANT& Description)$/;"	f	class:_ApplicationExcel
AddComment	mate/excel8.cpp	/^LPDISPATCH Range::AddComment(const VARIANT& Text)$/;"	f	class:Range
AddCustomList	mate/excel8.cpp	/^void _ApplicationExcel::AddCustomList(const VARIANT& ListArray, const VARIANT& ByRow)$/;"	f	class:_ApplicationExcel
AddDataToRecvList	mate/CDRMateView.cpp	/^void CCDRMateView::AddDataToRecvList(CCDRData *pCDR) $/;"	f	class:CCDRMateView
AddPacket	cdr_session.c	/^static BOOL AddPacket(struct cdr_session *ps, char *pData, int nSize)$/;"	f	file:
AddPacket	tmp/CDRSession.cpp	/^BOOL CCDRSession::AddPacket(char *pData, int nSize, int nPrtcVer)$/;"	f	class:CCDRSession
AddToFavorites	mate/excel8.cpp	/^void _Workbook::AddToFavorites()$/;"	f	class:_Workbook
AddToFavorites	mate/msword8.cpp	/^void _Document::AddToFavorites()$/;"	f	class:_Document
AddToRcvBuff	tmp/SerialComm.cpp	/^BOOL CSerialComm::AddToRcvBuff(char *pData, int nSize)$/;"	f	class:CSerialComm
AddToSession	tmp/SerialComm.cpp	/^BOOL CSerialComm::AddToSession(char *pMsg, int nSize)$/;"	f	class:CSerialComm
AdvancedFilter	mate/excel8.cpp	/^void Range::AdvancedFilter(long Action, const VARIANT& CriteriaRange, const VARIANT& CopyToRange, const VARIANT& Unique)$/;"	f	class:Range
AlignControls	mate/CDRMateView.cpp	/^void CCDRMateView::AlignControls(void)$/;"	f	class:CCDRMateView
AlignItemsForCDR	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::AlignItemsForCDR(CCDRData *pData, BOOL bPageForm) $/;"	f	class:CDeviceDrawInfo
AlignItemsForCDR	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::AlignItemsForCDR(CCDRData *pData) $/;"	f	class:COfficeDrawInfo
AlignItemsForCLM	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::AlignItemsForCLM(CCLMData *pData, BOOL bPageForm) $/;"	f	class:CDeviceDrawInfo
AlignItemsForMRK	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::AlignItemsForMRK(CMRKData *pData, BOOL bPageForm) $/;"	f	class:CDeviceDrawInfo
Animate	mate/SystemTray.cpp	/^BOOL CSystemTray::Animate(UINT nDelayMilliSeconds, int nNumSeconds \/*=-1*\/)$/;"	f	class:CSystemTray
ApplyNames	mate/excel8.cpp	/^void Range::ApplyNames(const VARIANT& Names, const VARIANT& IgnoreRelativeAbsolute, const VARIANT& UseRowColumnNames, const VARIANT& OmitColumn, const VARIANT& OmitRow, long Order, const VARIANT& AppendLast)$/;"	f	class:Range
ApplyOutlineStyles	mate/excel8.cpp	/^void Range::ApplyOutlineStyles()$/;"	f	class:Range
ApplyPageBordersToAllSections	mate/msword8.cpp	/^void Borders::ApplyPageBordersToAllSections()$/;"	f	class:Borders
AssertValid	mate/CDRMateDoc.cpp	/^void CCDRMateDoc::AssertValid() const$/;"	f	class:CCDRMateDoc
AssertValid	mate/CDRMateView.cpp	/^void CCDRMateView::AssertValid() const$/;"	f	class:CCDRMateView
AssertValid	mate/DataView.cpp	/^void CDataView::AssertValid() const$/;"	f	class:CDataView
AssertValid	mate/MainFrm.cpp	/^void CMainFrame::AssertValid() const$/;"	f	class:CMainFrame
AssertValid	mate/ZernikeView.cpp	/^void CZernikeView::AssertValid() const$/;"	f	class:CZernikeView
AutoComplete	mate/excel8.cpp	/^CString Range::AutoComplete(LPCTSTR String)$/;"	f	class:Range
AutoFill	mate/excel8.cpp	/^void Range::AutoFill(LPDISPATCH Destination, long Type)$/;"	f	class:Range
AutoFilter	mate/excel8.cpp	/^void Range::AutoFilter(const VARIANT& Field, const VARIANT& Criteria1, long Operator, const VARIANT& Criteria2, const VARIANT& VisibleDropDown)$/;"	f	class:Range
AutoFit	mate/excel8.cpp	/^void Range::AutoFit()$/;"	f	class:Range
AutoFit	mate/msword8.cpp	/^void Cells::AutoFit()$/;"	f	class:Cells
AutoFit	mate/msword8.cpp	/^void Column::AutoFit()$/;"	f	class:Column
AutoFit	mate/msword8.cpp	/^void Columns::AutoFit()$/;"	f	class:Columns
AutoFormat	mate/excel8.cpp	/^void Range::AutoFormat(long Format, const VARIANT& Number, const VARIANT& Font, const VARIANT& Alignment, const VARIANT& Border, const VARIANT& Pattern, const VARIANT& Width)$/;"	f	class:Range
AutoFormat	mate/msword8.cpp	/^void Range2::AutoFormat()$/;"	f	class:Range2
AutoFormat	mate/msword8.cpp	/^void Table::AutoFormat(VARIANT* Format, VARIANT* ApplyBorders, VARIANT* ApplyShading, VARIANT* ApplyFont, VARIANT* ApplyColor, VARIANT* ApplyHeadingRows, VARIANT* ApplyLastRow, VARIANT* ApplyFirstColumn, VARIANT* ApplyLastColumn, VARIANT* AutoFit)$/;"	f	class:Table
AutoFormat	mate/msword8.cpp	/^void _Document::AutoFormat()$/;"	f	class:_Document
AutoOutline	mate/excel8.cpp	/^void Range::AutoOutline()$/;"	f	class:Range
AutoSum	mate/msword8.cpp	/^void Cell::AutoSum()$/;"	f	class:Cell
AutoSummarize	mate/msword8.cpp	/^LPDISPATCH _Document::AutoSummarize(VARIANT* Length, VARIANT* Mode, VARIANT* UpdateProperties)$/;"	f	class:_Document
AutomaticChange	mate/msword8.cpp	/^void _ApplicationWord::AutomaticChange()$/;"	f	class:_ApplicationWord
BITMAP_MODE	mate/DeviceDrawInfo.h	43;"	d
BOOL	inc/CDRType.h	/^typedef unsigned int BOOL;$/;"	t
BS_TYPEMASK	mate/ButtonST.cpp	19;"	d	file:
BS_TYPEMASK	mate/ButtonST.cpp	2460;"	d	file:
BTNST_AUTO_DARKER	mate/ButtonST.h	81;"	d
BTNST_AUTO_GRAY	mate/ButtonST.h	77;"	d
BTNST_BADPARAM	mate/ButtonST.h	69;"	d
BTNST_COLOR_BK_FOCUS	mate/ButtonST.h	/^				BTNST_COLOR_BK_FOCUS,			\/\/ Background color when the button is focused$/;"	e	enum:CButtonST::__anon8
BTNST_COLOR_BK_IN	mate/ButtonST.h	/^	enum	{	BTNST_COLOR_BK_IN	= 0,		\/\/ Background color when mouse is INside$/;"	e	enum:CButtonST::__anon8
BTNST_COLOR_BK_OUT	mate/ButtonST.h	/^				BTNST_COLOR_BK_OUT,				\/\/ Background color when mouse is OUTside$/;"	e	enum:CButtonST::__anon8
BTNST_COLOR_FG_FOCUS	mate/ButtonST.h	/^				BTNST_COLOR_FG_FOCUS,			\/\/ Text color when the button is focused$/;"	e	enum:CButtonST::__anon8
BTNST_COLOR_FG_IN	mate/ButtonST.h	/^				BTNST_COLOR_FG_IN,				\/\/ Text color when mouse is INside$/;"	e	enum:CButtonST::__anon8
BTNST_COLOR_FG_OUT	mate/ButtonST.h	/^				BTNST_COLOR_FG_OUT,				\/\/ Text color when mouse is OUTside$/;"	e	enum:CButtonST::__anon8
BTNST_FAILEDMASK	mate/ButtonST.h	60;"	d
BTNST_INVALIDALIGN	mate/ButtonST.h	66;"	d
BTNST_INVALIDINDEX	mate/ButtonST.h	63;"	d
BTNST_INVALIDPRESSEDSTYLE	mate/ButtonST.h	72;"	d
BTNST_INVALIDRESOURCE	mate/ButtonST.h	57;"	d
BTNST_MAX_COLORS	mate/ButtonST.h	/^				BTNST_MAX_COLORS$/;"	e	enum:CButtonST::__anon8
BTNST_OK	mate/ButtonST.h	54;"	d
BTNST_PRESSED_LEFTRIGHT	mate/ButtonST.h	/^    enum	{	BTNST_PRESSED_LEFTRIGHT = 0,	\/\/ Pressed style from left to right (as usual)$/;"	e	enum:CButtonST::__anon9
BTNST_PRESSED_TOPBOTTOM	mate/ButtonST.h	/^				BTNST_PRESSED_TOPBOTTOM			\/\/ Pressed style from top to bottom$/;"	e	enum:CButtonST::__anon9
BTNST_USE_SOUND	mate/ButtonST.h	46;"	d
BUFF_SIZE	tmp/SerialComm.h	9;"	d
BUF_LEN	inotify.c	15;"	d	file:
BUF_LIST	inc/buf_list.h	/^} BUF_LIST;$/;"	t	typeref:struct:buf_list_rec
BUF_LIST_ENTRY	inc/buf_list.h	/^} BUF_LIST_ENTRY;$/;"	t	typeref:struct:buf_list_entry_rec
BUTT_HEIGHT	mate/CDRMateView.h	29;"	d
BUTT_WIDTH	mate/CDRMateView.h	28;"	d
BVF_DATA	inc/CDRType.h	/^} BVF_DATA ;$/;"	t	typeref:struct:_BVF_DATA
BVF_DATA	tmp/CDRType.h	/^} BVF_DATA ;$/;"	t	typeref:struct:_BVF_DATA
BVF_TEST_DATA	inc/CDRType.h	/^} BVF_TEST_DATA ;$/;"	t	typeref:struct:_BVF_TEST_DATA
BVF_TEST_DATA	tmp/CDRType.h	/^} BVF_TEST_DATA ;$/;"	t	typeref:struct:_BVF_TEST_DATA
Begin	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::Begin(void) $/;"	f	class:COfficeDrawInfo
BorderAround	mate/excel8.cpp	/^void Range::BorderAround(const VARIANT& LineStyle, long Weight, long ColorIndex, const VARIANT& Color)$/;"	f	class:Range
Borders	mate/msword8.h	/^	Borders() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Borders
Borders	mate/msword8.h	/^	Borders(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Borders
Borders	mate/msword8.h	/^	Borders(const Borders& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Borders
Borders	mate/msword8.h	/^class Borders : public COleDispatchDriver$/;"	c
BuildKeyCode	mate/msword8.cpp	/^long _ApplicationWord::BuildKeyCode(long Arg1, VARIANT* Arg2, VARIANT* Arg3, VARIANT* Arg4)$/;"	f	class:_ApplicationWord
CAN_HD	inc/CDRType.h	/^} CAN_HD ;$/;"	t	typeref:struct:_CAN_HD
CAN_HD	tmp/CDRType.h	/^} CAN_HD ;$/;"	t	typeref:struct:_CAN_HD
CAboutDlg	mate/CDRMate.cpp	/^CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)$/;"	f	class:CAboutDlg
CAboutDlg	mate/CDRMate.cpp	/^class CAboutDlg : public CDialog$/;"	c	file:
CAdvancedDlg	mate/AdvancedDlg.cpp	/^CAdvancedDlg::CAdvancedDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:CAdvancedDlg
CAdvancedDlg	mate/AdvancedDlg.h	/^class CAdvancedDlg : public CDialog$/;"	c
CAppLogFile	mate/AppLogFile.cpp	/^CAppLogFile::CAppLogFile()$/;"	f	class:CAppLogFile
CAppLogFile	mate/AppLogFile.h	/^class CAppLogFile$/;"	c
CButtonST	mate/ButtonST.cpp	/^CButtonST::CButtonST()$/;"	f	class:CButtonST
CButtonST	mate/ButtonST.h	/^class CButtonST : public CButton$/;"	c
CC	Makefile	/^CC=gcc$/;"	m
CCDRData	mate/CDRData.cpp	/^CCDRData::CCDRData()$/;"	f	class:CCDRData
CCDRData	mate/CDRData.h	/^class CCDRData$/;"	c
CCDRMateApp	mate/CDRMate.cpp	/^CCDRMateApp::CCDRMateApp()$/;"	f	class:CCDRMateApp
CCDRMateApp	mate/CDRMate.h	/^class CCDRMateApp : public CWinApp$/;"	c
CCDRMateDoc	mate/CDRMateDoc.cpp	/^CCDRMateDoc::CCDRMateDoc()$/;"	f	class:CCDRMateDoc
CCDRMateDoc	mate/CDRMateDoc.h	/^class CCDRMateDoc : public CDocument$/;"	c
CCDRMateView	mate/CDRMateView.cpp	/^CCDRMateView::CCDRMateView()$/;"	f	class:CCDRMateView
CCDRMateView	mate/CDRMateView.h	/^class CCDRMateView : public CFormView$/;"	c
CCDROpPannel	mate/CDROpPannel.cpp	/^CCDROpPannel::CCDROpPannel()$/;"	f	class:CCDROpPannel
CCDROpPannel	mate/CDROpPannel.h	/^class CCDROpPannel : public CCmdTarget$/;"	c
CCDRPacket	tmp/CDRPacket.cpp	/^CCDRPacket::CCDRPacket()$/;"	f	class:CCDRPacket
CCDRPacket	tmp/CDRPacket.h	/^class CCDRPacket$/;"	c
CCDRSession	tmp/CDRSession.cpp	/^CCDRSession::CCDRSession()$/;"	f	class:CCDRSession
CCDRSession	tmp/CDRSession.h	/^class CCDRSession $/;"	c
CCLMData	mate/CLMData.cpp	/^CCLMData::CCLMData()$/;"	f	class:CCLMData
CCLMData	mate/CLMData.h	/^class CCLMData$/;"	c
CConnectPage	mate/ConnectPage.cpp	/^CConnectPage::CConnectPage() : CPropertyPage(CConnectPage::IDD)$/;"	f	class:CConnectPage
CConnectPage	mate/ConnectPage.h	/^class CConnectPage : public CPropertyPage$/;"	c
CDRDLL_API	tmp/CDRDLL.h	11;"	d
CDRDLL_API	tmp/CDRDLL.h	9;"	d
CDR_ADD	tmp/CDRParam.h	92;"	d
CDR_AGE	tmp/CDRParam.h	82;"	d
CDR_AXS	tmp/CDRParam.h	89;"	d
CDR_BLUR	tmp/CDRParam.h	100;"	d
CDR_BREAK	tmp/CDRParam.h	102;"	d
CDR_BREAK_CM	tmp/CDRParam.h	111;"	d
CDR_BREAK_MA	tmp/CDRParam.h	112;"	d
CDR_BREAK_PRISM	tmp/CDRParam.h	113;"	d
CDR_BVF_F	tmp/CDRParam.h	62;"	d
CDR_BVF_N	tmp/CDRParam.h	63;"	d
CDR_C01	tmp/CDRParam.h	132;"	d
CDR_C02	tmp/CDRParam.h	133;"	d
CDR_C03	tmp/CDRParam.h	134;"	d
CDR_C04	tmp/CDRParam.h	135;"	d
CDR_C05	tmp/CDRParam.h	136;"	d
CDR_C06	tmp/CDRParam.h	137;"	d
CDR_C07	tmp/CDRParam.h	138;"	d
CDR_C08	tmp/CDRParam.h	139;"	d
CDR_C09	tmp/CDRParam.h	140;"	d
CDR_CM	tmp/CDRParam.h	96;"	d
CDR_COMPANY	tmp/CDRParam.h	77;"	d
CDR_CYL	tmp/CDRParam.h	88;"	d
CDR_Connect	tmp/CDRDLL.cpp	/^CDRDLL_API BOOL CDR_Connect(const char *szPort, DWORD dwBaudRate, $/;"	f
CDR_D	tmp/CDRParam.h	99;"	d
CDR_DATE	tmp/CDRParam.h	81;"	d
CDR_DOMIN_EYE	tmp/CDRParam.h	83;"	d
CDR_Disconnect	tmp/CDRDLL.cpp	/^CDRDLL_API VOID CDR_Disconnect(void) $/;"	f
CDR_FIN_FA	tmp/CDRParam.h	25;"	d
CDR_FIN_FL	tmp/CDRParam.h	24;"	d
CDR_FIN_FR	tmp/CDRParam.h	23;"	d
CDR_FIN_FV	tmp/CDRParam.h	26;"	d
CDR_FIN_NL	tmp/CDRParam.h	28;"	d
CDR_FIN_NR	tmp/CDRParam.h	27;"	d
CDR_FIN_NV	tmp/CDRParam.h	29;"	d
CDR_FUSION	tmp/CDRParam.h	103;"	d
CDR_GetProtocolVer	tmp/CDRDLL.cpp	/^CDRDLL_API int CDR_GetProtocolVer(void)$/;"	f
CDR_HEADER	tmp/CDRParam.h	7;"	d
CDR_HORIZ	tmp/CDRParam.h	106;"	d
CDR_H_MAX	tmp/CDRParam.h	127;"	d
CDR_H_MIN	tmp/CDRParam.h	128;"	d
CDR_IsConnected	tmp/CDRDLL.cpp	/^CDRDLL_API BOOL CDR_IsConnected(void) $/;"	f
CDR_KER_R1L	tmp/CDRParam.h	65;"	d
CDR_KER_R1R	tmp/CDRParam.h	64;"	d
CDR_KER_R2L	tmp/CDRParam.h	67;"	d
CDR_KER_R2R	tmp/CDRParam.h	66;"	d
CDR_LENS_FL	tmp/CDRParam.h	10;"	d
CDR_LENS_FR	tmp/CDRParam.h	9;"	d
CDR_LENS_FV	tmp/CDRParam.h	11;"	d
CDR_LVA	tmp/CDRParam.h	95;"	d
CDR_L_CM	tmp/CDRParam.h	121;"	d
CDR_L_D	tmp/CDRParam.h	122;"	d
CDR_L_MAX	tmp/CDRParam.h	129;"	d
CDR_L_MIN	tmp/CDRParam.h	130;"	d
CDR_MA	tmp/CDRParam.h	97;"	d
CDR_MIN_STEREO	tmp/CDRParam.h	105;"	d
CDR_MM	tmp/CDRParam.h	108;"	d
CDR_MODEL	tmp/CDRParam.h	78;"	d
CDR_NPD	tmp/CDRParam.h	85;"	d
CDR_NPD_L	tmp/CDRParam.h	145;"	d
CDR_NPD_R	tmp/CDRParam.h	146;"	d
CDR_NPRA_NPA	tmp/CDRParam.h	31;"	d
CDR_NPRA_NPC	tmp/CDRParam.h	30;"	d
CDR_NPRA_NRA	tmp/CDRParam.h	32;"	d
CDR_NPRA_PRA	tmp/CDRParam.h	33;"	d
CDR_OU	tmp/CDRParam.h	93;"	d
CDR_OU_CM	tmp/CDRParam.h	117;"	d
CDR_OU_D	tmp/CDRParam.h	118;"	d
CDR_PATIENT	tmp/CDRParam.h	80;"	d
CDR_PAT_BASIC	tmp/CDRParam.h	8;"	d
CDR_PD	tmp/CDRParam.h	84;"	d
CDR_PD_L	tmp/CDRParam.h	143;"	d
CDR_PD_R	tmp/CDRParam.h	144;"	d
CDR_PRISM	tmp/CDRParam.h	98;"	d
CDR_PRISM_COIN_FL	tmp/CDRParam.h	47;"	d
CDR_PRISM_COIN_FR	tmp/CDRParam.h	46;"	d
CDR_PRISM_COIN_NL	tmp/CDRParam.h	49;"	d
CDR_PRISM_COIN_NR	tmp/CDRParam.h	48;"	d
CDR_PRISM_MADD_FL	tmp/CDRParam.h	59;"	d
CDR_PRISM_MADD_FR	tmp/CDRParam.h	58;"	d
CDR_PRISM_MADD_NL	tmp/CDRParam.h	61;"	d
CDR_PRISM_MADD_NR	tmp/CDRParam.h	60;"	d
CDR_PRISM_PFIX_FL	tmp/CDRParam.h	55;"	d
CDR_PRISM_PFIX_FR	tmp/CDRParam.h	54;"	d
CDR_PRISM_PFIX_NL	tmp/CDRParam.h	57;"	d
CDR_PRISM_PFIX_NR	tmp/CDRParam.h	56;"	d
CDR_PRISM_POL_FL	tmp/CDRParam.h	51;"	d
CDR_PRISM_POL_FR	tmp/CDRParam.h	50;"	d
CDR_PRISM_POL_NL	tmp/CDRParam.h	53;"	d
CDR_PRISM_POL_NR	tmp/CDRParam.h	52;"	d
CDR_PRISM_SCH_FL	tmp/CDRParam.h	39;"	d
CDR_PRISM_SCH_FR	tmp/CDRParam.h	38;"	d
CDR_PRISM_SCH_NL	tmp/CDRParam.h	41;"	d
CDR_PRISM_SCH_NR	tmp/CDRParam.h	40;"	d
CDR_PRISM_VON_FL	tmp/CDRParam.h	43;"	d
CDR_PRISM_VON_FR	tmp/CDRParam.h	42;"	d
CDR_PRISM_VON_NL	tmp/CDRParam.h	45;"	d
CDR_PRISM_VON_NR	tmp/CDRParam.h	44;"	d
CDR_PRTC_UNKNOWN	inc/CDRType.h	13;"	d
CDR_PRTC_UNKNOWN	tmp/CDRType.h	9;"	d
CDR_PRTC_V100	inc/CDRType.h	14;"	d
CDR_PRTC_V100	tmp/CDRType.h	10;"	d
CDR_PRTC_V110	inc/CDRType.h	15;"	d
CDR_PRTC_V110	tmp/CDRType.h	11;"	d
CDR_PRTC_V120	inc/CDRType.h	16;"	d
CDR_PRTC_V120	tmp/CDRType.h	12;"	d
CDR_PX	tmp/CDRParam.h	90;"	d
CDR_PY	tmp/CDRParam.h	91;"	d
CDR_RC_FNRC	tmp/CDRParam.h	34;"	d
CDR_RC_FPRC	tmp/CDRParam.h	35;"	d
CDR_RC_NNRC	tmp/CDRParam.h	36;"	d
CDR_RC_NPRC	tmp/CDRParam.h	37;"	d
CDR_RECV	tmp/CDRParam.h	101;"	d
CDR_RECV_CM	tmp/CDRParam.h	114;"	d
CDR_RECV_MA	tmp/CDRParam.h	115;"	d
CDR_RECV_PRISM	tmp/CDRParam.h	116;"	d
CDR_REFR_FL	tmp/CDRParam.h	15;"	d
CDR_REFR_FR	tmp/CDRParam.h	14;"	d
CDR_RETINO_FL	tmp/CDRParam.h	73;"	d
CDR_RETINO_FR	tmp/CDRParam.h	72;"	d
CDR_RVA	tmp/CDRParam.h	94;"	d
CDR_R_CM	tmp/CDRParam.h	119;"	d
CDR_R_D	tmp/CDRParam.h	120;"	d
CDR_ReadData	tmp/CDRDLL.cpp	/^CDRDLL_API LPCSTR CDR_ReadData(int nCateg, int nParam)$/;"	f
CDR_SE	tmp/CDRParam.h	123;"	d
CDR_SPH	tmp/CDRParam.h	87;"	d
CDR_STEREO	tmp/CDRParam.h	104;"	d
CDR_SUBJ_FA	tmp/CDRParam.h	18;"	d
CDR_SUBJ_FL	tmp/CDRParam.h	17;"	d
CDR_SUBJ_FR	tmp/CDRParam.h	16;"	d
CDR_SUBJ_FV	tmp/CDRParam.h	19;"	d
CDR_SUBJ_NL	tmp/CDRParam.h	21;"	d
CDR_SUBJ_NR	tmp/CDRParam.h	20;"	d
CDR_SUBJ_NV	tmp/CDRParam.h	22;"	d
CDR_SetFavoredSysID	tmp/CDRDLL.cpp	/^CDRDLL_API VOID CDR_SetFavoredSysID(int nSysID)$/;"	f
CDR_SetLogTracer	tmp/CDRDLL.cpp	/^CDRDLL_API VOID CDR_SetLogTracer(BOOL bEnable)$/;"	f
CDR_SetProtocolVer	tmp/CDRDLL.cpp	/^CDRDLL_API VOID CDR_SetProtocolVer(int nPrtcVer)$/;"	f
CDR_SetWindowToNotify	tmp/CDRDLL.cpp	/^CDRDLL_API VOID CDR_SetWindowToNotify(const HWND hWnd)$/;"	f
CDR_TRANS_END	tmp/CDRParam.h	68;"	d
CDR_UNVA_FV	tmp/CDRParam.h	12;"	d
CDR_UNVA_NV	tmp/CDRParam.h	13;"	d
CDR_U_RATIO	tmp/CDRParam.h	126;"	d
CDR_VERSION	tmp/CDRParam.h	79;"	d
CDR_VERT	tmp/CDRParam.h	107;"	d
CDR_VIEW	mate/DeviceDrawInfo.h	20;"	d
CDR_WD	tmp/CDRParam.h	86;"	d
CDR_WriteData	tmp/CDRDLL.cpp	/^CDRDLL_API BOOL CDR_WriteData(LPCSTR pData, int nDataSize) $/;"	f
CDR_ZDATA_HEAD	tmp/CDRParam.h	69;"	d
CDR_ZDATA_LC	tmp/CDRParam.h	70;"	d
CDR_ZDATA_RC	tmp/CDRParam.h	71;"	d
CDataFrm	mate/DataFrm.cpp	/^CDataFrm::CDataFrm()$/;"	f	class:CDataFrm
CDataFrm	mate/DataFrm.h	/^class CDataFrm : public CFrameWnd$/;"	c
CDataView	mate/DataView.cpp	/^CDataView::CDataView()$/;"	f	class:CDataView
CDataView	mate/DataView.h	/^class CDataView : public CScrollView$/;"	c
CDeviceDrawInfo	mate/DeviceDrawInfo.cpp	/^CDeviceDrawInfo::CDeviceDrawInfo(void)$/;"	f	class:CDeviceDrawInfo
CDeviceDrawInfo	mate/DeviceDrawInfo.h	/^class CDeviceDrawInfo $/;"	c
CDeviceView	mate/DeviceView.cpp	/^CDeviceView::CDeviceView()$/;"	f	class:CDeviceView
CDeviceView	mate/DeviceView.h	/^class CDeviceView $/;"	c
CFLAGS	Makefile	/^CFLAGS=$(COPTS) $(INC) $(DEFS)$/;"	m
CFileSystem	mate/FileSystem.cpp	/^CFileSystem::CFileSystem()$/;"	f	class:CFileSystem
CFileSystem	mate/FileSystem.h	/^class CFileSystem : public CCmdTarget$/;"	c
CGeneralPage	mate/GeneralPage.cpp	/^CGeneralPage::CGeneralPage() : CPropertyPage(CGeneralPage::IDD)$/;"	f	class:CGeneralPage
CGeneralPage	mate/GeneralPage.h	/^class CGeneralPage : public CPropertyPage$/;"	c
CImportDlg	mate/ImportDlg.cpp	/^CImportDlg::CImportDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:CImportDlg
CImportDlg	mate/ImportDlg.h	/^class CImportDlg : public CDialog$/;"	c
CInstanceChecker	mate/InstanceChecker.cpp	/^CInstanceChecker::CInstanceChecker()$/;"	f	class:CInstanceChecker
CInstanceChecker	mate/InstanceChecker.h	/^class CInstanceChecker $/;"	c
CItemDrawInfo	mate/ItemDrawInfo.cpp	/^CItemDrawInfo::CItemDrawInfo()$/;"	f	class:CItemDrawInfo
CItemDrawInfo	mate/ItemDrawInfo.h	/^class CItemDrawInfo $/;"	c
CLM_DATA	mate/FileSystem.h	11;"	d
CLM_VIEW	mate/DeviceDrawInfo.h	18;"	d
CLOSE_APPLOG	mate/AppLogFile.h	13;"	d
CLable	mate/Lable.cpp	/^CLable::CLable()$/;"	f	class:CLable
CLable	mate/Lable.h	/^class CLable : public CStatic$/;"	c
CLogTracer	tmp/LogTracer.h	/^	CLogTracer() $/;"	f	class:CLogTracer
CLogTracer	tmp/LogTracer.h	/^class CLogTracer $/;"	c
CMRKData	mate/MRKData.cpp	/^CMRKData::CMRKData()$/;"	f	class:CMRKData
CMRKData	mate/MRKData.h	/^class CMRKData$/;"	c
CMainFrame	mate/MainFrm.cpp	/^CMainFrame::CMainFrame()$/;"	f	class:CMainFrame
CMainFrame	mate/MainFrm.h	/^class CMainFrame : public CXTPFrameWnd$/;"	c
COEFF_DATA	inc/CDRType.h	/^} COEFF_DATA ;$/;"	t	typeref:struct:_COEFF_DATA
COEFF_DATA	tmp/CDRType.h	/^} COEFF_DATA ;$/;"	t	typeref:struct:_COEFF_DATA
CONF_FLAG_CONSOLE	inc/conf.h	22;"	d
CONF_FLAG_ERROR_LOG	inc/conf.h	24;"	d
CONF_FLAG_MANUAL_TRANSFER	inc/conf.h	25;"	d
CONF_FLAG_MOVE_FILE	inc/conf.h	26;"	d
CONF_FLAG_SYSLOG	inc/conf.h	23;"	d
COPTS	Makefile	/^COPTS=-Wall -Wstrict-prototypes -Wmissing-declarations  \\$/;"	m
COfficeDrawInfo	mate/OfficeDrawInfo.cpp	/^COfficeDrawInfo::COfficeDrawInfo()$/;"	f	class:COfficeDrawInfo
COfficeDrawInfo	mate/OfficeDrawInfo.h	/^class COfficeDrawInfo $/;"	c
CPatientHistory	mate/PatientHistory.cpp	/^CPatientHistory::CPatientHistory(CWnd* pParent \/*=NULL*\/)$/;"	f	class:CPatientHistory
CPatientHistory	mate/PatientHistory.h	/^class CPatientHistory : public CDialog$/;"	c
CPrintPage	mate/PrintPage.cpp	/^CPrintPage::CPrintPage() : CPropertyPage(CPrintPage::IDD)$/;"	f	class:CPrintPage
CPrintPage	mate/PrintPage.h	/^class CPrintPage : public CPropertyPage$/;"	c
CSerialComm	tmp/SerialComm.cpp	/^CSerialComm::CSerialComm()$/;"	f	class:CSerialComm
CSerialComm	tmp/SerialComm.h	/^class CSerialComm $/;"	c
CSetupInfo	mate/SetupInfo.cpp	/^CSetupInfo::CSetupInfo()$/;"	f	class:CSetupInfo
CSetupInfo	mate/SetupInfo.h	/^class CSetupInfo $/;"	c
CSetupSheet	mate/SetupSheet.cpp	/^CSetupSheet::CSetupSheet(LPCTSTR pszCaption, CWnd* pParentWnd, UINT iSelectPage)$/;"	f	class:CSetupSheet
CSetupSheet	mate/SetupSheet.cpp	/^CSetupSheet::CSetupSheet(UINT nIDCaption, CWnd* pParentWnd, UINT iSelectPage)$/;"	f	class:CSetupSheet
CSetupSheet	mate/SetupSheet.h	/^class CSetupSheet : public CPropertySheet$/;"	c
CSystemTray	mate/SystemTray.cpp	/^CSystemTray::CSystemTray()$/;"	f	class:CSystemTray
CSystemTray	mate/SystemTray.cpp	/^CSystemTray::CSystemTray(CWnd* pParent, UINT uCallbackMessage, LPCTSTR szToolTip, $/;"	f	class:CSystemTray
CSystemTray	mate/SystemTray.h	/^class CSystemTray : public CWnd$/;"	c
CTabWnd	mate/Tabwnd.cpp	/^CTabWnd::CTabWnd()$/;"	f	class:CTabWnd
CTabWnd	mate/Tabwnd.h	/^class CTabWnd : public CSplitterWnd \/\/CWnd$/;"	c
CXX	Makefile	/^CXX = g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS=$(CFLAGS)$/;"	m
CZernikeContext	mate/ZernikeContext.cpp	/^CZernikeContext::CZernikeContext(int eyeSide) $/;"	f	class:CZernikeContext
CZernikeContext	mate/ZernikeContext.cpp	/^CZernikeContext::CZernikeContext(void)$/;"	f	class:CZernikeContext
CZernikeContext	mate/ZernikeContext.h	/^class CZernikeContext$/;"	c
CZernikeView	mate/ZernikeView.cpp	/^CZernikeView::CZernikeView()$/;"	f	class:CZernikeView
CZernikeView	mate/ZernikeView.h	/^class CZernikeView : public CScrollView$/;"	c
CZernikeWnd	mate/ZernikeWnd.cpp	/^CZernikeWnd::CZernikeWnd()$/;"	f	class:CZernikeWnd
CZernikeWnd	mate/ZernikeWnd.h	/^class CZernikeWnd : public CFrameWnd$/;"	c
Calculate	mate/excel8.cpp	/^void Range::Calculate()$/;"	f	class:Range
Calculate	mate/excel8.cpp	/^void _ApplicationExcel::Calculate()$/;"	f	class:_ApplicationExcel
Calculate	mate/excel8.cpp	/^void _Worksheet::Calculate()$/;"	f	class:_Worksheet
Calculate	mate/msword8.cpp	/^float Range2::Calculate()$/;"	f	class:Range2
Calculate	mate/msword8.cpp	/^float Selection::Calculate()$/;"	f	class:Selection
CancelHover	mate/ButtonST.cpp	/^void CButtonST::CancelHover()$/;"	f	class:CButtonST
Cell	mate/msword8.cpp	/^LPDISPATCH Table::Cell(long Row, long Column)$/;"	f	class:Table
Cell	mate/msword8.h	/^	Cell() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Cell
Cell	mate/msword8.h	/^	Cell(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Cell
Cell	mate/msword8.h	/^	Cell(const Cell& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Cell
Cell	mate/msword8.h	/^class Cell : public COleDispatchDriver$/;"	c
CellText	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::CellText(int nRow, int nCol, CString sText, BOOL bBold, BOOL bShade, int nColSize, int nAlign, BOOL bColor) $/;"	f	class:COfficeDrawInfo
Cells	mate/msword8.h	/^	Cells() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Cells
Cells	mate/msword8.h	/^	Cells(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Cells
Cells	mate/msword8.h	/^	Cells(const Cells& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Cells
Cells	mate/msword8.h	/^class Cells : public COleDispatchDriver$/;"	c
CentimetersToPoints	mate/excel8.cpp	/^double _ApplicationExcel::CentimetersToPoints(double Centimeters)$/;"	f	class:_ApplicationExcel
CentimetersToPoints	mate/msword8.cpp	/^float _ApplicationWord::CentimetersToPoints(float Centimeters)$/;"	f	class:_ApplicationWord
ChangeFavoredSID	mate/CDROpPannel.cpp	/^void CCDROpPannel::ChangeFavoredSID(CSetupInfo *pSetup) $/;"	f	class:CCDROpPannel
ChangeFileAccess	mate/excel8.cpp	/^void _Workbook::ChangeFileAccess(long Mode, const VARIANT& WritePassword, const VARIANT& Notify)$/;"	f	class:_Workbook
ChangeFileOpenDirectory	mate/msword8.cpp	/^void _ApplicationWord::ChangeFileOpenDirectory(LPCTSTR Path)$/;"	f	class:_ApplicationWord
ChangeLink	mate/excel8.cpp	/^void _Workbook::ChangeLink(LPCTSTR Name, LPCTSTR NewName, long Type)$/;"	f	class:_Workbook
ChartObjects	mate/excel8.cpp	/^LPDISPATCH _Worksheet::ChartObjects(const VARIANT& Index)$/;"	f	class:_Worksheet
CheckDefSubDirs	mate/SetupInfo.cpp	/^void CSetupInfo::CheckDefSubDirs(void) $/;"	f	class:CSetupInfo
CheckField	mate/Utility.cpp	/^LPCSTR CheckField(CString sValue)$/;"	f
CheckField2	mate/Utility.cpp	/^LPCSTR CheckField2(CString sValue)$/;"	f
CheckGrammar	mate/msword8.cpp	/^BOOL _ApplicationWord::CheckGrammar(LPCTSTR String)$/;"	f	class:_ApplicationWord
CheckGrammar	mate/msword8.cpp	/^void Range2::CheckGrammar()$/;"	f	class:Range2
CheckGrammar	mate/msword8.cpp	/^void _Document::CheckGrammar()$/;"	f	class:_Document
CheckListSize	mate/CDRMateView.cpp	/^void CCDRMateView::CheckListSize(int nList)$/;"	f	class:CCDRMateView
CheckOfficeApp	mate/MainFrm.cpp	/^void CMainFrame::CheckOfficeApp(void)$/;"	f	class:CMainFrame
CheckRcvDataDesc	cdr_session.c	/^static BOOL CheckRcvDataDesc(struct cdr_session *ps, char *pDesc)$/;"	f	file:
CheckRcvDataDesc	tmp/CDRSession.cpp	/^BOOL CCDRSession::CheckRcvDataDesc(char *pDesc)$/;"	f	class:CCDRSession
CheckSessionEnd	tmp/SerialComm.cpp	/^void CSerialComm::CheckSessionEnd(void)$/;"	f	class:CSerialComm
CheckSpelling	mate/excel8.cpp	/^BOOL _ApplicationExcel::CheckSpelling(LPCTSTR Word, const VARIANT& CustomDictionary, const VARIANT& IgnoreUppercase)$/;"	f	class:_ApplicationExcel
CheckSpelling	mate/excel8.cpp	/^void Range::CheckSpelling(const VARIANT& CustomDictionary, const VARIANT& IgnoreUppercase, const VARIANT& AlwaysSuggest, const VARIANT& IgnoreInitialAlefHamza, const VARIANT& IgnoreFinalYaa, const VARIANT& SpellScript)$/;"	f	class:Range
CheckSpelling	mate/excel8.cpp	/^void _Worksheet::CheckSpelling(const VARIANT& CustomDictionary, const VARIANT& IgnoreUppercase, const VARIANT& AlwaysSuggest, const VARIANT& IgnoreInitialAlefHamza, const VARIANT& IgnoreFinalYaa, const VARIANT& SpellScript)$/;"	f	class:_Worksheet
CheckSpelling	mate/msword8.cpp	/^BOOL _ApplicationWord::CheckSpelling(LPCTSTR Word, VARIANT* CustomDictionary, VARIANT* IgnoreUppercase, VARIANT* MainDictionary, VARIANT* CustomDictionary2, VARIANT* CustomDictionary3, VARIANT* CustomDictionary4, VARIANT* CustomDictionary5, $/;"	f	class:_ApplicationWord
CheckSpelling	mate/msword8.cpp	/^void Range2::CheckSpelling(VARIANT* CustomDictionary, VARIANT* IgnoreUppercase, VARIANT* AlwaysSuggest, VARIANT* CustomDictionary2, VARIANT* CustomDictionary3, VARIANT* CustomDictionary4, VARIANT* CustomDictionary5, VARIANT* CustomDictionary6, $/;"	f	class:Range2
CheckSpelling	mate/msword8.cpp	/^void _Document::CheckSpelling(VARIANT* CustomDictionary, VARIANT* IgnoreUppercase, VARIANT* AlwaysSuggest, VARIANT* CustomDictionary2, VARIANT* CustomDictionary3, VARIANT* CustomDictionary4, VARIANT* CustomDictionary5, VARIANT* CustomDictionary6, $/;"	f	class:_Document
CheckSynonyms	mate/msword8.cpp	/^void Range2::CheckSynonyms()$/;"	f	class:Range2
CircleInvalid	mate/excel8.cpp	/^void _Worksheet::CircleInvalid()$/;"	f	class:_Worksheet
CleanString	mate/msword8.cpp	/^CString _ApplicationWord::CleanString(LPCTSTR String)$/;"	f	class:_ApplicationWord
Clear	mate/excel8.cpp	/^void Range::Clear()$/;"	f	class:Range
Clear	tmp/CDRPacket.cpp	/^void CCDRPacket::Clear(void) $/;"	f	class:CCDRPacket
ClearArrows	mate/excel8.cpp	/^void _Worksheet::ClearArrows()$/;"	f	class:_Worksheet
ClearCircles	mate/excel8.cpp	/^void _Worksheet::ClearCircles()$/;"	f	class:_Worksheet
ClearComments	mate/excel8.cpp	/^void Range::ClearComments()$/;"	f	class:Range
ClearContents	mate/excel8.cpp	/^void Range::ClearContents()$/;"	f	class:Range
ClearData	cdr_session.c	/^static void ClearData(struct cdr_session *ps) $/;"	f	file:
ClearData	tmp/CDRSession.cpp	/^void CCDRSession::ClearData(void) $/;"	f	class:CCDRSession
ClearFormats	mate/excel8.cpp	/^void Range::ClearFormats()$/;"	f	class:Range
ClearNotes	mate/excel8.cpp	/^void Range::ClearNotes()$/;"	f	class:Range
ClearOutline	mate/excel8.cpp	/^void Range::ClearOutline()$/;"	f	class:Range
ClearRcvBuff	tmp/SerialComm.cpp	/^void CSerialComm::ClearRcvBuff(void) $/;"	f	class:CSerialComm
ClearSndBuff	tmp/SerialComm.cpp	/^void CSerialComm::ClearSndBuff(void) $/;"	f	class:CSerialComm
Close	mate/AppLogFile.cpp	/^BOOL CAppLogFile::Close(void) $/;"	f	class:CAppLogFile
Close	mate/CDROpPannel.cpp	/^void CCDROpPannel::Close(void) $/;"	f	class:CCDROpPannel
Close	mate/excel8.cpp	/^void Workbooks::Close()$/;"	f	class:Workbooks
Close	mate/excel8.cpp	/^void _Workbook::Close(const VARIANT& SaveChanges, const VARIANT& Filename, const VARIANT& RouteWorkbook)$/;"	f	class:_Workbook
Close	mate/msword8.cpp	/^void Documents::Close(VARIANT* SaveChanges, VARIANT* OriginalFormat, VARIANT* RouteDocument)$/;"	f	class:Documents
Close	mate/msword8.cpp	/^void _Document::Close(VARIANT* SaveChanges, VARIANT* OriginalFormat, VARIANT* RouteDocument)$/;"	f	class:_Document
ClosePrintPreview	mate/msword8.cpp	/^void _Document::ClosePrintPreview()$/;"	f	class:_Document
CloseUp	mate/msword8.cpp	/^void Paragraph::CloseUp()$/;"	f	class:Paragraph
CloseUp	mate/msword8.cpp	/^void Paragraphs::CloseUp()$/;"	f	class:Paragraphs
Collapse	mate/msword8.cpp	/^void Range2::Collapse(VARIANT* Direction)$/;"	f	class:Range2
Collapse	mate/msword8.cpp	/^void Selection::Collapse(VARIANT* Direction)$/;"	f	class:Selection
Column	mate/msword8.h	/^	Column() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Column
Column	mate/msword8.h	/^	Column(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Column
Column	mate/msword8.h	/^	Column(const Column& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Column
Column	mate/msword8.h	/^class Column : public COleDispatchDriver$/;"	c
ColumnDifferences	mate/excel8.cpp	/^LPDISPATCH Range::ColumnDifferences(const VARIANT& Comparison)$/;"	f	class:Range
Columns	mate/msword8.h	/^	Columns() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Columns
Columns	mate/msword8.h	/^	Columns(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Columns
Columns	mate/msword8.h	/^	Columns(const Columns& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Columns
Columns	mate/msword8.h	/^class Columns : public COleDispatchDriver$/;"	c
Compare	mate/msword8.cpp	/^void _Document::Compare(LPCTSTR Name)$/;"	f	class:_Document
ComputeStatistics	mate/msword8.cpp	/^long Range2::ComputeStatistics(long Statistic)$/;"	f	class:Range2
ComputeStatistics	mate/msword8.cpp	/^long _Document::ComputeStatistics(long Statistic, VARIANT* IncludeFootnotesAndEndnotes)$/;"	f	class:_Document
Connect	mate/CDROpPannel.cpp	/^BOOL CCDROpPannel::Connect(CSetupInfo *pSetup, HWND hWnd) $/;"	f	class:CCDROpPannel
Connect	tmp/SerialComm.cpp	/^BOOL CSerialComm::Connect(const char *pPort, DWORD dwBaudRate, BYTE byParity, $/;"	f	class:CSerialComm
Consolidate	mate/excel8.cpp	/^void Range::Consolidate(const VARIANT& Sources, const VARIANT& Function, const VARIANT& TopRow, const VARIANT& LeftColumn, const VARIANT& CreateLinks)$/;"	f	class:Range
ConvertFormula	mate/excel8.cpp	/^VARIANT _ApplicationExcel::ConvertFormula(const VARIANT& Formula, long FromReferenceStyle, const VARIANT& ToReferenceStyle, const VARIANT& ToAbsolute, const VARIANT& RelativeTo)$/;"	f	class:_ApplicationExcel
ConvertNumbersToText	mate/msword8.cpp	/^void _Document::ConvertNumbersToText(VARIANT* NumberType)$/;"	f	class:_Document
ConvertToTable	mate/msword8.cpp	/^LPDISPATCH Range2::ConvertToTable(VARIANT* Separator, VARIANT* NumRows, VARIANT* NumColumns, VARIANT* InitialColumnWidth, VARIANT* Format, VARIANT* ApplyBorders, VARIANT* ApplyShading, VARIANT* ApplyFont, VARIANT* ApplyColor, $/;"	f	class:Range2
ConvertToTable	mate/msword8.cpp	/^LPDISPATCH Selection::ConvertToTable(VARIANT* Separator, VARIANT* NumRows, VARIANT* NumColumns, VARIANT* InitialColumnWidth, VARIANT* Format, VARIANT* ApplyBorders, VARIANT* ApplyShading, VARIANT* ApplyFont, VARIANT* ApplyColor, $/;"	f	class:Selection
ConvertToText	mate/msword8.cpp	/^LPDISPATCH Row::ConvertToText(VARIANT* Separator)$/;"	f	class:Row
ConvertToText	mate/msword8.cpp	/^LPDISPATCH Rows::ConvertToText(VARIANT* Separator)$/;"	f	class:Rows
ConvertToText	mate/msword8.cpp	/^LPDISPATCH Table::ConvertToText(VARIANT* Separator)$/;"	f	class:Table
Copy	mate/excel8.cpp	/^void Range::Copy(const VARIANT& Destination)$/;"	f	class:Range
Copy	mate/excel8.cpp	/^void Worksheets::Copy(const VARIANT& Before, const VARIANT& After)$/;"	f	class:Worksheets
Copy	mate/excel8.cpp	/^void _Worksheet::Copy(const VARIANT& Before, const VARIANT& After)$/;"	f	class:_Worksheet
Copy	mate/msword8.cpp	/^void Range2::Copy()$/;"	f	class:Range2
Copy	mate/msword8.cpp	/^void Selection::Copy()$/;"	f	class:Selection
CopyAsPicture	mate/msword8.cpp	/^void Range2::CopyAsPicture()$/;"	f	class:Range2
CopyAsPicture	mate/msword8.cpp	/^void Selection::CopyAsPicture()$/;"	f	class:Selection
CopyBitmapToClipboard	mate/Lib_Bitmap.cpp	/^void CopyBitmapToClipboard( const CWnd *pWnd, CBitmap& bitmap, CPalette* pPal )$/;"	f
CopyDataTo	tmp/CDRSession.cpp	/^BOOL CCDRSession::CopyDataTo(CCDRSession *pDest)$/;"	f	class:CCDRSession
CopyFormat	mate/msword8.cpp	/^void Selection::CopyFormat()$/;"	f	class:Selection
CopyFromRecordset	mate/excel8.cpp	/^long Range::CopyFromRecordset(LPUNKNOWN Data, const VARIANT& MaxRows, const VARIANT& MaxColumns)$/;"	f	class:Range
CopyGraphAsBitmap	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::CopyGraphAsBitmap(int nType, CCDRData *pCDRData) $/;"	f	class:CDeviceDrawInfo
CopyPicture	mate/excel8.cpp	/^void Range::CopyPicture(long Appearance, long Format)$/;"	f	class:Range
CopyStylesFromTemplate	mate/msword8.cpp	/^void _Document::CopyStylesFromTemplate(LPCTSTR Template)$/;"	f	class:_Document
CopyTo	mate/CDRData.cpp	/^BOOL CCDRData::CopyTo(CCDRData *pDest)$/;"	f	class:CCDRData
CountNumberedItems	mate/msword8.cpp	/^long _Document::CountNumberedItems(VARIANT* NumberType, VARIANT* Level)$/;"	f	class:_Document
Create	mate/SystemTray.cpp	/^BOOL CSystemTray::Create(CWnd* pParent, UINT uCallbackMessage, LPCTSTR szToolTip, $/;"	f	class:CSystemTray
Create	mate/Tabwnd.cpp	/^BOOL CTabWnd::Create(DWORD dwStyle, CWnd* pParentWnd, UINT nID)$/;"	f	class:CTabWnd
CreateBitmapMask	mate/ButtonST.cpp	/^HBITMAP CButtonST::CreateBitmapMask(HBITMAP hSourceBitmap, DWORD dwWidth, DWORD dwHeight, COLORREF crTransColor)$/;"	f	class:CButtonST
CreateDarkerBitmap	mate/ButtonST.cpp	/^HBITMAP CButtonST::CreateDarkerBitmap(HBITMAP hBitmap, DWORD dwWidth, DWORD dwHeight, COLORREF crTrans)$/;"	f	class:CButtonST
CreateDarkerIcon	mate/ButtonST.cpp	/^HICON CButtonST::CreateDarkerIcon(HICON hIcon)$/;"	f	class:CButtonST
CreateExcelApp	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::CreateExcelApp(void) $/;"	f	class:COfficeDrawInfo
CreateFont	mate/Tabwnd.cpp	/^void CTabWnd::CreateFont()$/;"	f	class:CTabWnd
CreateGrayscaleBitmap	mate/ButtonST.cpp	/^HBITMAP CButtonST::CreateGrayscaleBitmap(HBITMAP hBitmap, DWORD dwWidth, DWORD dwHeight, COLORREF crTrans)$/;"	f	class:CButtonST
CreateGrayscaleIcon	mate/ButtonST.cpp	/^HICON CButtonST::CreateGrayscaleIcon(HICON hIcon)$/;"	f	class:CButtonST
CreateLetterContent	mate/msword8.cpp	/^LPDISPATCH _Document::CreateLetterContent(LPCTSTR DateFormat, BOOL IncludeHeaderFooter, LPCTSTR PageDesign, long LetterStyle, BOOL Letterhead, long LetterheadLocation, float LetterheadSize, LPCTSTR RecipientName, LPCTSTR RecipientAddress, $/;"	f	class:_Document
CreateNames	mate/excel8.cpp	/^void Range::CreateNames(const VARIANT& Top, const VARIANT& Left, const VARIANT& Bottom, const VARIANT& Right)$/;"	f	class:Range
CreatePublisher	mate/excel8.cpp	/^void Range::CreatePublisher(const VARIANT& Edition, long Appearance, const VARIANT& ContainsPICT, const VARIANT& ContainsBIFF, const VARIANT& ContainsRTF, const VARIANT& ContainsVALU)$/;"	f	class:Range
CreatePublisher	mate/msword8.cpp	/^void Range2::CreatePublisher(VARIANT* Edition, VARIANT* ContainsPICT, VARIANT* ContainsRTF, VARIANT* ContainsText)$/;"	f	class:Range2
CreateSubFolder	mate/CDRData.cpp	/^LPCTSTR CCDRData::CreateSubFolder(CSetupInfo *pSetupInfo) $/;"	f	class:CCDRData
CreateTable	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::CreateTable(int nRows, int nCols, BOOL bDouble) $/;"	f	class:COfficeDrawInfo
CreateTable_PatientHistory	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::CreateTable_PatientHistory(int nRows) $/;"	f	class:COfficeDrawInfo
CreateTextbox	mate/msword8.cpp	/^void Selection::CreateTextbox()$/;"	f	class:Selection
CreateView	mate/Tabwnd.cpp	/^BOOL CTabWnd::CreateView(LPCTSTR lpszLabel, CRuntimeClass * pViewClass, CCreateContext *pContext)$/;"	f	class:CTabWnd
CreateWordApp	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::CreateWordApp(void) $/;"	f	class:COfficeDrawInfo
CtlColor	mate/ButtonST.cpp	/^HBRUSH CButtonST::CtlColor(CDC* pDC, UINT nCtlColor) $/;"	f	class:CButtonST
CtlColor	mate/Lable.cpp	/^HBRUSH CLable::CtlColor(CDC* pDC, UINT nCtlColor) $/;"	f	class:CLable
Cut	mate/excel8.cpp	/^void Range::Cut(const VARIANT& Destination)$/;"	f	class:Range
Cut	mate/msword8.cpp	/^void Range2::Cut()$/;"	f	class:Range2
Cut	mate/msword8.cpp	/^void Selection::Cut()$/;"	f	class:Selection
DATA_DESC_N	inc/CDRType.h	22;"	d
DATA_DESC_N	tmp/CDRType.h	18;"	d
DA_FMT1	mate/DeviceDrawInfo.h	31;"	d
DA_FMT2	mate/DeviceDrawInfo.h	32;"	d
DA_FMT3	mate/DeviceDrawInfo.h	33;"	d
DA_FMT4	mate/DeviceDrawInfo.h	34;"	d
DA_FMT5	mate/DeviceDrawInfo.h	35;"	d
DA_FMT6	mate/DeviceDrawInfo.h	36;"	d
DA_FMT7	mate/DeviceDrawInfo.h	37;"	d
DBG	inc/main.h	11;"	d
DBG	inc/main.h	17;"	d
DBGN	inc/main.h	12;"	d
DBGN	inc/main.h	18;"	d
DCODE	inc/main.h	13;"	d
DCODE	inc/main.h	19;"	d
DDBToDIB	mate/Lib_Bitmap.cpp	/^HANDLE DDBToDIB(CBitmap& bitmap, DWORD dwCompression, CPalette* pPal) $/;"	f
DDEExecute	mate/excel8.cpp	/^void _ApplicationExcel::DDEExecute(long Channel, LPCTSTR String)$/;"	f	class:_ApplicationExcel
DDEExecute	mate/msword8.cpp	/^void _ApplicationWord::DDEExecute(long Channel, LPCTSTR Command)$/;"	f	class:_ApplicationWord
DDEInitiate	mate/excel8.cpp	/^long _ApplicationExcel::DDEInitiate(LPCTSTR App, LPCTSTR Topic)$/;"	f	class:_ApplicationExcel
DDEInitiate	mate/msword8.cpp	/^long _ApplicationWord::DDEInitiate(LPCTSTR App, LPCTSTR Topic)$/;"	f	class:_ApplicationWord
DDEPoke	mate/excel8.cpp	/^void _ApplicationExcel::DDEPoke(long Channel, const VARIANT& Item, const VARIANT& Data)$/;"	f	class:_ApplicationExcel
DDEPoke	mate/msword8.cpp	/^void _ApplicationWord::DDEPoke(long Channel, LPCTSTR Item, LPCTSTR Data)$/;"	f	class:_ApplicationWord
DDERequest	mate/excel8.cpp	/^VARIANT _ApplicationExcel::DDERequest(long Channel, LPCTSTR Item)$/;"	f	class:_ApplicationExcel
DDERequest	mate/msword8.cpp	/^CString _ApplicationWord::DDERequest(long Channel, LPCTSTR Item)$/;"	f	class:_ApplicationWord
DDETerminate	mate/excel8.cpp	/^void _ApplicationExcel::DDETerminate(long Channel)$/;"	f	class:_ApplicationExcel
DDETerminate	mate/msword8.cpp	/^void _ApplicationWord::DDETerminate(long Channel)$/;"	f	class:_ApplicationWord
DDETerminateAll	mate/msword8.cpp	/^void _ApplicationWord::DDETerminateAll()$/;"	f	class:_ApplicationWord
DECLARE_APPLOG	mate/AppLogFile.h	11;"	d
DEFAULT_STR	conf.c	71;"	d	file:
DEFINE_APPLOG	mate/AppLogFile.h	10;"	d
DEFS	Makefile	/^DEFS=-DNDEBUG$/;"	m
DEF_CONF	main.c	29;"	d	file:
DH_FMT1	mate/DeviceDrawInfo.h	26;"	d
DH_FMT2	mate/DeviceDrawInfo.h	27;"	d
DH_FMT3	mate/DeviceDrawInfo.h	28;"	d
DH_FMT4	mate/DeviceDrawInfo.h	29;"	d
DarkenColor	mate/ButtonST.cpp	/^COLORREF CButtonST::DarkenColor(COLORREF crColor, double dFactor)$/;"	f	class:CButtonST
DataForm	mate/msword8.cpp	/^void _Document::DataForm()$/;"	f	class:_Document
DataSeries	mate/excel8.cpp	/^void Range::DataSeries(const VARIANT& Rowcol, long Type, long Date, const VARIANT& Step, const VARIANT& Stop, const VARIANT& Trend)$/;"	f	class:Range
DelDataInList	mate/CDRMateView.cpp	/^void CCDRMateView::DelDataInList(int nIdx, int nList) $/;"	f	class:CCDRMateView
DelLock	tmp/LogTracer.h	/^	inline void			DelLock() {DeleteCriticalSection(&m_csLock);}$/;"	f	class:CLogTracer
DelLock	tmp/SerialComm.h	/^	inline void			DelLock() {DeleteCriticalSection(&m_csLock);}$/;"	f	class:CSerialComm
Delete	mate/excel8.cpp	/^void Range::Delete(const VARIANT& Shift)$/;"	f	class:Range
Delete	mate/excel8.cpp	/^void Worksheets::Delete()$/;"	f	class:Worksheets
Delete	mate/excel8.cpp	/^void _Worksheet::Delete()$/;"	f	class:_Worksheet
Delete	mate/msword8.cpp	/^long Range2::Delete(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
Delete	mate/msword8.cpp	/^long Selection::Delete(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
Delete	mate/msword8.cpp	/^void Cell::Delete(VARIANT* ShiftCells)$/;"	f	class:Cell
Delete	mate/msword8.cpp	/^void Cells::Delete(VARIANT* ShiftCells)$/;"	f	class:Cells
Delete	mate/msword8.cpp	/^void Column::Delete()$/;"	f	class:Column
Delete	mate/msword8.cpp	/^void Columns::Delete()$/;"	f	class:Columns
Delete	mate/msword8.cpp	/^void Row::Delete()$/;"	f	class:Row
Delete	mate/msword8.cpp	/^void Rows::Delete()$/;"	f	class:Rows
Delete	mate/msword8.cpp	/^void Table::Delete()$/;"	f	class:Table
DeleteChartAutoFormat	mate/excel8.cpp	/^void _ApplicationExcel::DeleteChartAutoFormat(LPCTSTR Name)$/;"	f	class:_ApplicationExcel
DeleteCustomList	mate/excel8.cpp	/^void _ApplicationExcel::DeleteCustomList(long ListNum)$/;"	f	class:_ApplicationExcel
DeleteImportFile	mate/CDRMateView.cpp	/^BOOL CCDRMateView::DeleteImportFile(int nIdx) $/;"	f	class:CCDRMateView
DeleteNumberFormat	mate/excel8.cpp	/^void _Workbook::DeleteNumberFormat(LPCTSTR NumberFormat)$/;"	f	class:_Workbook
DestroyExcelApp	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::DestroyExcelApp(void) $/;"	f	class:COfficeDrawInfo
DestroyWordApp	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::DestroyWordApp(void) $/;"	f	class:COfficeDrawInfo
DialogBox_	mate/excel8.cpp	/^VARIANT Range::DialogBox_()$/;"	f	class:Range
Disconnect	tmp/SerialComm.cpp	/^BOOL CSerialComm::Disconnect(void) $/;"	f	class:CSerialComm
DistributeHeight	mate/msword8.cpp	/^void Cells::DistributeHeight()$/;"	f	class:Cells
DistributeHeight	mate/msword8.cpp	/^void Rows::DistributeHeight()$/;"	f	class:Rows
DistributeWidth	mate/msword8.cpp	/^void Cells::DistributeWidth()$/;"	f	class:Cells
DistributeWidth	mate/msword8.cpp	/^void Columns::DistributeWidth()$/;"	f	class:Columns
DllMain	tmp/CDRDLL.cpp	/^BOOL APIENTRY DllMain( HANDLE hModule, $/;"	f
DoAutoDelete	mate/CDRMateView.cpp	/^void CCDRMateView::DoAutoDelete(int nIdx, int nList) $/;"	f	class:CCDRMateView
DoAutoExport	mate/CDRMateView.cpp	/^void CCDRMateView::DoAutoExport(int nIdx)$/;"	f	class:CCDRMateView
DoAutoPrint	mate/CDRMateView.cpp	/^void CCDRMateView::DoAutoPrint(int nIdx)$/;"	f	class:CCDRMateView
DoAutoTransfer	mate/CDRMateView.cpp	/^void CCDRMateView::DoAutoTransfer(void)$/;"	f	class:CCDRMateView
DoDataExchange	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CAdvancedDlg
DoDataExchange	mate/CDRMate.cpp	/^void CAboutDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CAboutDlg
DoDataExchange	mate/CDRMateView.cpp	/^void CCDRMateView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CCDRMateView
DoDataExchange	mate/ConnectPage.cpp	/^void CConnectPage::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CConnectPage
DoDataExchange	mate/GeneralPage.cpp	/^void CGeneralPage::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CGeneralPage
DoDataExchange	mate/ImportDlg.cpp	/^void CImportDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CImportDlg
DoDataExchange	mate/PatientHistory.cpp	/^void CPatientHistory::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CPatientHistory
DoDataExchange	mate/PrintPage.cpp	/^void CPrintPage::DoDataExchange(CDataExchange* pDX)$/;"	f	class:CPrintPage
DoPrint	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::DoPrint(void) $/;"	f	class:CDeviceDrawInfo
Documents	mate/msword8.h	/^	Documents() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Documents
Documents	mate/msword8.h	/^	Documents(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Documents
Documents	mate/msword8.h	/^	Documents(const Documents& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Documents
Documents	mate/msword8.h	/^class Documents : public COleDispatchDriver$/;"	c
DoubleClick	mate/excel8.cpp	/^void _ApplicationExcel::DoubleClick()$/;"	f	class:_ApplicationExcel
Draw	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::Draw(CDC *pDC) $/;"	f	class:CDeviceDrawInfo
DrawBorder	mate/ButtonST.cpp	/^DWORD CButtonST::DrawBorder(BOOL bDrawBorder, BOOL bRepaint)$/;"	f	class:CButtonST
DrawBvf	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawBvf(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawBvf	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawBvf(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawData	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawData(CDC *pDC, int nCol, int *pLine, int nFormat, const char *pText1,$/;"	f	class:CDeviceDrawInfo
DrawFinalDesc	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawFinalDesc(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawFinalDesc	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawFinalDesc(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawFlatFocus	mate/ButtonST.cpp	/^DWORD CButtonST::DrawFlatFocus(BOOL bDrawFlatFocus, BOOL bRepaint)$/;"	f	class:CButtonST
DrawFooter	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawFooter(CDC *pDC, int nStartCol) $/;"	f	class:CDeviceDrawInfo
DrawHeader	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawHeader(CDC *pDC, int nPageNo, int nStartCol) $/;"	f	class:CDeviceDrawInfo
DrawItem	mate/ButtonST.cpp	/^void CButtonST::DrawItem(LPDRAWITEMSTRUCT lpDIS)$/;"	f	class:CButtonST
DrawItem	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawItem(int nItemNo, CDC *pDC, int nItemIdx) $/;"	f	class:CDeviceDrawInfo
DrawItem	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::DrawItem(int nItemIdx) $/;"	f	class:COfficeDrawInfo
DrawItemHead	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawItemHead(int nCol, CString sItemName, int nRow)$/;"	f	class:COfficeDrawInfo
DrawKerato	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawKerato(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawKerato	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawKerato(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawLenso	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawLenso(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawLenso	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawLenso(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawNpa	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawNpa(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawNpa	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawNpa(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawNpc	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawNpc(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawNpc	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawNpc(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawNraPra	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawNraPra(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawNraPra	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawNraPra(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawPD	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawPD(CDC *pDC) $/;"	f	class:CDeviceDrawInfo
DrawPatientHistory	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawPatientHistory(void) $/;"	f	class:COfficeDrawInfo
DrawPrism	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawPrism(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawPrism	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawPrism(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawRKGraphic	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawRKGraphic(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawRcTest	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawRcTest(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawRcTest	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawRcTest(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawRefracto	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawRefracto(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawRefracto	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawRefracto(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawRetino	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawRetino(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawRetino	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawRetino(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawSelTab	mate/Tabwnd.cpp	/^int CTabWnd::DrawSelTab(CDC *pDC, int x, LPCTSTR szText)$/;"	f	class:CTabWnd
DrawSubject	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawSubject(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawSubject	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawSubject(int nIdx) $/;"	f	class:COfficeDrawInfo
DrawTLGraphic	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawTLGraphic(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
DrawTab	mate/Tabwnd.cpp	/^int CTabWnd::DrawTab(CDC *pDC, int x, LPCTSTR szText)$/;"	f	class:CTabWnd
DrawTableBorder	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawTableBorder(int nRow, int nCol, int nRow2, int nCol2) $/;"	f	class:COfficeDrawInfo
DrawTheBitmap	mate/ButtonST.cpp	/^void CButtonST::DrawTheBitmap(CDC* pDC, BOOL bHasTitle, RECT* rpItem, CRect* rpCaption, BOOL bIsPressed, BOOL bIsDisabled)$/;"	f	class:CButtonST
DrawTheIcon	mate/ButtonST.cpp	/^void CButtonST::DrawTheIcon(CDC* pDC, BOOL bHasTitle, RECT* rpItem, CRect* rpCaption, BOOL bIsPressed, BOOL bIsDisabled)$/;"	f	class:CButtonST
DrawTheText	mate/ButtonST.cpp	/^void CButtonST::DrawTheText(CDC* pDC, LPCTSTR lpszText, RECT* rpItem, CRect* rpCaption, BOOL bIsPressed, BOOL bIsDisabled)$/;"	f	class:CButtonST
DrawTitle	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawTitle(CDC *pDC) $/;"	f	class:CDeviceDrawInfo
DrawTitle	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawTitle(void) $/;"	f	class:COfficeDrawInfo
DrawTransparent	mate/ButtonST.cpp	/^void CButtonST::DrawTransparent(BOOL bRepaint)$/;"	f	class:CButtonST
DrawUnVa	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::DrawUnVa(int nIdx)$/;"	f	class:COfficeDrawInfo
DrawUnva	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::DrawUnva(CDC *pDC, int nIdx) $/;"	f	class:CDeviceDrawInfo
Dump	mate/CDRMateDoc.cpp	/^void CCDRMateDoc::Dump(CDumpContext& dc) const$/;"	f	class:CCDRMateDoc
Dump	mate/CDRMateView.cpp	/^void CCDRMateView::Dump(CDumpContext& dc) const$/;"	f	class:CCDRMateView
Dump	mate/DataView.cpp	/^void CDataView::Dump(CDumpContext& dc) const$/;"	f	class:CDataView
Dump	mate/MainFrm.cpp	/^void CMainFrame::Dump(CDumpContext& dc) const$/;"	f	class:CMainFrame
Dump	mate/ZernikeView.cpp	/^void CZernikeView::Dump(CDumpContext& dc) const$/;"	f	class:CZernikeView
ERROR_LOG	inc/main.h	27;"	d
ERR_ADD_PACKET	inc/main.h	/^	ERR_ADD_PACKET,$/;"	e	enum:error_list
ERR_ALREADY_USED	mate/ErrorCode.h	9;"	d
ERR_BUSY	inc/main.h	/^	ERR_BUSY,$/;"	e	enum:error_list
ERR_CANT_LOAD_EXCEL	mate/ErrorCode.h	7;"	d
ERR_CANT_LOAD_WORD	mate/ErrorCode.h	8;"	d
ERR_CANT_UNLOAD_EXCEL	mate/ErrorCode.h	14;"	d
ERR_CANT_UNLOAD_WORD	mate/ErrorCode.h	13;"	d
ERR_CLM_IMPORT	inc/main.h	/^	ERR_CLM_IMPORT,$/;"	e	enum:error_list
ERR_CONF	inc/main.h	/^	ERR_CONF,$/;"	e	enum:error_list
ERR_CONT	inc/main.h	/^	ERR_CONT,$/;"	e	enum:error_list
ERR_CREATE	inc/main.h	/^	ERR_CREATE,$/;"	e	enum:error_list
ERR_DEL	inc/main.h	/^	ERR_DEL,$/;"	e	enum:error_list
ERR_DUP	inc/main.h	/^	ERR_DUP,$/;"	e	enum:error_list
ERR_END	inc/main.h	/^	ERR_END$/;"	e	enum:error_list
ERR_FAILED_DOCUMENT	mate/ErrorCode.h	11;"	d
ERR_FAILED_EXPORT	mate/ErrorCode.h	10;"	d
ERR_FAILED_WORKSHEET	mate/ErrorCode.h	12;"	d
ERR_FILE_MOVE	inc/main.h	/^	ERR_FILE_MOVE,$/;"	e	enum:error_list
ERR_INVAL	inc/main.h	/^	ERR_INVAL,$/;"	e	enum:error_list
ERR_INVALID_EXT	inc/main.h	/^	ERR_INVALID_EXT,$/;"	e	enum:error_list
ERR_IO	inc/main.h	/^	ERR_IO = 1100,$/;"	e	enum:error_list
ERR_MONITOR	inc/main.h	/^	ERR_MONITOR,$/;"	e	enum:error_list
ERR_MRK_IMPORT	inc/main.h	/^	ERR_MRK_IMPORT,$/;"	e	enum:error_list
ERR_NOENT	inc/main.h	/^	ERR_NOENT,$/;"	e	enum:error_list
ERR_NOMEM	inc/main.h	/^	ERR_NOMEM,$/;"	e	enum:error_list
ERR_NONE	mate/ErrorCode.h	5;"	d
ERR_NOT_FOUND	inc/main.h	/^	ERR_NOT_FOUND,$/;"	e	enum:error_list
ERR_PID	inc/main.h	/^	ERR_PID = 1001,$/;"	e	enum:error_list
ERR_PORT	inc/main.h	/^	ERR_PORT,$/;"	e	enum:error_list
ERR_READ	inc/main.h	/^	ERR_READ,$/;"	e	enum:error_list
ERR_SEND_RAW_PACKET	inc/main.h	/^	ERR_SEND_RAW_PACKET,$/;"	e	enum:error_list
ERR_SIGNAL	inc/main.h	/^	ERR_SIGNAL,$/;"	e	enum:error_list
ERR_STOP	inc/main.h	/^	ERR_STOP,$/;"	e	enum:error_list
ERR_WRITE	inc/main.h	/^	ERR_WRITE,$/;"	e	enum:error_list
EVENT_SIZE	inotify.c	12;"	d	file:
EXCEL_MODE	mate/DeviceDrawInfo.h	42;"	d
EXIT_MAIN_LOOP	main.c	34;"	d	file:
EXIT_PROGRAM	main.c	35;"	d	file:
EXPORT_FILE_EXT	tmp/LogTracer.h	27;"	d
EXPORT_FILE_NAME	tmp/LogTracer.h	26;"	d
EditionOptions	mate/excel8.cpp	/^VARIANT Range::EditionOptions(long Type, long Option, const VARIANT& Name, const VARIANT& Reference, long Appearance, long ChartSize, const VARIANT& Format)$/;"	f	class:Range
EditionOptions	mate/msword8.cpp	/^void _Document::EditionOptions(long Type, long Option, LPCTSTR Name, VARIANT* Format)$/;"	f	class:_Document
Enable	mate/PatientHistory.cpp	/^void CPatientHistory::Enable(CSetupInfo *pSetupInfo)$/;"	f	class:CPatientHistory
EnableBalloonTooltip	mate/ButtonST.cpp	/^DWORD CButtonST::EnableBalloonTooltip()$/;"	f	class:CButtonST
Enabled	mate/SystemTray.h	/^    BOOL Enabled() { return m_bEnabled; }$/;"	f	class:CSystemTray
End	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::End(void) $/;"	f	class:COfficeDrawInfo
EndKey	mate/msword8.cpp	/^long Selection::EndKey(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Selection
EndOf	mate/msword8.cpp	/^long Range2::EndOf(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Range2
EndOf	mate/msword8.cpp	/^long Selection::EndOf(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Selection
EndOfTable	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::EndOfTable(int nSide, int nTotalLine, int nRestLine) $/;"	f	class:COfficeDrawInfo
EscapeKey	mate/msword8.cpp	/^void Selection::EscapeKey()$/;"	f	class:Selection
Evaluate	mate/excel8.cpp	/^VARIANT _ApplicationExcel::Evaluate(const VARIANT& Name)$/;"	f	class:_ApplicationExcel
Evaluate	mate/excel8.cpp	/^VARIANT _Worksheet::Evaluate(const VARIANT& Name)$/;"	f	class:_Worksheet
ExclusiveAccess	mate/excel8.cpp	/^BOOL _Workbook::ExclusiveAccess()$/;"	f	class:_Workbook
ExecuteExcel4Macro	mate/excel8.cpp	/^VARIANT _ApplicationExcel::ExecuteExcel4Macro(LPCTSTR String)$/;"	f	class:_ApplicationExcel
ExitInstance	mate/CDRMate.cpp	/^int CCDRMateApp::ExitInstance() $/;"	f	class:CCDRMateApp
Expand	mate/msword8.cpp	/^long Range2::Expand(VARIANT* Unit)$/;"	f	class:Range2
Expand	mate/msword8.cpp	/^long Selection::Expand(VARIANT* Unit)$/;"	f	class:Selection
Export	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::Export(CSetupInfo *pSetup, CCDRData *pCDR, int nFormat) $/;"	f	class:COfficeDrawInfo
ExportAsCSV	csv_export.c	/^BOOL ExportAsCSV(struct cdr_session *ps, char *pPath, int nPrtcVer) $/;"	f
ExportAsCSV	mate/CDRData.cpp	/^BOOL CCDRData::ExportAsCSV(LPCTSTR pPath, int nPrtcVer) $/;"	f	class:CCDRData
ExportToFile	mate/CDRData.cpp	/^LPCTSTR CCDRData::ExportToFile(CSetupInfo *pSetup, LPCTSTR pPath, LPCTSTR pExt) $/;"	f	class:CCDRData
Extend	mate/msword8.cpp	/^void Selection::Extend(VARIANT* Character)$/;"	f	class:Selection
FALSE	inc/CDRType.h	9;"	d
FIELD_SIZE	inc/CDRType.h	18;"	d
FIELD_SIZE	tmp/CDRType.h	14;"	d
FILE_PATH_MAX_LEN	tmp/LogTracer.h	24;"	d
FIN_DATA	inc/CDRType.h	/^} FIN_DATA ;$/;"	t	typeref:struct:_FIN_DATA
FIN_DATA	tmp/CDRType.h	/^} FIN_DATA ;$/;"	t	typeref:struct:_FIN_DATA
FORMAT_CSV	mate/Define.h	37;"	d
FORMAT_EXCEL	mate/Define.h	39;"	d
FORMAT_NONE	mate/Define.h	36;"	d
FORMAT_WORD	mate/Define.h	38;"	d
FULL_PAGE	mate/SetupInfo.h	22;"	d
FetchBVF	cdr_packet.c	/^int FetchBVF(struct cdr_packet *pkt, BVF_DATA *bvf, BOOL bFarPoint)$/;"	f
FetchBVF	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchBVF(BVF_DATA &bvf, BOOL bFarPoint)$/;"	f	class:CCDRPacket
FetchField	cdr_packet.c	/^int FetchField(struct cdr_packet *pkt, char *pField)$/;"	f
FetchField	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchField(char *pField)$/;"	f	class:CCDRPacket
FetchKR	cdr_packet.c	/^int FetchKR(struct cdr_packet *pkt, KR_DATA *kr)$/;"	f
FetchKR	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchKR(KR_DATA &kr)$/;"	f	class:CCDRPacket
FetchMain	cdr_packet.c	/^int FetchMain(struct cdr_packet *pkt, M_DATA *main)$/;"	f
FetchMain	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchMain(M_DATA &main)$/;"	f	class:CCDRPacket
FetchNMain	cdr_packet.c	/^int FetchNMain(struct cdr_packet *pkt, M_N_DATA *nmain)$/;"	f
FetchNMain	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchNMain(M_N_DATA &nmain)$/;"	f	class:CCDRPacket
FetchPrism	cdr_packet.c	/^int FetchPrism(struct cdr_packet *pkt, P_DATA *prism)$/;"	f
FetchPrism	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchPrism(P_DATA &prism)$/;"	f	class:CCDRPacket
FetchRC	cdr_packet.c	/^int FetchRC(struct cdr_packet *pkt, RC_DATA *rc)$/;"	f
FetchRC	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchRC(RC_DATA &rc)$/;"	f	class:CCDRPacket
FetchVA	cdr_packet.c	/^int FetchVA(struct cdr_packet *pkt, VA_DATA *va)$/;"	f
FetchVA	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchVA(VA_DATA &va)$/;"	f	class:CCDRPacket
FetchZCoeff	cdr_packet.c	/^int FetchZCoeff(struct cdr_packet *pkt, COEFF_DATA *coeff)$/;"	f
FetchZCoeff	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchZCoeff(COEFF_DATA &coeff)$/;"	f	class:CCDRPacket
FetchZHead	cdr_packet.c	/^int FetchZHead(struct cdr_packet *pkt, ZERNIKE_DATA *zdata)$/;"	f
FetchZHead	tmp/CDRPacket.cpp	/^int CCDRPacket::FetchZHead(ZERNIKE_DATA &zdata)$/;"	f	class:CCDRPacket
FillAcrossSheets	mate/excel8.cpp	/^void Worksheets::FillAcrossSheets(LPDISPATCH Range, long Type)$/;"	f	class:Worksheets
FillDown	mate/excel8.cpp	/^void Range::FillDown()$/;"	f	class:Range
FillLeft	mate/excel8.cpp	/^void Range::FillLeft()$/;"	f	class:Range
FillRight	mate/excel8.cpp	/^void Range::FillRight()$/;"	f	class:Range
FillUp	mate/excel8.cpp	/^void Range::FillUp()$/;"	f	class:Range
Find	mate/excel8.cpp	/^LPDISPATCH Range::Find(const VARIANT& What, const VARIANT& After, const VARIANT& LookIn, const VARIANT& LookAt, const VARIANT& SearchOrder, long SearchDirection, const VARIANT& MatchCase, const VARIANT& MatchByte, $/;"	f	class:Range
FindFile	mate/excel8.cpp	/^void _ApplicationExcel::FindFile()$/;"	f	class:_ApplicationExcel
FindNext	mate/excel8.cpp	/^LPDISPATCH Range::FindNext(const VARIANT& After)$/;"	f	class:Range
FindPrevious	mate/excel8.cpp	/^LPDISPATCH Range::FindPrevious(const VARIANT& After)$/;"	f	class:Range
FitToPages	mate/msword8.cpp	/^void _Document::FitToPages()$/;"	f	class:_Document
FollowHyperlink	mate/excel8.cpp	/^void _Workbook::FollowHyperlink(LPCTSTR Address, const VARIANT& SubAddress, const VARIANT& NewWindow, const VARIANT& AddHistory, const VARIANT& ExtraInfo, const VARIANT& Method, const VARIANT& HeaderInfo)$/;"	f	class:_Workbook
FollowHyperlink	mate/msword8.cpp	/^void _Document::FollowHyperlink(VARIANT* Address, VARIANT* SubAddress, VARIANT* NewWindow, VARIANT* AddHistory, VARIANT* ExtraInfo, VARIANT* Method, VARIANT* HeaderInfo)$/;"	f	class:_Document
Font	mate/excel8.h	/^	Font() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Font
Font	mate/excel8.h	/^	Font(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Font
Font	mate/excel8.h	/^	Font(const Font& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Font
Font	mate/excel8.h	/^class Font : public COleDispatchDriver$/;"	c
Formula	mate/msword8.cpp	/^void Cell::Formula(VARIANT* Formula, VARIANT* NumFormat)$/;"	f	class:Cell
ForwardMailer	mate/excel8.cpp	/^void _Workbook::ForwardMailer()$/;"	f	class:_Workbook
ForwardMailer	mate/msword8.cpp	/^void _Document::ForwardMailer()$/;"	f	class:_Document
FreeResources	mate/ButtonST.cpp	/^void CButtonST::FreeResources(BOOL bCheckForNULL)$/;"	f	class:CButtonST
FunctionWizard	mate/excel8.cpp	/^void Range::FunctionWizard()$/;"	f	class:Range
GenerateConnectID	tmp/SerialComm.cpp	/^void CSerialComm::GenerateConnectID(void)$/;"	f	class:CSerialComm
GenerateSystemID	mate/Utility.cpp	/^LPCTSTR GenerateSystemID(void)$/;"	f
GetAcceptLabelsInFormulas	mate/excel8.cpp	/^BOOL _Workbook::GetAcceptLabelsInFormulas()$/;"	f	class:_Workbook
GetActive	mate/msword8.cpp	/^BOOL Selection::GetActive()$/;"	f	class:Selection
GetActiveCell	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetActiveCell()$/;"	f	class:_ApplicationExcel
GetActiveChart	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetActiveChart()$/;"	f	class:_ApplicationExcel
GetActiveChart	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetActiveChart()$/;"	f	class:_Workbook
GetActiveCol	mate/OfficeDrawInfo.cpp	/^int COfficeDrawInfo::GetActiveCol(int nRow, int nCol) $/;"	f	class:COfficeDrawInfo
GetActiveDocument	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetActiveDocument()$/;"	f	class:_ApplicationWord
GetActivePrinter	mate/excel8.cpp	/^CString _ApplicationExcel::GetActivePrinter()$/;"	f	class:_ApplicationExcel
GetActivePrinter	mate/msword8.cpp	/^CString _ApplicationWord::GetActivePrinter()$/;"	f	class:_ApplicationWord
GetActiveSheet	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetActiveSheet()$/;"	f	class:_ApplicationExcel
GetActiveSheet	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetActiveSheet()$/;"	f	class:_Workbook
GetActiveWindow	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetActiveWindow()$/;"	f	class:_ApplicationExcel
GetActiveWindow	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetActiveWindow()$/;"	f	class:_ApplicationWord
GetActiveWindow	mate/msword8.cpp	/^LPDISPATCH _Document::GetActiveWindow()$/;"	f	class:_Document
GetActiveWorkbook	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetActiveWorkbook()$/;"	f	class:_ApplicationExcel
GetActiveWritingStyle	mate/msword8.cpp	/^CString _Document::GetActiveWritingStyle(VARIANT* LanguageID)$/;"	f	class:_Document
GetAddIndent	mate/excel8.cpp	/^VARIANT Range::GetAddIndent()$/;"	f	class:Range
GetAddIns	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetAddIns()$/;"	f	class:_ApplicationExcel
GetAddIns	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetAddIns()$/;"	f	class:_ApplicationWord
GetAddress	mate/excel8.cpp	/^CString Range::GetAddress(const VARIANT& RowAbsolute, const VARIANT& ColumnAbsolute, long ReferenceStyle, const VARIANT& External, const VARIANT& RelativeTo)$/;"	f	class:Range
GetAddress	mate/msword8.cpp	/^CString _ApplicationWord::GetAddress(VARIANT* Name, VARIANT* AddressProperties, VARIANT* UseAutoText, VARIANT* DisplaySelectDialog, VARIANT* SelectDialog, VARIANT* CheckNamesDialog, VARIANT* RecentAddressesChoice, VARIANT* UpdateRecentAddresses)$/;"	f	class:_ApplicationWord
GetAddressLocal	mate/excel8.cpp	/^CString Range::GetAddressLocal(const VARIANT& RowAbsolute, const VARIANT& ColumnAbsolute, long ReferenceStyle, const VARIANT& External, const VARIANT& RelativeTo)$/;"	f	class:Range
GetAge	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetAge(void) $/;"	f	class:CCDRData
GetAlertBeforeOverwriting	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetAlertBeforeOverwriting()$/;"	f	class:_ApplicationExcel
GetAlignment	mate/SetupInfo.cpp	/^int CSetupInfo::GetAlignment(void) $/;"	f	class:CSetupInfo
GetAlignment	mate/msword8.cpp	/^long Paragraph::GetAlignment()$/;"	f	class:Paragraph
GetAlignment	mate/msword8.cpp	/^long Paragraphs::GetAlignment()$/;"	f	class:Paragraphs
GetAlignment	mate/msword8.cpp	/^long Row::GetAlignment()$/;"	f	class:Row
GetAlignment	mate/msword8.cpp	/^long Rows::GetAlignment()$/;"	f	class:Rows
GetAllCaps	mate/msword8.cpp	/^long _Font::GetAllCaps()$/;"	f	class:_Font
GetAllowBreakAcrossPages	mate/msword8.cpp	/^long Row::GetAllowBreakAcrossPages()$/;"	f	class:Row
GetAllowBreakAcrossPages	mate/msword8.cpp	/^long Rows::GetAllowBreakAcrossPages()$/;"	f	class:Rows
GetAltStartupPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetAltStartupPath()$/;"	f	class:_ApplicationExcel
GetAlwaysInFront	mate/msword8.cpp	/^BOOL Borders::GetAlwaysInFront()$/;"	f	class:Borders
GetAnimation	mate/msword8.cpp	/^long _Font::GetAnimation()$/;"	f	class:_Font
GetApplication	mate/excel8.cpp	/^LPDISPATCH Font::GetApplication()$/;"	f	class:Font
GetApplication	mate/excel8.cpp	/^LPDISPATCH Interior::GetApplication()$/;"	f	class:Interior
GetApplication	mate/excel8.cpp	/^LPDISPATCH Range::GetApplication()$/;"	f	class:Range
GetApplication	mate/excel8.cpp	/^LPDISPATCH Workbooks::GetApplication()$/;"	f	class:Workbooks
GetApplication	mate/excel8.cpp	/^LPDISPATCH Worksheets::GetApplication()$/;"	f	class:Worksheets
GetApplication	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetApplication()$/;"	f	class:_ApplicationExcel
GetApplication	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetApplication()$/;"	f	class:_Workbook
GetApplication	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetApplication()$/;"	f	class:_Worksheet
GetApplication	mate/msword8.cpp	/^LPDISPATCH Borders::GetApplication()$/;"	f	class:Borders
GetApplication	mate/msword8.cpp	/^LPDISPATCH Cell::GetApplication()$/;"	f	class:Cell
GetApplication	mate/msword8.cpp	/^LPDISPATCH Cells::GetApplication()$/;"	f	class:Cells
GetApplication	mate/msword8.cpp	/^LPDISPATCH Column::GetApplication()$/;"	f	class:Column
GetApplication	mate/msword8.cpp	/^LPDISPATCH Columns::GetApplication()$/;"	f	class:Columns
GetApplication	mate/msword8.cpp	/^LPDISPATCH Documents::GetApplication()$/;"	f	class:Documents
GetApplication	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetApplication()$/;"	f	class:Paragraph
GetApplication	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetApplication()$/;"	f	class:Paragraphs
GetApplication	mate/msword8.cpp	/^LPDISPATCH Range2::GetApplication()$/;"	f	class:Range2
GetApplication	mate/msword8.cpp	/^LPDISPATCH Row::GetApplication()$/;"	f	class:Row
GetApplication	mate/msword8.cpp	/^LPDISPATCH Rows::GetApplication()$/;"	f	class:Rows
GetApplication	mate/msword8.cpp	/^LPDISPATCH Section::GetApplication()$/;"	f	class:Section
GetApplication	mate/msword8.cpp	/^LPDISPATCH Selection::GetApplication()$/;"	f	class:Selection
GetApplication	mate/msword8.cpp	/^LPDISPATCH Shading::GetApplication()$/;"	f	class:Shading
GetApplication	mate/msword8.cpp	/^LPDISPATCH Table::GetApplication()$/;"	f	class:Table
GetApplication	mate/msword8.cpp	/^LPDISPATCH Tables::GetApplication()$/;"	f	class:Tables
GetApplication	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetApplication()$/;"	f	class:_ApplicationWord
GetApplication	mate/msword8.cpp	/^LPDISPATCH _Document::GetApplication()$/;"	f	class:_Document
GetApplication	mate/msword8.cpp	/^LPDISPATCH _Font::GetApplication()$/;"	f	class:_Font
GetAreas	mate/excel8.cpp	/^LPDISPATCH Range::GetAreas()$/;"	f	class:Range
GetAskToUpdateLinks	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetAskToUpdateLinks()$/;"	f	class:_ApplicationExcel
GetAssistant	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetAssistant()$/;"	f	class:_ApplicationExcel
GetAssistant	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetAssistant()$/;"	f	class:_ApplicationWord
GetAt	cdr_packet.c	/^static int GetAt(struct cdr_packet *pkt, int nPos)$/;"	f	file:
GetAt	tmp/CDRPacket.cpp	/^int CCDRPacket::GetAt(int nPos)$/;"	f	class:CCDRPacket
GetAttachedTemplate	mate/msword8.cpp	/^VARIANT _Document::GetAttachedTemplate()$/;"	f	class:_Document
GetAutoCaptions	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetAutoCaptions()$/;"	f	class:_ApplicationWord
GetAutoCorrect	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetAutoCorrect()$/;"	f	class:_ApplicationExcel
GetAutoCorrect	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetAutoCorrect()$/;"	f	class:_ApplicationWord
GetAutoFilter	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetAutoFilter()$/;"	f	class:_Worksheet
GetAutoFilterMode	mate/excel8.cpp	/^BOOL _Worksheet::GetAutoFilterMode()$/;"	f	class:_Worksheet
GetAutoFormatType	mate/msword8.cpp	/^long Table::GetAutoFormatType()$/;"	f	class:Table
GetAutoHyphenation	mate/msword8.cpp	/^BOOL _Document::GetAutoHyphenation()$/;"	f	class:_Document
GetAutoUpdateFrequency	mate/excel8.cpp	/^long _Workbook::GetAutoUpdateFrequency()$/;"	f	class:_Workbook
GetAutoUpdateSaveChanges	mate/excel8.cpp	/^BOOL _Workbook::GetAutoUpdateSaveChanges()$/;"	f	class:_Workbook
GetBackground	mate/excel8.cpp	/^VARIANT Font::GetBackground()$/;"	f	class:Font
GetBackground	mate/msword8.cpp	/^LPDISPATCH _Document::GetBackground()$/;"	f	class:_Document
GetBackgroundPatternColorIndex	mate/msword8.cpp	/^long Shading::GetBackgroundPatternColorIndex()$/;"	f	class:Shading
GetBackgroundPrintingStatus	mate/msword8.cpp	/^long _ApplicationWord::GetBackgroundPrintingStatus()$/;"	f	class:_ApplicationWord
GetBackgroundSavingStatus	mate/msword8.cpp	/^long _ApplicationWord::GetBackgroundSavingStatus()$/;"	f	class:_ApplicationWord
GetBold	mate/excel8.cpp	/^VARIANT Font::GetBold()$/;"	f	class:Font
GetBold	mate/msword8.cpp	/^long Range2::GetBold()$/;"	f	class:Range2
GetBold	mate/msword8.cpp	/^long _Font::GetBold()$/;"	f	class:_Font
GetBookmarkID	mate/msword8.cpp	/^long Range2::GetBookmarkID()$/;"	f	class:Range2
GetBookmarkID	mate/msword8.cpp	/^long Selection::GetBookmarkID()$/;"	f	class:Selection
GetBookmarks	mate/msword8.cpp	/^LPDISPATCH Range2::GetBookmarks()$/;"	f	class:Range2
GetBookmarks	mate/msword8.cpp	/^LPDISPATCH Selection::GetBookmarks()$/;"	f	class:Selection
GetBookmarks	mate/msword8.cpp	/^LPDISPATCH _Document::GetBookmarks()$/;"	f	class:_Document
GetBorders	mate/excel8.cpp	/^LPDISPATCH Range::GetBorders()$/;"	f	class:Range
GetBorders	mate/msword8.cpp	/^LPDISPATCH Cell::GetBorders()$/;"	f	class:Cell
GetBorders	mate/msword8.cpp	/^LPDISPATCH Cells::GetBorders()$/;"	f	class:Cells
GetBorders	mate/msword8.cpp	/^LPDISPATCH Column::GetBorders()$/;"	f	class:Column
GetBorders	mate/msword8.cpp	/^LPDISPATCH Columns::GetBorders()$/;"	f	class:Columns
GetBorders	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetBorders()$/;"	f	class:Paragraph
GetBorders	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetBorders()$/;"	f	class:Paragraphs
GetBorders	mate/msword8.cpp	/^LPDISPATCH Range2::GetBorders()$/;"	f	class:Range2
GetBorders	mate/msword8.cpp	/^LPDISPATCH Row::GetBorders()$/;"	f	class:Row
GetBorders	mate/msword8.cpp	/^LPDISPATCH Rows::GetBorders()$/;"	f	class:Rows
GetBorders	mate/msword8.cpp	/^LPDISPATCH Section::GetBorders()$/;"	f	class:Section
GetBorders	mate/msword8.cpp	/^LPDISPATCH Selection::GetBorders()$/;"	f	class:Selection
GetBorders	mate/msword8.cpp	/^LPDISPATCH Table::GetBorders()$/;"	f	class:Table
GetBorders	mate/msword8.cpp	/^LPDISPATCH _Font::GetBorders()$/;"	f	class:_Font
GetBrowseExtraFileTypes	mate/msword8.cpp	/^CString _ApplicationWord::GetBrowseExtraFileTypes()$/;"	f	class:_ApplicationWord
GetBrowser	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetBrowser()$/;"	f	class:_ApplicationWord
GetBuild	mate/excel8.cpp	/^long _ApplicationExcel::GetBuild()$/;"	f	class:_ApplicationExcel
GetBuild	mate/msword8.cpp	/^CString _ApplicationWord::GetBuild()$/;"	f	class:_ApplicationWord
GetBuiltInDocumentProperties	mate/msword8.cpp	/^LPDISPATCH _Document::GetBuiltInDocumentProperties()$/;"	f	class:_Document
GetBuiltinDocumentProperties	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetBuiltinDocumentProperties()$/;"	f	class:_Workbook
GetCDRData	mate/CDRMateView.cpp	/^CCDRData* CCDRMateView::GetCDRData(int nIdx)$/;"	f	class:CCDRMateView
GetCalculateBeforeSave	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetCalculateBeforeSave()$/;"	f	class:_ApplicationExcel
GetCalculation	mate/excel8.cpp	/^long _ApplicationExcel::GetCalculation()$/;"	f	class:_ApplicationExcel
GetCaller	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetCaller(const VARIANT& Index)$/;"	f	class:_ApplicationExcel
GetCanPlaySounds	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetCanPlaySounds()$/;"	f	class:_ApplicationExcel
GetCanRecordSounds	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetCanRecordSounds()$/;"	f	class:_ApplicationExcel
GetCapsLock	mate/msword8.cpp	/^BOOL _ApplicationWord::GetCapsLock()$/;"	f	class:_ApplicationWord
GetCaption	mate/excel8.cpp	/^CString _ApplicationExcel::GetCaption()$/;"	f	class:_ApplicationExcel
GetCaption	mate/msword8.cpp	/^CString _ApplicationWord::GetCaption()$/;"	f	class:_ApplicationWord
GetCaptionLabels	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetCaptionLabels()$/;"	f	class:_ApplicationWord
GetCase	mate/msword8.cpp	/^long Range2::GetCase()$/;"	f	class:Range2
GetCellDragAndDrop	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetCellDragAndDrop()$/;"	f	class:_ApplicationExcel
GetCellName	mate/OfficeDrawInfo.cpp	/^CString COfficeDrawInfo::GetCellName(int nRow, int nCol) $/;"	f	class:COfficeDrawInfo
GetCells	mate/excel8.cpp	/^LPDISPATCH Range::GetCells()$/;"	f	class:Range
GetCells	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetCells()$/;"	f	class:_ApplicationExcel
GetCells	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetCells()$/;"	f	class:_Worksheet
GetCells	mate/msword8.cpp	/^LPDISPATCH Column::GetCells()$/;"	f	class:Column
GetCells	mate/msword8.cpp	/^LPDISPATCH Range2::GetCells()$/;"	f	class:Range2
GetCells	mate/msword8.cpp	/^LPDISPATCH Row::GetCells()$/;"	f	class:Row
GetCells	mate/msword8.cpp	/^LPDISPATCH Selection::GetCells()$/;"	f	class:Selection
GetChangeHistoryDuration	mate/excel8.cpp	/^long _Workbook::GetChangeHistoryDuration()$/;"	f	class:_Workbook
GetCharacters	mate/excel8.cpp	/^LPDISPATCH Range::GetCharacters(const VARIANT& Start, const VARIANT& Length)$/;"	f	class:Range
GetCharacters	mate/msword8.cpp	/^LPDISPATCH Range2::GetCharacters()$/;"	f	class:Range2
GetCharacters	mate/msword8.cpp	/^LPDISPATCH Selection::GetCharacters()$/;"	f	class:Selection
GetCharacters	mate/msword8.cpp	/^LPDISPATCH _Document::GetCharacters()$/;"	f	class:_Document
GetCharts	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetCharts()$/;"	f	class:_ApplicationExcel
GetCharts	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetCharts()$/;"	f	class:_Workbook
GetCheck	mate/ButtonST.cpp	/^int CButtonST::GetCheck()$/;"	f	class:CButtonST
GetCircularReference	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetCircularReference()$/;"	f	class:_Worksheet
GetClipboardFormats	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetClipboardFormats(const VARIANT& Index)$/;"	f	class:_ApplicationExcel
GetCodeName	mate/excel8.cpp	/^CString _Workbook::GetCodeName()$/;"	f	class:_Workbook
GetCodeName	mate/excel8.cpp	/^CString _Worksheet::GetCodeName()$/;"	f	class:_Worksheet
GetCodeName	mate/msword8.cpp	/^CString _Document::GetCodeName()$/;"	f	class:_Document
GetColor	mate/ButtonST.cpp	/^DWORD CButtonST::GetColor(BYTE byColorIndex, COLORREF* crpColor)$/;"	f	class:CButtonST
GetColor	mate/excel8.cpp	/^VARIANT Font::GetColor()$/;"	f	class:Font
GetColor	mate/excel8.cpp	/^VARIANT Interior::GetColor()$/;"	f	class:Interior
GetColorIndex	mate/excel8.cpp	/^VARIANT Font::GetColorIndex()$/;"	f	class:Font
GetColorIndex	mate/excel8.cpp	/^VARIANT Interior::GetColorIndex()$/;"	f	class:Interior
GetColorIndex	mate/msword8.cpp	/^long _Font::GetColorIndex()$/;"	f	class:_Font
GetColors	mate/excel8.cpp	/^VARIANT _Workbook::GetColors(const VARIANT& Index)$/;"	f	class:_Workbook
GetColumn	mate/excel8.cpp	/^long Range::GetColumn()$/;"	f	class:Range
GetColumn	mate/msword8.cpp	/^LPDISPATCH Cell::GetColumn()$/;"	f	class:Cell
GetColumnIndex	mate/msword8.cpp	/^long Cell::GetColumnIndex()$/;"	f	class:Cell
GetColumnSelectMode	mate/msword8.cpp	/^BOOL Selection::GetColumnSelectMode()$/;"	f	class:Selection
GetColumnWidth	mate/excel8.cpp	/^VARIANT Range::GetColumnWidth()$/;"	f	class:Range
GetColumns	mate/excel8.cpp	/^LPDISPATCH Range::GetColumns()$/;"	f	class:Range
GetColumns	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetColumns()$/;"	f	class:_ApplicationExcel
GetColumns	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetColumns()$/;"	f	class:_Worksheet
GetColumns	mate/msword8.cpp	/^LPDISPATCH Range2::GetColumns()$/;"	f	class:Range2
GetColumns	mate/msword8.cpp	/^LPDISPATCH Selection::GetColumns()$/;"	f	class:Selection
GetColumns	mate/msword8.cpp	/^LPDISPATCH Table::GetColumns()$/;"	f	class:Table
GetCommandBars	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetCommandBars()$/;"	f	class:_ApplicationExcel
GetCommandBars	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetCommandBars()$/;"	f	class:_Workbook
GetCommandBars	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetCommandBars()$/;"	f	class:_ApplicationWord
GetCommandBars	mate/msword8.cpp	/^LPDISPATCH _Document::GetCommandBars()$/;"	f	class:_Document
GetCommandUnderlines	mate/excel8.cpp	/^long _ApplicationExcel::GetCommandUnderlines()$/;"	f	class:_ApplicationExcel
GetComment	mate/excel8.cpp	/^LPDISPATCH Range::GetComment()$/;"	f	class:Range
GetComments	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetComments()$/;"	f	class:_Worksheet
GetComments	mate/msword8.cpp	/^LPDISPATCH Range2::GetComments()$/;"	f	class:Range2
GetComments	mate/msword8.cpp	/^LPDISPATCH Selection::GetComments()$/;"	f	class:Selection
GetComments	mate/msword8.cpp	/^LPDISPATCH _Document::GetComments()$/;"	f	class:_Document
GetCompanyInfo	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetCompanyInfo(void) $/;"	f	class:CCDRData
GetCompatibility	mate/msword8.cpp	/^BOOL _Document::GetCompatibility(long Type)$/;"	f	class:_Document
GetConflictResolution	mate/excel8.cpp	/^long _Workbook::GetConflictResolution()$/;"	f	class:_Workbook
GetConnectID	tmp/SerialComm.cpp	/^const char* CSerialComm::GetConnectID(void) $/;"	f	class:CSerialComm
GetConsecutiveHyphensLimit	mate/msword8.cpp	/^long _Document::GetConsecutiveHyphensLimit()$/;"	f	class:_Document
GetConsolidationFunction	mate/excel8.cpp	/^long _Worksheet::GetConsolidationFunction()$/;"	f	class:_Worksheet
GetConsolidationOptions	mate/excel8.cpp	/^VARIANT _Worksheet::GetConsolidationOptions()$/;"	f	class:_Worksheet
GetConsolidationSources	mate/excel8.cpp	/^VARIANT _Worksheet::GetConsolidationSources()$/;"	f	class:_Worksheet
GetConstrainNumeric	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetConstrainNumeric()$/;"	f	class:_ApplicationExcel
GetContainer	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetContainer()$/;"	f	class:_Workbook
GetContainer	mate/msword8.cpp	/^LPDISPATCH _Document::GetContainer()$/;"	f	class:_Document
GetContent	mate/msword8.cpp	/^LPDISPATCH _Document::GetContent()$/;"	f	class:_Document
GetControlCharacters	mate/excel8.cpp	/^long _ApplicationExcel::GetControlCharacters()$/;"	f	class:_ApplicationExcel
GetCopyObjectsWithCells	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetCopyObjectsWithCells()$/;"	f	class:_ApplicationExcel
GetCount	mate/excel8.cpp	/^long Range::GetCount()$/;"	f	class:Range
GetCount	mate/excel8.cpp	/^long Workbooks::GetCount()$/;"	f	class:Workbooks
GetCount	mate/excel8.cpp	/^long Worksheets::GetCount()$/;"	f	class:Worksheets
GetCount	mate/msword8.cpp	/^long Borders::GetCount()$/;"	f	class:Borders
GetCount	mate/msword8.cpp	/^long Cells::GetCount()$/;"	f	class:Cells
GetCount	mate/msword8.cpp	/^long Columns::GetCount()$/;"	f	class:Columns
GetCount	mate/msword8.cpp	/^long Documents::GetCount()$/;"	f	class:Documents
GetCount	mate/msword8.cpp	/^long Paragraphs::GetCount()$/;"	f	class:Paragraphs
GetCount	mate/msword8.cpp	/^long Rows::GetCount()$/;"	f	class:Rows
GetCount	mate/msword8.cpp	/^long Tables::GetCount()$/;"	f	class:Tables
GetCreateBackup	mate/excel8.cpp	/^BOOL _Workbook::GetCreateBackup()$/;"	f	class:_Workbook
GetCreator	mate/excel8.cpp	/^long Font::GetCreator()$/;"	f	class:Font
GetCreator	mate/excel8.cpp	/^long Interior::GetCreator()$/;"	f	class:Interior
GetCreator	mate/excel8.cpp	/^long Range::GetCreator()$/;"	f	class:Range
GetCreator	mate/excel8.cpp	/^long Workbooks::GetCreator()$/;"	f	class:Workbooks
GetCreator	mate/excel8.cpp	/^long Worksheets::GetCreator()$/;"	f	class:Worksheets
GetCreator	mate/excel8.cpp	/^long _ApplicationExcel::GetCreator()$/;"	f	class:_ApplicationExcel
GetCreator	mate/excel8.cpp	/^long _Workbook::GetCreator()$/;"	f	class:_Workbook
GetCreator	mate/excel8.cpp	/^long _Worksheet::GetCreator()$/;"	f	class:_Worksheet
GetCreator	mate/msword8.cpp	/^long Borders::GetCreator()$/;"	f	class:Borders
GetCreator	mate/msword8.cpp	/^long Cell::GetCreator()$/;"	f	class:Cell
GetCreator	mate/msword8.cpp	/^long Cells::GetCreator()$/;"	f	class:Cells
GetCreator	mate/msword8.cpp	/^long Column::GetCreator()$/;"	f	class:Column
GetCreator	mate/msword8.cpp	/^long Columns::GetCreator()$/;"	f	class:Columns
GetCreator	mate/msword8.cpp	/^long Documents::GetCreator()$/;"	f	class:Documents
GetCreator	mate/msword8.cpp	/^long Paragraph::GetCreator()$/;"	f	class:Paragraph
GetCreator	mate/msword8.cpp	/^long Paragraphs::GetCreator()$/;"	f	class:Paragraphs
GetCreator	mate/msword8.cpp	/^long Range2::GetCreator()$/;"	f	class:Range2
GetCreator	mate/msword8.cpp	/^long Row::GetCreator()$/;"	f	class:Row
GetCreator	mate/msword8.cpp	/^long Rows::GetCreator()$/;"	f	class:Rows
GetCreator	mate/msword8.cpp	/^long Section::GetCreator()$/;"	f	class:Section
GetCreator	mate/msword8.cpp	/^long Selection::GetCreator()$/;"	f	class:Selection
GetCreator	mate/msword8.cpp	/^long Shading::GetCreator()$/;"	f	class:Shading
GetCreator	mate/msword8.cpp	/^long Table::GetCreator()$/;"	f	class:Table
GetCreator	mate/msword8.cpp	/^long Tables::GetCreator()$/;"	f	class:Tables
GetCreator	mate/msword8.cpp	/^long _ApplicationWord::GetCreator()$/;"	f	class:_ApplicationWord
GetCreator	mate/msword8.cpp	/^long _Document::GetCreator()$/;"	f	class:_Document
GetCreator	mate/msword8.cpp	/^long _Font::GetCreator()$/;"	f	class:_Font
GetCrossReferenceItems	mate/msword8.cpp	/^VARIANT _Document::GetCrossReferenceItems(VARIANT* ReferenceType)$/;"	f	class:_Document
GetCurrentAppPath	tmp/LogTracer.h	/^	LPCTSTR GetCurrentAppPath(void)$/;"	f	class:CLogTracer
GetCurrentArray	mate/excel8.cpp	/^LPDISPATCH Range::GetCurrentArray()$/;"	f	class:Range
GetCurrentPath	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetCurrentPath(void) $/;"	f	class:CAppLogFile
GetCurrentRegion	mate/excel8.cpp	/^LPDISPATCH Range::GetCurrentRegion()$/;"	f	class:Range
GetCurrentTimeStr	tmp/LogTracer.h	/^	LPCTSTR GetCurrentTimeStr(BOOL bPath = FALSE, BOOL bDate = FALSE)$/;"	f	class:CLogTracer
GetCursor	mate/excel8.cpp	/^long _ApplicationExcel::GetCursor()$/;"	f	class:_ApplicationExcel
GetCursorMovement	mate/excel8.cpp	/^long _ApplicationExcel::GetCursorMovement()$/;"	f	class:_ApplicationExcel
GetCustomDictionaries	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetCustomDictionaries()$/;"	f	class:_ApplicationWord
GetCustomDocumentProperties	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetCustomDocumentProperties()$/;"	f	class:_Workbook
GetCustomDocumentProperties	mate/msword8.cpp	/^LPDISPATCH _Document::GetCustomDocumentProperties()$/;"	f	class:_Document
GetCustomListContents	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetCustomListContents(long ListNum)$/;"	f	class:_ApplicationExcel
GetCustomListCount	mate/excel8.cpp	/^long _ApplicationExcel::GetCustomListCount()$/;"	f	class:_ApplicationExcel
GetCustomListNum	mate/excel8.cpp	/^long _ApplicationExcel::GetCustomListNum(const VARIANT& ListArray)$/;"	f	class:_ApplicationExcel
GetCustomViews	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetCustomViews()$/;"	f	class:_Workbook
GetCustomizationContext	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetCustomizationContext()$/;"	f	class:_ApplicationWord
GetCutCopyMode	mate/excel8.cpp	/^long _ApplicationExcel::GetCutCopyMode()$/;"	f	class:_ApplicationExcel
GetDDEAppReturnCode	mate/excel8.cpp	/^long _ApplicationExcel::GetDDEAppReturnCode()$/;"	f	class:_ApplicationExcel
GetData	mate/CDROpPannel.cpp	/^LPCTSTR CCDROpPannel::GetData(int nCateg, int nParam)$/;"	f	class:CCDROpPannel
GetData	tmp/CDRSession.cpp	/^LPCSTR CCDRSession::GetData(int nCateg, int nParam)$/;"	f	class:CCDRSession
GetData	tmp/SerialComm.cpp	/^LPCSTR CSerialComm::GetData(int nCateg, int nParam) $/;"	f	class:CSerialComm
GetDataDesc	tmp/CDRPacket.cpp	/^char* CCDRPacket::GetDataDesc(void) $/;"	f	class:CCDRPacket
GetDataEntryMode	mate/excel8.cpp	/^long _ApplicationExcel::GetDataEntryMode()$/;"	f	class:_ApplicationExcel
GetDataPtr	mate/CDRData.cpp	/^void* CCDRData::GetDataPtr(int nItem) $/;"	f	class:CCDRData
GetDataPtr	mate/DeviceDrawInfo.cpp	/^void* CDeviceDrawInfo::GetDataPtr(void) $/;"	f	class:CDeviceDrawInfo
GetDataStr	csv_export.c	/^static char * GetDataStr(struct cdr_session *ps, int nIdx, int nPrtcVer) $/;"	f	file:
GetDataStr	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetDataStr(int nIdx, int nPrtcVer) $/;"	f	class:CCDRData
GetDate	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetDate(void) $/;"	f	class:CCDRData
GetDate1904	mate/excel8.cpp	/^BOOL _Workbook::GetDate1904()$/;"	f	class:_Workbook
GetDefault	mate/ButtonST.cpp	/^BOOL CButtonST::GetDefault()$/;"	f	class:CButtonST
GetDefaultFilePath	mate/excel8.cpp	/^CString _ApplicationExcel::GetDefaultFilePath()$/;"	f	class:_ApplicationExcel
GetDefaultSaveFormat	mate/excel8.cpp	/^long _ApplicationExcel::GetDefaultSaveFormat()$/;"	f	class:_ApplicationExcel
GetDefaultSaveFormat	mate/msword8.cpp	/^CString _ApplicationWord::GetDefaultSaveFormat()$/;"	f	class:_ApplicationWord
GetDefaultSheetDirection	mate/excel8.cpp	/^long _ApplicationExcel::GetDefaultSheetDirection()$/;"	f	class:_ApplicationExcel
GetDefaultTabStop	mate/msword8.cpp	/^float _Document::GetDefaultTabStop()$/;"	f	class:_Document
GetDefaultTableSeparator	mate/msword8.cpp	/^CString _ApplicationWord::GetDefaultTableSeparator()$/;"	f	class:_ApplicationWord
GetDependents	mate/excel8.cpp	/^LPDISPATCH Range::GetDependents()$/;"	f	class:Range
GetDialogs	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetDialogs()$/;"	f	class:_ApplicationExcel
GetDialogs	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetDialogs()$/;"	f	class:_ApplicationWord
GetDirectDependents	mate/excel8.cpp	/^LPDISPATCH Range::GetDirectDependents()$/;"	f	class:Range
GetDirectPrecedents	mate/excel8.cpp	/^LPDISPATCH Range::GetDirectPrecedents()$/;"	f	class:Range
GetDisplayAlerts	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayAlerts()$/;"	f	class:_ApplicationExcel
GetDisplayAlerts	mate/msword8.cpp	/^long _ApplicationWord::GetDisplayAlerts()$/;"	f	class:_ApplicationWord
GetDisplayAutoCompleteTips	mate/msword8.cpp	/^BOOL _ApplicationWord::GetDisplayAutoCompleteTips()$/;"	f	class:_ApplicationWord
GetDisplayClipboardWindow	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayClipboardWindow()$/;"	f	class:_ApplicationExcel
GetDisplayCommentIndicator	mate/excel8.cpp	/^long _ApplicationExcel::GetDisplayCommentIndicator()$/;"	f	class:_ApplicationExcel
GetDisplayDrawingObjects	mate/excel8.cpp	/^long _Workbook::GetDisplayDrawingObjects()$/;"	f	class:_Workbook
GetDisplayExcel4Menus	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayExcel4Menus()$/;"	f	class:_ApplicationExcel
GetDisplayFormulaBar	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayFormulaBar()$/;"	f	class:_ApplicationExcel
GetDisplayFullScreen	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayFullScreen()$/;"	f	class:_ApplicationExcel
GetDisplayNoteIndicator	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayNoteIndicator()$/;"	f	class:_ApplicationExcel
GetDisplayPageBreaks	mate/excel8.cpp	/^BOOL _Worksheet::GetDisplayPageBreaks()$/;"	f	class:_Worksheet
GetDisplayRecentFiles	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayRecentFiles()$/;"	f	class:_ApplicationExcel
GetDisplayRecentFiles	mate/msword8.cpp	/^BOOL _ApplicationWord::GetDisplayRecentFiles()$/;"	f	class:_ApplicationWord
GetDisplayScreenTips	mate/msword8.cpp	/^BOOL _ApplicationWord::GetDisplayScreenTips()$/;"	f	class:_ApplicationWord
GetDisplayScrollBars	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayScrollBars()$/;"	f	class:_ApplicationExcel
GetDisplayScrollBars	mate/msword8.cpp	/^BOOL _ApplicationWord::GetDisplayScrollBars()$/;"	f	class:_ApplicationWord
GetDisplayStatusBar	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetDisplayStatusBar()$/;"	f	class:_ApplicationExcel
GetDisplayStatusBar	mate/msword8.cpp	/^BOOL _ApplicationWord::GetDisplayStatusBar()$/;"	f	class:_ApplicationWord
GetDistanceFrom	mate/msword8.cpp	/^long Borders::GetDistanceFrom()$/;"	f	class:Borders
GetDistanceFromBottom	mate/msword8.cpp	/^long Borders::GetDistanceFromBottom()$/;"	f	class:Borders
GetDistanceFromLeft	mate/msword8.cpp	/^long Borders::GetDistanceFromLeft()$/;"	f	class:Borders
GetDistanceFromRight	mate/msword8.cpp	/^long Borders::GetDistanceFromRight()$/;"	f	class:Borders
GetDistanceFromTop	mate/msword8.cpp	/^long Borders::GetDistanceFromTop()$/;"	f	class:Borders
GetDocument	mate/CDRMateView.cpp	/^CCDRMateDoc* CCDRMateView::GetDocument() \/\/ non-debug version is inline$/;"	f	class:CCDRMateView
GetDocument	mate/CDRMateView.h	/^inline CCDRMateDoc* CCDRMateView::GetDocument()$/;"	f	class:CCDRMateView
GetDocument	mate/msword8.cpp	/^LPDISPATCH Selection::GetDocument()$/;"	f	class:Selection
GetDocuments	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetDocuments()$/;"	f	class:_ApplicationWord
GetDominantEye	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetDominantEye(void) $/;"	f	class:CCDRData
GetDoubleStrikeThrough	mate/msword8.cpp	/^long _Font::GetDoubleStrikeThrough()$/;"	f	class:_Font
GetDropCap	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetDropCap()$/;"	f	class:Paragraph
GetDuplicate	mate/msword8.cpp	/^LPDISPATCH Range2::GetDuplicate()$/;"	f	class:Range2
GetDuplicate	mate/msword8.cpp	/^LPDISPATCH _Font::GetDuplicate()$/;"	f	class:_Font
GetEditDirectlyInCell	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetEditDirectlyInCell()$/;"	f	class:_ApplicationExcel
GetEmbedTrueTypeFonts	mate/msword8.cpp	/^BOOL _Document::GetEmbedTrueTypeFonts()$/;"	f	class:_Document
GetEmboss	mate/msword8.cpp	/^long _Font::GetEmboss()$/;"	f	class:_Font
GetEmptyDataRule	mate/SetupInfo.cpp	/^int CSetupInfo::GetEmptyDataRule(void) $/;"	f	class:CSetupInfo
GetEnable	mate/msword8.cpp	/^long Borders::GetEnable()$/;"	f	class:Borders
GetEnableAnimations	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetEnableAnimations()$/;"	f	class:_ApplicationExcel
GetEnableAutoComplete	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetEnableAutoComplete()$/;"	f	class:_ApplicationExcel
GetEnableAutoFilter	mate/excel8.cpp	/^BOOL _Worksheet::GetEnableAutoFilter()$/;"	f	class:_Worksheet
GetEnableCalculation	mate/excel8.cpp	/^BOOL _Worksheet::GetEnableCalculation()$/;"	f	class:_Worksheet
GetEnableCancelKey	mate/excel8.cpp	/^long _ApplicationExcel::GetEnableCancelKey()$/;"	f	class:_ApplicationExcel
GetEnableCancelKey	mate/msword8.cpp	/^long _ApplicationWord::GetEnableCancelKey()$/;"	f	class:_ApplicationWord
GetEnableEvents	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetEnableEvents()$/;"	f	class:_ApplicationExcel
GetEnableFirstPageInSection	mate/msword8.cpp	/^BOOL Borders::GetEnableFirstPageInSection()$/;"	f	class:Borders
GetEnableOtherPagesInSection	mate/msword8.cpp	/^BOOL Borders::GetEnableOtherPagesInSection()$/;"	f	class:Borders
GetEnableOutlining	mate/excel8.cpp	/^BOOL _Worksheet::GetEnableOutlining()$/;"	f	class:_Worksheet
GetEnablePivotTable	mate/excel8.cpp	/^BOOL _Worksheet::GetEnablePivotTable()$/;"	f	class:_Worksheet
GetEnableSelection	mate/excel8.cpp	/^long _Worksheet::GetEnableSelection()$/;"	f	class:_Worksheet
GetEnableSound	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetEnableSound()$/;"	f	class:_ApplicationExcel
GetEnd	mate/excel8.cpp	/^LPDISPATCH Range::GetEnd(long Direction)$/;"	f	class:Range
GetEnd	mate/msword8.cpp	/^long Range2::GetEnd()$/;"	f	class:Range2
GetEnd	mate/msword8.cpp	/^long Selection::GetEnd()$/;"	f	class:Selection
GetEndnotes	mate/msword8.cpp	/^LPDISPATCH Range2::GetEndnotes()$/;"	f	class:Range2
GetEndnotes	mate/msword8.cpp	/^LPDISPATCH Selection::GetEndnotes()$/;"	f	class:Selection
GetEndnotes	mate/msword8.cpp	/^LPDISPATCH _Document::GetEndnotes()$/;"	f	class:_Document
GetEngrave	mate/msword8.cpp	/^long _Font::GetEngrave()$/;"	f	class:_Font
GetEntireColumn	mate/excel8.cpp	/^LPDISPATCH Range::GetEntireColumn()$/;"	f	class:Range
GetEntireRow	mate/excel8.cpp	/^LPDISPATCH Range::GetEntireRow()$/;"	f	class:Range
GetEnvelope	mate/msword8.cpp	/^LPDISPATCH _Document::GetEnvelope()$/;"	f	class:_Document
GetErrCode	mate/Error.cpp	/^int GetErrCode(void) $/;"	f
GetErrStr	mate/Error.cpp	/^LPCTSTR GetErrStr(void) $/;"	f
GetExcel4IntlMacroSheets	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetExcel4IntlMacroSheets()$/;"	f	class:_ApplicationExcel
GetExcel4IntlMacroSheets	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetExcel4IntlMacroSheets()$/;"	f	class:_Workbook
GetExcel4MacroSheets	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetExcel4MacroSheets()$/;"	f	class:_ApplicationExcel
GetExcel4MacroSheets	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetExcel4MacroSheets()$/;"	f	class:_Workbook
GetExePath	mate/Utility.cpp	/^LPCTSTR GetExePath(void) $/;"	f
GetExportFileName	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetExportFileName(CSetupInfo *pSetup, BOOL bAuto) $/;"	f	class:CCDRData
GetExportFormat	mate/SetupInfo.cpp	/^int CSetupInfo::GetExportFormat(void) $/;"	f	class:CSetupInfo
GetExportFormat	mate/Utility.cpp	/^int GetExportFormat(LPCTSTR pExt) $/;"	f
GetExtendMode	mate/msword8.cpp	/^BOOL Selection::GetExtendMode()$/;"	f	class:Selection
GetFavoredSysID	tmp/CDRSession.cpp	/^int CCDRSession::GetFavoredSysID(void) $/;"	f	class:CCDRSession
GetField	cdr_packet.c	/^static BOOL GetField(struct cdr_packet *pkt, char *pField, int nBegPos, int nEndPos)$/;"	f	file:
GetField	tmp/CDRPacket.cpp	/^BOOL CCDRPacket::GetField(char *pField, int nBegPos, int nEndPos)$/;"	f	class:CCDRPacket
GetFieldNum	csv_export.c	/^static int GetFieldNum(int nPrtcVer)$/;"	f	file:
GetFieldNum	mate/CDRData.cpp	/^int CCDRData::GetFieldNum(int nPrtcVer)$/;"	f	class:CCDRData
GetFieldNum	mate/CLMData.cpp	/^int CCLMData::GetFieldNum(void) $/;"	f	class:CCLMData
GetFieldNum	mate/MRKData.cpp	/^int CMRKData::GetFieldNum(void) $/;"	f	class:CMRKData
GetFields	mate/msword8.cpp	/^LPDISPATCH Range2::GetFields()$/;"	f	class:Range2
GetFields	mate/msword8.cpp	/^LPDISPATCH Selection::GetFields()$/;"	f	class:Selection
GetFields	mate/msword8.cpp	/^LPDISPATCH _Document::GetFields()$/;"	f	class:_Document
GetFileConverters	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetFileConverters(const VARIANT& Index1, const VARIANT& Index2)$/;"	f	class:_ApplicationExcel
GetFileConverters	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetFileConverters()$/;"	f	class:_ApplicationWord
GetFileDataNo	mate/CDRMateView.cpp	/^LPCTSTR CCDRMateView::GetFileDataNo(CString sPath) $/;"	f	class:CCDRMateView
GetFileFind	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetFileFind()$/;"	f	class:_ApplicationExcel
GetFileFormat	mate/excel8.cpp	/^long _Workbook::GetFileFormat()$/;"	f	class:_Workbook
GetFileSearch	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetFileSearch()$/;"	f	class:_ApplicationExcel
GetFileSearch	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetFileSearch()$/;"	f	class:_ApplicationWord
GetFilterMode	mate/excel8.cpp	/^BOOL _Worksheet::GetFilterMode()$/;"	f	class:_Worksheet
GetFind	mate/msword8.cpp	/^LPDISPATCH Range2::GetFind()$/;"	f	class:Range2
GetFind	mate/msword8.cpp	/^LPDISPATCH Selection::GetFind()$/;"	f	class:Selection
GetFindKey	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetFindKey(long KeyCode, VARIANT* KeyCode2)$/;"	f	class:_ApplicationWord
GetFirst	mate/msword8.cpp	/^LPDISPATCH Columns::GetFirst()$/;"	f	class:Columns
GetFirst	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetFirst()$/;"	f	class:Paragraphs
GetFirst	mate/msword8.cpp	/^LPDISPATCH Rows::GetFirst()$/;"	f	class:Rows
GetFirstFieldPos	tmp/CDRPacket.cpp	/^int	CCDRPacket::GetFirstFieldPos(void)$/;"	f	class:CCDRPacket
GetFirstLineIndent	mate/msword8.cpp	/^float Paragraph::GetFirstLineIndent()$/;"	f	class:Paragraph
GetFirstLineIndent	mate/msword8.cpp	/^float Paragraphs::GetFirstLineIndent()$/;"	f	class:Paragraphs
GetFirstMsgToSend	tmp/SerialComm.cpp	/^BOOL CSerialComm::GetFirstMsgToSend(char* pBuff, int nBuffSize, int* pMsgSize, int* pNextPos)$/;"	f	class:CSerialComm
GetFirstReceivedMsg	tmp/SerialComm.cpp	/^BOOL CSerialComm::GetFirstReceivedMsg(char* pBuff, int nBuffSize, int* pMsgSize)$/;"	f	class:CSerialComm
GetFixedDecimal	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetFixedDecimal()$/;"	f	class:_ApplicationExcel
GetFixedDecimalPlaces	mate/excel8.cpp	/^long _ApplicationExcel::GetFixedDecimalPlaces()$/;"	f	class:_ApplicationExcel
GetFlags	mate/msword8.cpp	/^long Selection::GetFlags()$/;"	f	class:Selection
GetFocusInMailHeader	mate/msword8.cpp	/^BOOL _ApplicationWord::GetFocusInMailHeader()$/;"	f	class:_ApplicationWord
GetFont	mate/excel8.cpp	/^LPDISPATCH Range::GetFont()$/;"	f	class:Range
GetFont	mate/msword8.cpp	/^LPDISPATCH Range2::GetFont()$/;"	f	class:Range2
GetFont	mate/msword8.cpp	/^LPDISPATCH Selection::GetFont()$/;"	f	class:Selection
GetFontNames	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetFontNames()$/;"	f	class:_ApplicationWord
GetFontSize	mate/SetupInfo.cpp	/^int CSetupInfo::GetFontSize(void) $/;"	f	class:CSetupInfo
GetFontStyle	mate/excel8.cpp	/^VARIANT Font::GetFontStyle()$/;"	f	class:Font
GetFooters	mate/msword8.cpp	/^LPDISPATCH Section::GetFooters()$/;"	f	class:Section
GetFootnotes	mate/msword8.cpp	/^LPDISPATCH Range2::GetFootnotes()$/;"	f	class:Range2
GetFootnotes	mate/msword8.cpp	/^LPDISPATCH Selection::GetFootnotes()$/;"	f	class:Selection
GetFootnotes	mate/msword8.cpp	/^LPDISPATCH _Document::GetFootnotes()$/;"	f	class:_Document
GetForegroundPatternColorIndex	mate/msword8.cpp	/^long Shading::GetForegroundPatternColorIndex()$/;"	f	class:Shading
GetFormFields	mate/msword8.cpp	/^LPDISPATCH Range2::GetFormFields()$/;"	f	class:Range2
GetFormFields	mate/msword8.cpp	/^LPDISPATCH Selection::GetFormFields()$/;"	f	class:Selection
GetFormFields	mate/msword8.cpp	/^LPDISPATCH _Document::GetFormFields()$/;"	f	class:_Document
GetFormat	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetFormat()$/;"	f	class:Paragraph
GetFormat	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetFormat()$/;"	f	class:Paragraphs
GetFormatConditions	mate/excel8.cpp	/^LPDISPATCH Range::GetFormatConditions()$/;"	f	class:Range
GetFormattedText	mate/msword8.cpp	/^LPDISPATCH Range2::GetFormattedText()$/;"	f	class:Range2
GetFormattedText	mate/msword8.cpp	/^LPDISPATCH Selection::GetFormattedText()$/;"	f	class:Selection
GetFormsDesign	mate/msword8.cpp	/^BOOL _Document::GetFormsDesign()$/;"	f	class:_Document
GetFormula	mate/excel8.cpp	/^VARIANT Range::GetFormula()$/;"	f	class:Range
GetFormulaArray	mate/excel8.cpp	/^VARIANT Range::GetFormulaArray()$/;"	f	class:Range
GetFormulaHidden	mate/excel8.cpp	/^VARIANT Range::GetFormulaHidden()$/;"	f	class:Range
GetFormulaLabel	mate/excel8.cpp	/^long Range::GetFormulaLabel()$/;"	f	class:Range
GetFormulaLocal	mate/excel8.cpp	/^VARIANT Range::GetFormulaLocal()$/;"	f	class:Range
GetFormulaR1C1	mate/excel8.cpp	/^VARIANT Range::GetFormulaR1C1()$/;"	f	class:Range
GetFormulaR1C1Local	mate/excel8.cpp	/^VARIANT Range::GetFormulaR1C1Local()$/;"	f	class:Range
GetFrames	mate/msword8.cpp	/^LPDISPATCH Range2::GetFrames()$/;"	f	class:Range2
GetFrames	mate/msword8.cpp	/^LPDISPATCH Selection::GetFrames()$/;"	f	class:Selection
GetFrames	mate/msword8.cpp	/^LPDISPATCH _Document::GetFrames()$/;"	f	class:_Document
GetFullName	mate/excel8.cpp	/^CString _Workbook::GetFullName()$/;"	f	class:_Workbook
GetFullName	mate/msword8.cpp	/^CString _Document::GetFullName()$/;"	f	class:_Document
GetGender	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetGender(void) $/;"	f	class:CCDRData
GetGrammarChecked	mate/msword8.cpp	/^BOOL Range2::GetGrammarChecked()$/;"	f	class:Range2
GetGrammarChecked	mate/msword8.cpp	/^BOOL _Document::GetGrammarChecked()$/;"	f	class:_Document
GetGrammaticalErrors	mate/msword8.cpp	/^LPDISPATCH Range2::GetGrammaticalErrors()$/;"	f	class:Range2
GetGrammaticalErrors	mate/msword8.cpp	/^LPDISPATCH _Document::GetGrammaticalErrors()$/;"	f	class:_Document
GetHPageBreaks	mate/excel8.cpp	/^LPDISPATCH Worksheets::GetHPageBreaks()$/;"	f	class:Worksheets
GetHPageBreaks	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetHPageBreaks()$/;"	f	class:_Worksheet
GetHasArray	mate/excel8.cpp	/^VARIANT Range::GetHasArray()$/;"	f	class:Range
GetHasFormula	mate/excel8.cpp	/^VARIANT Range::GetHasFormula()$/;"	f	class:Range
GetHasHorizontal	mate/msword8.cpp	/^BOOL Borders::GetHasHorizontal()$/;"	f	class:Borders
GetHasMailer	mate/msword8.cpp	/^BOOL _Document::GetHasMailer()$/;"	f	class:_Document
GetHasPassword	mate/excel8.cpp	/^BOOL _Workbook::GetHasPassword()$/;"	f	class:_Workbook
GetHasPassword	mate/msword8.cpp	/^BOOL _Document::GetHasPassword()$/;"	f	class:_Document
GetHasRoutingSlip	mate/excel8.cpp	/^BOOL _Workbook::GetHasRoutingSlip()$/;"	f	class:_Workbook
GetHasRoutingSlip	mate/msword8.cpp	/^BOOL _Document::GetHasRoutingSlip()$/;"	f	class:_Document
GetHasVertical	mate/msword8.cpp	/^BOOL Borders::GetHasVertical()$/;"	f	class:Borders
GetHeaderFooter	mate/msword8.cpp	/^LPDISPATCH Selection::GetHeaderFooter()$/;"	f	class:Selection
GetHeaders	mate/msword8.cpp	/^LPDISPATCH Section::GetHeaders()$/;"	f	class:Section
GetHeadingFormat	mate/msword8.cpp	/^long Row::GetHeadingFormat()$/;"	f	class:Row
GetHeadingFormat	mate/msword8.cpp	/^long Rows::GetHeadingFormat()$/;"	f	class:Rows
GetHeight	mate/excel8.cpp	/^VARIANT Range::GetHeight()$/;"	f	class:Range
GetHeight	mate/excel8.cpp	/^double _ApplicationExcel::GetHeight()$/;"	f	class:_ApplicationExcel
GetHeight	mate/msword8.cpp	/^float Cell::GetHeight()$/;"	f	class:Cell
GetHeight	mate/msword8.cpp	/^float Cells::GetHeight()$/;"	f	class:Cells
GetHeight	mate/msword8.cpp	/^float Row::GetHeight()$/;"	f	class:Row
GetHeight	mate/msword8.cpp	/^float Rows::GetHeight()$/;"	f	class:Rows
GetHeight	mate/msword8.cpp	/^long _ApplicationWord::GetHeight()$/;"	f	class:_ApplicationWord
GetHeightRule	mate/msword8.cpp	/^long Cell::GetHeightRule()$/;"	f	class:Cell
GetHeightRule	mate/msword8.cpp	/^long Cells::GetHeightRule()$/;"	f	class:Cells
GetHeightRule	mate/msword8.cpp	/^long Row::GetHeightRule()$/;"	f	class:Row
GetHeightRule	mate/msword8.cpp	/^long Rows::GetHeightRule()$/;"	f	class:Rows
GetHidden	mate/excel8.cpp	/^VARIANT Range::GetHidden()$/;"	f	class:Range
GetHidden	mate/msword8.cpp	/^long _Font::GetHidden()$/;"	f	class:_Font
GetHighlightChangesOnScreen	mate/excel8.cpp	/^BOOL _Workbook::GetHighlightChangesOnScreen()$/;"	f	class:_Workbook
GetHighlightColorIndex	mate/msword8.cpp	/^long Range2::GetHighlightColorIndex()$/;"	f	class:Range2
GetHorizontalAlignment	mate/excel8.cpp	/^VARIANT Range::GetHorizontalAlignment()$/;"	f	class:Range
GetHyperlinks	mate/excel8.cpp	/^LPDISPATCH Range::GetHyperlinks()$/;"	f	class:Range
GetHyperlinks	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetHyperlinks()$/;"	f	class:_Worksheet
GetHyperlinks	mate/msword8.cpp	/^LPDISPATCH Range2::GetHyperlinks()$/;"	f	class:Range2
GetHyperlinks	mate/msword8.cpp	/^LPDISPATCH Selection::GetHyperlinks()$/;"	f	class:Selection
GetHyperlinks	mate/msword8.cpp	/^LPDISPATCH _Document::GetHyperlinks()$/;"	f	class:_Document
GetHyphenateCaps	mate/msword8.cpp	/^BOOL _Document::GetHyphenateCaps()$/;"	f	class:_Document
GetHyphenation	mate/msword8.cpp	/^long Paragraph::GetHyphenation()$/;"	f	class:Paragraph
GetHyphenation	mate/msword8.cpp	/^long Paragraphs::GetHyphenation()$/;"	f	class:Paragraphs
GetHyphenationZone	mate/msword8.cpp	/^long _Document::GetHyphenationZone()$/;"	f	class:_Document
GetIPAtEndOfLine	mate/msword8.cpp	/^BOOL Selection::GetIPAtEndOfLine()$/;"	f	class:Selection
GetIcon	mate/SystemTray.cpp	/^HICON CSystemTray::GetIcon() const$/;"	f	class:CSystemTray
GetIgnoreRemoteRequests	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetIgnoreRemoteRequests()$/;"	f	class:_ApplicationExcel
GetIndentLevel	mate/excel8.cpp	/^VARIANT Range::GetIndentLevel()$/;"	f	class:Range
GetIndex	mate/excel8.cpp	/^long _Worksheet::GetIndex()$/;"	f	class:_Worksheet
GetIndex	mate/msword8.cpp	/^long Column::GetIndex()$/;"	f	class:Column
GetIndex	mate/msword8.cpp	/^long Row::GetIndex()$/;"	f	class:Row
GetIndex	mate/msword8.cpp	/^long Section::GetIndex()$/;"	f	class:Section
GetIndexes	mate/msword8.cpp	/^LPDISPATCH _Document::GetIndexes()$/;"	f	class:_Document
GetInfo	mate/PatientHistory.cpp	/^void CPatientHistory::GetInfo(CCDRData *pCDR) $/;"	f	class:CPatientHistory
GetInformation	mate/msword8.cpp	/^VARIANT Range2::GetInformation(long Type)$/;"	f	class:Range2
GetInformation	mate/msword8.cpp	/^VARIANT Selection::GetInformation(long Type)$/;"	f	class:Selection
GetInlineShapes	mate/msword8.cpp	/^LPDISPATCH Range2::GetInlineShapes()$/;"	f	class:Range2
GetInlineShapes	mate/msword8.cpp	/^LPDISPATCH Selection::GetInlineShapes()$/;"	f	class:Selection
GetInlineShapes	mate/msword8.cpp	/^LPDISPATCH _Document::GetInlineShapes()$/;"	f	class:_Document
GetInputItemCnt	mate/SetupInfo.cpp	/^int CSetupInfo::GetInputItemCnt(void) $/;"	f	class:CSetupInfo
GetInsideColorIndex	mate/msword8.cpp	/^long Borders::GetInsideColorIndex()$/;"	f	class:Borders
GetInsideLineStyle	mate/msword8.cpp	/^long Borders::GetInsideLineStyle()$/;"	f	class:Borders
GetInsideLineWidth	mate/msword8.cpp	/^long Borders::GetInsideLineWidth()$/;"	f	class:Borders
GetInteractive	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetInteractive()$/;"	f	class:_ApplicationExcel
GetInterior	mate/excel8.cpp	/^LPDISPATCH Range::GetInterior()$/;"	f	class:Range
GetInternational	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetInternational(const VARIANT& Index)$/;"	f	class:_ApplicationExcel
GetInternational	mate/msword8.cpp	/^VARIANT _ApplicationWord::GetInternational(long Index)$/;"	f	class:_ApplicationWord
GetInvertIfNegative	mate/excel8.cpp	/^VARIANT Interior::GetInvertIfNegative()$/;"	f	class:Interior
GetIsAddin	mate/excel8.cpp	/^BOOL _Workbook::GetIsAddin()$/;"	f	class:_Workbook
GetIsEndOfRowMark	mate/msword8.cpp	/^BOOL Range2::GetIsEndOfRowMark()$/;"	f	class:Range2
GetIsEndOfRowMark	mate/msword8.cpp	/^BOOL Selection::GetIsEndOfRowMark()$/;"	f	class:Selection
GetIsFirst	mate/msword8.cpp	/^BOOL Column::GetIsFirst()$/;"	f	class:Column
GetIsFirst	mate/msword8.cpp	/^BOOL Row::GetIsFirst()$/;"	f	class:Row
GetIsInplace	mate/excel8.cpp	/^BOOL _Workbook::GetIsInplace()$/;"	f	class:_Workbook
GetIsLast	mate/msword8.cpp	/^BOOL Column::GetIsLast()$/;"	f	class:Column
GetIsLast	mate/msword8.cpp	/^BOOL Row::GetIsLast()$/;"	f	class:Row
GetIsMasterDocument	mate/msword8.cpp	/^BOOL _Document::GetIsMasterDocument()$/;"	f	class:_Document
GetIsObjectValid	mate/msword8.cpp	/^BOOL _ApplicationWord::GetIsObjectValid(LPDISPATCH Object)$/;"	f	class:_ApplicationWord
GetIsSubdocument	mate/msword8.cpp	/^BOOL _Document::GetIsSubdocument()$/;"	f	class:_Document
GetItalic	mate/excel8.cpp	/^VARIANT Font::GetItalic()$/;"	f	class:Font
GetItalic	mate/msword8.cpp	/^long Range2::GetItalic()$/;"	f	class:Range2
GetItalic	mate/msword8.cpp	/^long _Font::GetItalic()$/;"	f	class:_Font
GetItem	mate/excel8.cpp	/^LPDISPATCH Workbooks::GetItem(const VARIANT& Index)$/;"	f	class:Workbooks
GetItem	mate/excel8.cpp	/^LPDISPATCH Worksheets::GetItem(const VARIANT& Index)$/;"	f	class:Worksheets
GetItem	mate/excel8.cpp	/^VARIANT Range::GetItem(const VARIANT& RowIndex, const VARIANT& ColumnIndex)$/;"	f	class:Range
GetItemIndex	mate/Utility.cpp	/^int GetItemIndex(const char *pItemName) $/;"	f
GetItemLine	mate/CDRData.cpp	/^int CCDRData::GetItemLine(int nItem, BOOL bSkip, int nLineMode) $/;"	f	class:CCDRData
GetItemLine	mate/CLMData.cpp	/^int CCLMData::GetItemLine(int nItem, BOOL bSkip) $/;"	f	class:CCLMData
GetItemLine	mate/MRKData.cpp	/^int CMRKData::GetItemLine(int nItem, BOOL bSkip) $/;"	f	class:CMRKData
GetItemLine	mate/Utility.cpp	/^int	GetItemLine(int nItem, void *pData, BOOL bSkip) $/;"	f
GetItemName	mate/Utility.cpp	/^LPCTSTR GetItemName(int nItemIdx) $/;"	f
GetItemNum	mate/SetupInfo.cpp	/^int CSetupInfo::GetItemNum(void) $/;"	f	class:CSetupInfo
GetItemPtr	mate/SetupInfo.cpp	/^int* CSetupInfo::GetItemPtr(void) $/;"	f	class:CSetupInfo
GetIteration	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetIteration()$/;"	f	class:_ApplicationExcel
GetJoinBorders	mate/msword8.cpp	/^BOOL Borders::GetJoinBorders()$/;"	f	class:Borders
GetKeepChangeHistory	mate/excel8.cpp	/^BOOL _Workbook::GetKeepChangeHistory()$/;"	f	class:_Workbook
GetKeepTogether	mate/msword8.cpp	/^long Paragraph::GetKeepTogether()$/;"	f	class:Paragraph
GetKeepTogether	mate/msword8.cpp	/^long Paragraphs::GetKeepTogether()$/;"	f	class:Paragraphs
GetKeepWithNext	mate/msword8.cpp	/^long Paragraph::GetKeepWithNext()$/;"	f	class:Paragraph
GetKeepWithNext	mate/msword8.cpp	/^long Paragraphs::GetKeepWithNext()$/;"	f	class:Paragraphs
GetKerning	mate/msword8.cpp	/^float _Font::GetKerning()$/;"	f	class:_Font
GetKeyBindings	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetKeyBindings()$/;"	f	class:_ApplicationWord
GetKeysBoundTo	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetKeysBoundTo(long KeyCategory, LPCTSTR Command, VARIANT* CommandParameter)$/;"	f	class:_ApplicationWord
GetKind	mate/msword8.cpp	/^long _Document::GetKind()$/;"	f	class:_Document
GetLandscapeFontNames	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetLandscapeFontNames()$/;"	f	class:_ApplicationWord
GetLanguageID	mate/msword8.cpp	/^long Range2::GetLanguageID()$/;"	f	class:Range2
GetLanguageID	mate/msword8.cpp	/^long Selection::GetLanguageID()$/;"	f	class:Selection
GetLanguageIDFarEast	mate/msword8.cpp	/^long Range2::GetLanguageIDFarEast()$/;"	f	class:Range2
GetLanguageIDFarEast	mate/msword8.cpp	/^long Selection::GetLanguageIDFarEast()$/;"	f	class:Selection
GetLanguageIDOther	mate/msword8.cpp	/^long Range2::GetLanguageIDOther()$/;"	f	class:Range2
GetLanguageIDOther	mate/msword8.cpp	/^long Selection::GetLanguageIDOther()$/;"	f	class:Selection
GetLanguages	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetLanguages()$/;"	f	class:_ApplicationWord
GetLast	mate/msword8.cpp	/^LPDISPATCH Columns::GetLast()$/;"	f	class:Columns
GetLast	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetLast()$/;"	f	class:Paragraphs
GetLast	mate/msword8.cpp	/^LPDISPATCH Rows::GetLast()$/;"	f	class:Rows
GetLeft	mate/excel8.cpp	/^VARIANT Range::GetLeft()$/;"	f	class:Range
GetLeft	mate/excel8.cpp	/^double _ApplicationExcel::GetLeft()$/;"	f	class:_ApplicationExcel
GetLeft	mate/msword8.cpp	/^long _ApplicationWord::GetLeft()$/;"	f	class:_ApplicationWord
GetLeftIndent	mate/msword8.cpp	/^float Paragraph::GetLeftIndent()$/;"	f	class:Paragraph
GetLeftIndent	mate/msword8.cpp	/^float Paragraphs::GetLeftIndent()$/;"	f	class:Paragraphs
GetLeftIndent	mate/msword8.cpp	/^float Row::GetLeftIndent()$/;"	f	class:Row
GetLeftIndent	mate/msword8.cpp	/^float Rows::GetLeftIndent()$/;"	f	class:Rows
GetLetterContent	mate/msword8.cpp	/^LPDISPATCH _Document::GetLetterContent()$/;"	f	class:_Document
GetLibraryPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetLibraryPath()$/;"	f	class:_ApplicationExcel
GetLimitOfRecvList	mate/SetupInfo.cpp	/^int CSetupInfo::GetLimitOfRecvList(void) $/;"	f	class:CSetupInfo
GetLimitOfTranList	mate/SetupInfo.cpp	/^int CSetupInfo::GetLimitOfTranList(void) $/;"	f	class:CSetupInfo
GetLineSpacing	mate/msword8.cpp	/^float Paragraph::GetLineSpacing()$/;"	f	class:Paragraph
GetLineSpacing	mate/msword8.cpp	/^float Paragraphs::GetLineSpacing()$/;"	f	class:Paragraphs
GetLineSpacingRule	mate/msword8.cpp	/^long Paragraph::GetLineSpacingRule()$/;"	f	class:Paragraph
GetLineSpacingRule	mate/msword8.cpp	/^long Paragraphs::GetLineSpacingRule()$/;"	f	class:Paragraphs
GetListChangesOnNewSheet	mate/excel8.cpp	/^BOOL _Workbook::GetListChangesOnNewSheet()$/;"	f	class:_Workbook
GetListFormat	mate/msword8.cpp	/^LPDISPATCH Range2::GetListFormat()$/;"	f	class:Range2
GetListGalleries	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetListGalleries()$/;"	f	class:_ApplicationWord
GetListHeaderRows	mate/excel8.cpp	/^long Range::GetListHeaderRows()$/;"	f	class:Range
GetListParagraphs	mate/msword8.cpp	/^LPDISPATCH Range2::GetListParagraphs()$/;"	f	class:Range2
GetListParagraphs	mate/msword8.cpp	/^LPDISPATCH _Document::GetListParagraphs()$/;"	f	class:_Document
GetListTemplates	mate/msword8.cpp	/^LPDISPATCH _Document::GetListTemplates()$/;"	f	class:_Document
GetLists	mate/msword8.cpp	/^LPDISPATCH _Document::GetLists()$/;"	f	class:_Document
GetLocationInTable	mate/excel8.cpp	/^long Range::GetLocationInTable()$/;"	f	class:Range
GetLocked	mate/excel8.cpp	/^VARIANT Range::GetLocked()$/;"	f	class:Range
GetMAPIAvailable	mate/msword8.cpp	/^BOOL _ApplicationWord::GetMAPIAvailable()$/;"	f	class:_ApplicationWord
GetMacroContainer	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetMacroContainer()$/;"	f	class:_ApplicationWord
GetMailMerge	mate/msword8.cpp	/^LPDISPATCH _Document::GetMailMerge()$/;"	f	class:_Document
GetMailMessage	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetMailMessage()$/;"	f	class:_ApplicationWord
GetMailSession	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetMailSession()$/;"	f	class:_ApplicationExcel
GetMailSystem	mate/excel8.cpp	/^long _ApplicationExcel::GetMailSystem()$/;"	f	class:_ApplicationExcel
GetMailSystem	mate/msword8.cpp	/^long _ApplicationWord::GetMailSystem()$/;"	f	class:_ApplicationWord
GetMailer	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetMailer()$/;"	f	class:_Workbook
GetMailer	mate/msword8.cpp	/^LPDISPATCH _Document::GetMailer()$/;"	f	class:_Document
GetMailingLabel	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetMailingLabel()$/;"	f	class:_ApplicationWord
GetMathCoprocessorAvailable	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetMathCoprocessorAvailable()$/;"	f	class:_ApplicationExcel
GetMathCoprocessorAvailable	mate/msword8.cpp	/^BOOL _ApplicationWord::GetMathCoprocessorAvailable()$/;"	f	class:_ApplicationWord
GetMaxChange	mate/excel8.cpp	/^double _ApplicationExcel::GetMaxChange()$/;"	f	class:_ApplicationExcel
GetMaxIterations	mate/excel8.cpp	/^long _ApplicationExcel::GetMaxIterations()$/;"	f	class:_ApplicationExcel
GetMemoryFree	mate/excel8.cpp	/^long _ApplicationExcel::GetMemoryFree()$/;"	f	class:_ApplicationExcel
GetMemoryTotal	mate/excel8.cpp	/^long _ApplicationExcel::GetMemoryTotal()$/;"	f	class:_ApplicationExcel
GetMemoryUsed	mate/excel8.cpp	/^long _ApplicationExcel::GetMemoryUsed()$/;"	f	class:_ApplicationExcel
GetMenuDefaultItem	mate/SystemTray.cpp	/^void CSystemTray::GetMenuDefaultItem(UINT& uItem, BOOL& bByPos)$/;"	f	class:CSystemTray
GetMergeArea	mate/excel8.cpp	/^LPDISPATCH Range::GetMergeArea()$/;"	f	class:Range
GetMergeCells	mate/excel8.cpp	/^VARIANT Range::GetMergeCells()$/;"	f	class:Range
GetMouseAvailable	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetMouseAvailable()$/;"	f	class:_ApplicationExcel
GetMouseAvailable	mate/msword8.cpp	/^BOOL _ApplicationWord::GetMouseAvailable()$/;"	f	class:_ApplicationWord
GetMoveAfterReturn	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetMoveAfterReturn()$/;"	f	class:_ApplicationExcel
GetMoveAfterReturnDirection	mate/excel8.cpp	/^long _ApplicationExcel::GetMoveAfterReturnDirection()$/;"	f	class:_ApplicationExcel
GetMultiUserEditing	mate/excel8.cpp	/^BOOL _Workbook::GetMultiUserEditing()$/;"	f	class:_Workbook
GetName	mate/excel8.cpp	/^CString _ApplicationExcel::GetName()$/;"	f	class:_ApplicationExcel
GetName	mate/excel8.cpp	/^CString _Workbook::GetName()$/;"	f	class:_Workbook
GetName	mate/excel8.cpp	/^CString _Worksheet::GetName()$/;"	f	class:_Worksheet
GetName	mate/excel8.cpp	/^VARIANT Font::GetName()$/;"	f	class:Font
GetName	mate/excel8.cpp	/^VARIANT Range::GetName()$/;"	f	class:Range
GetName	mate/msword8.cpp	/^CString _ApplicationWord::GetName()$/;"	f	class:_ApplicationWord
GetName	mate/msword8.cpp	/^CString _Document::GetName()$/;"	f	class:_Document
GetName	mate/msword8.cpp	/^CString _Font::GetName()$/;"	f	class:_Font
GetNameAscii	mate/msword8.cpp	/^CString _Font::GetNameAscii()$/;"	f	class:_Font
GetNameFarEast	mate/msword8.cpp	/^CString _Font::GetNameFarEast()$/;"	f	class:_Font
GetNameOther	mate/msword8.cpp	/^CString _Font::GetNameOther()$/;"	f	class:_Font
GetNames	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetNames()$/;"	f	class:_ApplicationExcel
GetNames	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetNames()$/;"	f	class:_Workbook
GetNames	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetNames()$/;"	f	class:_Worksheet
GetNetworkTemplatesPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetNetworkTemplatesPath()$/;"	f	class:_ApplicationExcel
GetNext	mate/excel8.cpp	/^LPDISPATCH Range::GetNext()$/;"	f	class:Range
GetNext	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetNext()$/;"	f	class:_Worksheet
GetNext	mate/msword8.cpp	/^LPDISPATCH Cell::GetNext()$/;"	f	class:Cell
GetNext	mate/msword8.cpp	/^LPDISPATCH Column::GetNext()$/;"	f	class:Column
GetNext	mate/msword8.cpp	/^LPDISPATCH Row::GetNext()$/;"	f	class:Row
GetNextItemLine	mate/DeviceDrawInfo.cpp	/^int CDeviceDrawInfo::GetNextItemLine(int *pItem, int nItemNum, int nFromIdx, BOOL bSkip) $/;"	f	class:CDeviceDrawInfo
GetNextItemType	mate/DeviceDrawInfo.cpp	/^int CDeviceDrawInfo::GetNextItemType(int *pItem, int nItemNum, int nFromIdx, BOOL bSkip) $/;"	f	class:CDeviceDrawInfo
GetNextStoryRange	mate/msword8.cpp	/^LPDISPATCH Range2::GetNextStoryRange()$/;"	f	class:Range2
GetNoLineNumber	mate/msword8.cpp	/^long Paragraph::GetNoLineNumber()$/;"	f	class:Paragraph
GetNoLineNumber	mate/msword8.cpp	/^long Paragraphs::GetNoLineNumber()$/;"	f	class:Paragraphs
GetNormalTemplate	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetNormalTemplate()$/;"	f	class:_ApplicationWord
GetNotificationWnd	mate/SystemTray.cpp	/^CWnd* CSystemTray::GetNotificationWnd() const$/;"	f	class:CSystemTray
GetNumLock	mate/msword8.cpp	/^BOOL _ApplicationWord::GetNumLock()$/;"	f	class:_ApplicationWord
GetNumberFormat	mate/excel8.cpp	/^VARIANT Range::GetNumberFormat()$/;"	f	class:Range
GetNumberFormatLocal	mate/excel8.cpp	/^VARIANT Range::GetNumberFormatLocal()$/;"	f	class:Range
GetODBCErrors	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetODBCErrors()$/;"	f	class:_ApplicationExcel
GetODBCTimeout	mate/excel8.cpp	/^long _ApplicationExcel::GetODBCTimeout()$/;"	f	class:_ApplicationExcel
GetOfficeVersion	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetOfficeVersion(void) $/;"	f	class:CAppLogFile
GetOfficeVersion	tmp/LogTracer.h	/^	LPCTSTR GetOfficeVersion(LPCTSTR szAppName)$/;"	f	class:CLogTracer
GetOffset	mate/excel8.cpp	/^LPDISPATCH Range::GetOffset(const VARIANT& RowOffset, const VARIANT& ColumnOffset)$/;"	f	class:Range
GetOnWindow	mate/excel8.cpp	/^CString _ApplicationExcel::GetOnWindow()$/;"	f	class:_ApplicationExcel
GetOpenFilename	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetOpenFilename(const VARIANT& FileFilter, const VARIANT& FilterIndex, const VARIANT& Title, const VARIANT& ButtonText, const VARIANT& MultiSelect)$/;"	f	class:_ApplicationExcel
GetOperatingSystem	mate/excel8.cpp	/^CString _ApplicationExcel::GetOperatingSystem()$/;"	f	class:_ApplicationExcel
GetOptions	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetOptions()$/;"	f	class:_ApplicationWord
GetOrganizationName	mate/excel8.cpp	/^CString _ApplicationExcel::GetOrganizationName()$/;"	f	class:_ApplicationExcel
GetOrientation	mate/excel8.cpp	/^VARIANT Range::GetOrientation()$/;"	f	class:Range
GetOrientation	mate/msword8.cpp	/^long Range2::GetOrientation()$/;"	f	class:Range2
GetOrientation	mate/msword8.cpp	/^long Selection::GetOrientation()$/;"	f	class:Selection
GetOutline	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetOutline()$/;"	f	class:_Worksheet
GetOutline	mate/msword8.cpp	/^long _Font::GetOutline()$/;"	f	class:_Font
GetOutlineFont	mate/excel8.cpp	/^VARIANT Font::GetOutlineFont()$/;"	f	class:Font
GetOutlineLevel	mate/excel8.cpp	/^VARIANT Range::GetOutlineLevel()$/;"	f	class:Range
GetOutlineLevel	mate/msword8.cpp	/^long Paragraph::GetOutlineLevel()$/;"	f	class:Paragraph
GetOutlineLevel	mate/msword8.cpp	/^long Paragraphs::GetOutlineLevel()$/;"	f	class:Paragraphs
GetOutsideColorIndex	mate/msword8.cpp	/^long Borders::GetOutsideColorIndex()$/;"	f	class:Borders
GetOutsideLineStyle	mate/msword8.cpp	/^long Borders::GetOutsideLineStyle()$/;"	f	class:Borders
GetOutsideLineWidth	mate/msword8.cpp	/^long Borders::GetOutsideLineWidth()$/;"	f	class:Borders
GetPacketStr	mate/CLMData.cpp	/^LPCTSTR CCLMData::GetPacketStr(int nComputerNo)$/;"	f	class:CCLMData
GetPacketStr	mate/MRKData.cpp	/^LPCTSTR CMRKData::GetPacketStr(int nComputerNo)$/;"	f	class:CMRKData
GetPageBreak	mate/excel8.cpp	/^long Range::GetPageBreak()$/;"	f	class:Range
GetPageBreakBefore	mate/msword8.cpp	/^long Paragraph::GetPageBreakBefore()$/;"	f	class:Paragraph
GetPageBreakBefore	mate/msword8.cpp	/^long Paragraphs::GetPageBreakBefore()$/;"	f	class:Paragraphs
GetPageMode	mate/SetupInfo.cpp	/^int CSetupInfo::GetPageMode(void) $/;"	f	class:CSetupInfo
GetPageSetup	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetPageSetup()$/;"	f	class:_Worksheet
GetPageSetup	mate/msword8.cpp	/^LPDISPATCH Range2::GetPageSetup()$/;"	f	class:Range2
GetPageSetup	mate/msword8.cpp	/^LPDISPATCH Section::GetPageSetup()$/;"	f	class:Section
GetPageSetup	mate/msword8.cpp	/^LPDISPATCH Selection::GetPageSetup()$/;"	f	class:Selection
GetPageSetup	mate/msword8.cpp	/^LPDISPATCH _Document::GetPageSetup()$/;"	f	class:_Document
GetPaperDirection	mate/SetupInfo.cpp	/^short CSetupInfo::GetPaperDirection(void) $/;"	f	class:CSetupInfo
GetPaperSize	mate/SetupInfo.cpp	/^short CSetupInfo::GetPaperSize(void) $/;"	f	class:CSetupInfo
GetParagraphFormat	mate/msword8.cpp	/^LPDISPATCH Range2::GetParagraphFormat()$/;"	f	class:Range2
GetParagraphFormat	mate/msword8.cpp	/^LPDISPATCH Selection::GetParagraphFormat()$/;"	f	class:Selection
GetParagraphs	mate/msword8.cpp	/^LPDISPATCH Range2::GetParagraphs()$/;"	f	class:Range2
GetParagraphs	mate/msword8.cpp	/^LPDISPATCH Selection::GetParagraphs()$/;"	f	class:Selection
GetParagraphs	mate/msword8.cpp	/^LPDISPATCH _Document::GetParagraphs()$/;"	f	class:_Document
GetParent	mate/excel8.cpp	/^LPDISPATCH Font::GetParent()$/;"	f	class:Font
GetParent	mate/excel8.cpp	/^LPDISPATCH Interior::GetParent()$/;"	f	class:Interior
GetParent	mate/excel8.cpp	/^LPDISPATCH Range::GetParent()$/;"	f	class:Range
GetParent	mate/excel8.cpp	/^LPDISPATCH Workbooks::GetParent()$/;"	f	class:Workbooks
GetParent	mate/excel8.cpp	/^LPDISPATCH Worksheets::GetParent()$/;"	f	class:Worksheets
GetParent	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetParent()$/;"	f	class:_ApplicationExcel
GetParent	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetParent()$/;"	f	class:_Workbook
GetParent	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetParent()$/;"	f	class:_Worksheet
GetParent	mate/msword8.cpp	/^LPDISPATCH Borders::GetParent()$/;"	f	class:Borders
GetParent	mate/msword8.cpp	/^LPDISPATCH Cell::GetParent()$/;"	f	class:Cell
GetParent	mate/msword8.cpp	/^LPDISPATCH Cells::GetParent()$/;"	f	class:Cells
GetParent	mate/msword8.cpp	/^LPDISPATCH Column::GetParent()$/;"	f	class:Column
GetParent	mate/msword8.cpp	/^LPDISPATCH Columns::GetParent()$/;"	f	class:Columns
GetParent	mate/msword8.cpp	/^LPDISPATCH Documents::GetParent()$/;"	f	class:Documents
GetParent	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetParent()$/;"	f	class:Paragraph
GetParent	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetParent()$/;"	f	class:Paragraphs
GetParent	mate/msword8.cpp	/^LPDISPATCH Range2::GetParent()$/;"	f	class:Range2
GetParent	mate/msword8.cpp	/^LPDISPATCH Row::GetParent()$/;"	f	class:Row
GetParent	mate/msword8.cpp	/^LPDISPATCH Rows::GetParent()$/;"	f	class:Rows
GetParent	mate/msword8.cpp	/^LPDISPATCH Section::GetParent()$/;"	f	class:Section
GetParent	mate/msword8.cpp	/^LPDISPATCH Selection::GetParent()$/;"	f	class:Selection
GetParent	mate/msword8.cpp	/^LPDISPATCH Shading::GetParent()$/;"	f	class:Shading
GetParent	mate/msword8.cpp	/^LPDISPATCH Table::GetParent()$/;"	f	class:Table
GetParent	mate/msword8.cpp	/^LPDISPATCH Tables::GetParent()$/;"	f	class:Tables
GetParent	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetParent()$/;"	f	class:_ApplicationWord
GetParent	mate/msword8.cpp	/^LPDISPATCH _Document::GetParent()$/;"	f	class:_Document
GetParent	mate/msword8.cpp	/^LPDISPATCH _Font::GetParent()$/;"	f	class:_Font
GetPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetPath()$/;"	f	class:_ApplicationExcel
GetPath	mate/excel8.cpp	/^CString _Workbook::GetPath()$/;"	f	class:_Workbook
GetPath	mate/msword8.cpp	/^CString _ApplicationWord::GetPath()$/;"	f	class:_ApplicationWord
GetPath	mate/msword8.cpp	/^CString _Document::GetPath()$/;"	f	class:_Document
GetPathSeparator	mate/excel8.cpp	/^CString _ApplicationExcel::GetPathSeparator()$/;"	f	class:_ApplicationExcel
GetPathSeparator	mate/msword8.cpp	/^CString _ApplicationWord::GetPathSeparator()$/;"	f	class:_ApplicationWord
GetPatientID	mate/CDRData.cpp	/^LPCTSTR CCDRData::GetPatientID(void) $/;"	f	class:CCDRData
GetPattern	mate/excel8.cpp	/^VARIANT Interior::GetPattern()$/;"	f	class:Interior
GetPatternColor	mate/excel8.cpp	/^VARIANT Interior::GetPatternColor()$/;"	f	class:Interior
GetPatternColorIndex	mate/excel8.cpp	/^VARIANT Interior::GetPatternColorIndex()$/;"	f	class:Interior
GetPersonalViewListSettings	mate/excel8.cpp	/^BOOL _Workbook::GetPersonalViewListSettings()$/;"	f	class:_Workbook
GetPersonalViewPrintSettings	mate/excel8.cpp	/^BOOL _Workbook::GetPersonalViewPrintSettings()$/;"	f	class:_Workbook
GetPhonetic	mate/excel8.cpp	/^LPDISPATCH Range::GetPhonetic()$/;"	f	class:Range
GetPivotField	mate/excel8.cpp	/^LPDISPATCH Range::GetPivotField()$/;"	f	class:Range
GetPivotItem	mate/excel8.cpp	/^LPDISPATCH Range::GetPivotItem()$/;"	f	class:Range
GetPivotTable	mate/excel8.cpp	/^LPDISPATCH Range::GetPivotTable()$/;"	f	class:Range
GetPivotTableSelection	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetPivotTableSelection()$/;"	f	class:_ApplicationExcel
GetPortraitFontNames	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetPortraitFontNames()$/;"	f	class:_ApplicationWord
GetPosition	mate/msword8.cpp	/^long _Font::GetPosition()$/;"	f	class:_Font
GetPrecedents	mate/excel8.cpp	/^LPDISPATCH Range::GetPrecedents()$/;"	f	class:Range
GetPrecisionAsDisplayed	mate/excel8.cpp	/^BOOL _Workbook::GetPrecisionAsDisplayed()$/;"	f	class:_Workbook
GetPrefixCharacter	mate/excel8.cpp	/^VARIANT Range::GetPrefixCharacter()$/;"	f	class:Range
GetPrevItemType	mate/DeviceDrawInfo.cpp	/^int CDeviceDrawInfo::GetPrevItemType(int *pItem, int nItemNum, int nFromIdx, BOOL bSkip) $/;"	f	class:CDeviceDrawInfo
GetPrevious	mate/excel8.cpp	/^LPDISPATCH Range::GetPrevious()$/;"	f	class:Range
GetPrevious	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetPrevious()$/;"	f	class:_Worksheet
GetPrevious	mate/msword8.cpp	/^LPDISPATCH Cell::GetPrevious()$/;"	f	class:Cell
GetPrevious	mate/msword8.cpp	/^LPDISPATCH Column::GetPrevious()$/;"	f	class:Column
GetPrevious	mate/msword8.cpp	/^LPDISPATCH Row::GetPrevious()$/;"	f	class:Row
GetPreviousBookmarkID	mate/msword8.cpp	/^long Range2::GetPreviousBookmarkID()$/;"	f	class:Range2
GetPreviousBookmarkID	mate/msword8.cpp	/^long Selection::GetPreviousBookmarkID()$/;"	f	class:Selection
GetPreviousSelections	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetPreviousSelections(const VARIANT& Index)$/;"	f	class:_ApplicationExcel
GetPrintFormsData	mate/msword8.cpp	/^BOOL _Document::GetPrintFormsData()$/;"	f	class:_Document
GetPrintFractionalWidths	mate/msword8.cpp	/^BOOL _Document::GetPrintFractionalWidths()$/;"	f	class:_Document
GetPrintPostScriptOverText	mate/msword8.cpp	/^BOOL _Document::GetPrintPostScriptOverText()$/;"	f	class:_Document
GetPrintPreview	mate/msword8.cpp	/^BOOL _ApplicationWord::GetPrintPreview()$/;"	f	class:_ApplicationWord
GetPrintRevisions	mate/msword8.cpp	/^BOOL _Document::GetPrintRevisions()$/;"	f	class:_Document
GetPromptForSummaryInfo	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetPromptForSummaryInfo()$/;"	f	class:_ApplicationExcel
GetProtectContents	mate/excel8.cpp	/^BOOL _Worksheet::GetProtectContents()$/;"	f	class:_Worksheet
GetProtectDrawingObjects	mate/excel8.cpp	/^BOOL _Worksheet::GetProtectDrawingObjects()$/;"	f	class:_Worksheet
GetProtectScenarios	mate/excel8.cpp	/^BOOL _Worksheet::GetProtectScenarios()$/;"	f	class:_Worksheet
GetProtectStructure	mate/excel8.cpp	/^BOOL _Workbook::GetProtectStructure()$/;"	f	class:_Workbook
GetProtectWindows	mate/excel8.cpp	/^BOOL _Workbook::GetProtectWindows()$/;"	f	class:_Workbook
GetProtectedForForms	mate/msword8.cpp	/^BOOL Section::GetProtectedForForms()$/;"	f	class:Section
GetProtectionMode	mate/excel8.cpp	/^BOOL _Worksheet::GetProtectionMode()$/;"	f	class:_Worksheet
GetProtectionType	mate/msword8.cpp	/^long _Document::GetProtectionType()$/;"	f	class:_Document
GetProtocolErrVer	tmp/SerialComm.cpp	/^int CSerialComm::GetProtocolErrVer(void)$/;"	f	class:CSerialComm
GetProtocolVer	mate/SetupInfo.cpp	/^int CSetupInfo::GetProtocolVer(void) $/;"	f	class:CSetupInfo
GetProtocolVer	tmp/CDRPacket.cpp	/^int CCDRPacket::GetProtocolVer(void)$/;"	f	class:CCDRPacket
GetProtocolVer	tmp/CDRSession.cpp	/^int CCDRSession::GetProtocolVer(void) $/;"	f	class:CCDRSession
GetProtocolVer	tmp/SerialComm.cpp	/^int CSerialComm::GetProtocolVer(void) $/;"	f	class:CSerialComm
GetQueryTable	mate/excel8.cpp	/^LPDISPATCH Range::GetQueryTable()$/;"	f	class:Range
GetQueryTables	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetQueryTables()$/;"	f	class:_Worksheet
GetRange	mate/excel8.cpp	/^LPDISPATCH Range::GetRange(const VARIANT& Cell1, const VARIANT& Cell2)$/;"	f	class:Range
GetRange	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetRange(const VARIANT& Cell1, const VARIANT& Cell2)$/;"	f	class:_ApplicationExcel
GetRange	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetRange(const VARIANT& Cell1, const VARIANT& Cell2)$/;"	f	class:_Worksheet
GetRange	mate/msword8.cpp	/^LPDISPATCH Cell::GetRange()$/;"	f	class:Cell
GetRange	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetRange()$/;"	f	class:Paragraph
GetRange	mate/msword8.cpp	/^LPDISPATCH Row::GetRange()$/;"	f	class:Row
GetRange	mate/msword8.cpp	/^LPDISPATCH Section::GetRange()$/;"	f	class:Section
GetRange	mate/msword8.cpp	/^LPDISPATCH Selection::GetRange()$/;"	f	class:Selection
GetRange	mate/msword8.cpp	/^LPDISPATCH Table::GetRange()$/;"	f	class:Table
GetReadOnly	mate/excel8.cpp	/^BOOL _Workbook::GetReadOnly()$/;"	f	class:_Workbook
GetReadOnly	mate/msword8.cpp	/^BOOL _Document::GetReadOnly()$/;"	f	class:_Document
GetReadOnlyRecommended	mate/excel8.cpp	/^BOOL _Workbook::GetReadOnlyRecommended()$/;"	f	class:_Workbook
GetReadOnlyRecommended	mate/msword8.cpp	/^BOOL _Document::GetReadOnlyRecommended()$/;"	f	class:_Document
GetReadabilityStatistics	mate/msword8.cpp	/^LPDISPATCH Range2::GetReadabilityStatistics()$/;"	f	class:Range2
GetReadabilityStatistics	mate/msword8.cpp	/^LPDISPATCH _Document::GetReadabilityStatistics()$/;"	f	class:_Document
GetReadingOrder	mate/excel8.cpp	/^long Range::GetReadingOrder()$/;"	f	class:Range
GetRecentFiles	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetRecentFiles()$/;"	f	class:_ApplicationExcel
GetRecentFiles	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetRecentFiles()$/;"	f	class:_ApplicationWord
GetRecordRelative	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetRecordRelative()$/;"	f	class:_ApplicationExcel
GetReferenceStyle	mate/excel8.cpp	/^long _ApplicationExcel::GetReferenceStyle()$/;"	f	class:_ApplicationExcel
GetRegisteredFunctions	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetRegisteredFunctions(const VARIANT& Index1, const VARIANT& Index2)$/;"	f	class:_ApplicationExcel
GetResize	mate/excel8.cpp	/^LPDISPATCH Range::GetResize(const VARIANT& RowSize, const VARIANT& ColumnSize)$/;"	f	class:Range
GetRevisionNumber	mate/excel8.cpp	/^long _Workbook::GetRevisionNumber()$/;"	f	class:_Workbook
GetRevisions	mate/msword8.cpp	/^LPDISPATCH Range2::GetRevisions()$/;"	f	class:Range2
GetRevisions	mate/msword8.cpp	/^LPDISPATCH _Document::GetRevisions()$/;"	f	class:_Document
GetRightIndent	mate/msword8.cpp	/^float Paragraph::GetRightIndent()$/;"	f	class:Paragraph
GetRightIndent	mate/msword8.cpp	/^float Paragraphs::GetRightIndent()$/;"	f	class:Paragraphs
GetRollZoom	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetRollZoom()$/;"	f	class:_ApplicationExcel
GetRouted	mate/excel8.cpp	/^BOOL _Workbook::GetRouted()$/;"	f	class:_Workbook
GetRouted	mate/msword8.cpp	/^BOOL _Document::GetRouted()$/;"	f	class:_Document
GetRoutingSlip	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetRoutingSlip()$/;"	f	class:_Workbook
GetRoutingSlip	mate/msword8.cpp	/^LPDISPATCH _Document::GetRoutingSlip()$/;"	f	class:_Document
GetRow	mate/excel8.cpp	/^long Range::GetRow()$/;"	f	class:Range
GetRow	mate/msword8.cpp	/^LPDISPATCH Cell::GetRow()$/;"	f	class:Cell
GetRowHeight	mate/excel8.cpp	/^VARIANT Range::GetRowHeight()$/;"	f	class:Range
GetRowIndex	mate/msword8.cpp	/^long Cell::GetRowIndex()$/;"	f	class:Cell
GetRows	mate/excel8.cpp	/^LPDISPATCH Range::GetRows()$/;"	f	class:Range
GetRows	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetRows()$/;"	f	class:_ApplicationExcel
GetRows	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetRows()$/;"	f	class:_Worksheet
GetRows	mate/msword8.cpp	/^LPDISPATCH Range2::GetRows()$/;"	f	class:Range2
GetRows	mate/msword8.cpp	/^LPDISPATCH Selection::GetRows()$/;"	f	class:Selection
GetRows	mate/msword8.cpp	/^LPDISPATCH Table::GetRows()$/;"	f	class:Table
GetSaveAsFilename	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetSaveAsFilename(const VARIANT& InitialFilename, const VARIANT& FileFilter, const VARIANT& FilterIndex, const VARIANT& Title, const VARIANT& ButtonText)$/;"	f	class:_ApplicationExcel
GetSaveFormat	mate/msword8.cpp	/^long _Document::GetSaveFormat()$/;"	f	class:_Document
GetSaveFormsData	mate/msword8.cpp	/^BOOL _Document::GetSaveFormsData()$/;"	f	class:_Document
GetSaveLinkValues	mate/excel8.cpp	/^BOOL _Workbook::GetSaveLinkValues()$/;"	f	class:_Workbook
GetSaveSubsetFonts	mate/msword8.cpp	/^BOOL _Document::GetSaveSubsetFonts()$/;"	f	class:_Document
GetSaved	mate/excel8.cpp	/^BOOL _Workbook::GetSaved()$/;"	f	class:_Workbook
GetSaved	mate/msword8.cpp	/^BOOL _Document::GetSaved()$/;"	f	class:_Document
GetScaling	mate/msword8.cpp	/^long _Font::GetScaling()$/;"	f	class:_Font
GetScreenUpdating	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetScreenUpdating()$/;"	f	class:_ApplicationExcel
GetScreenUpdating	mate/msword8.cpp	/^BOOL _ApplicationWord::GetScreenUpdating()$/;"	f	class:_ApplicationWord
GetScrollArea	mate/excel8.cpp	/^CString _Worksheet::GetScrollArea()$/;"	f	class:_Worksheet
GetSections	mate/msword8.cpp	/^LPDISPATCH Range2::GetSections()$/;"	f	class:Range2
GetSections	mate/msword8.cpp	/^LPDISPATCH Selection::GetSections()$/;"	f	class:Selection
GetSections	mate/msword8.cpp	/^LPDISPATCH _Document::GetSections()$/;"	f	class:_Document
GetSelection	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetSelection()$/;"	f	class:_ApplicationExcel
GetSelection	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetSelection()$/;"	f	class:_ApplicationWord
GetSentences	mate/msword8.cpp	/^LPDISPATCH Range2::GetSentences()$/;"	f	class:Range2
GetSentences	mate/msword8.cpp	/^LPDISPATCH Selection::GetSentences()$/;"	f	class:Selection
GetSentences	mate/msword8.cpp	/^LPDISPATCH _Document::GetSentences()$/;"	f	class:_Document
GetShading	mate/msword8.cpp	/^LPDISPATCH Cell::GetShading()$/;"	f	class:Cell
GetShading	mate/msword8.cpp	/^LPDISPATCH Cells::GetShading()$/;"	f	class:Cells
GetShading	mate/msword8.cpp	/^LPDISPATCH Column::GetShading()$/;"	f	class:Column
GetShading	mate/msword8.cpp	/^LPDISPATCH Columns::GetShading()$/;"	f	class:Columns
GetShading	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetShading()$/;"	f	class:Paragraph
GetShading	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetShading()$/;"	f	class:Paragraphs
GetShading	mate/msword8.cpp	/^LPDISPATCH Range2::GetShading()$/;"	f	class:Range2
GetShading	mate/msword8.cpp	/^LPDISPATCH Row::GetShading()$/;"	f	class:Row
GetShading	mate/msword8.cpp	/^LPDISPATCH Rows::GetShading()$/;"	f	class:Rows
GetShading	mate/msword8.cpp	/^LPDISPATCH Selection::GetShading()$/;"	f	class:Selection
GetShading	mate/msword8.cpp	/^LPDISPATCH Table::GetShading()$/;"	f	class:Table
GetShading	mate/msword8.cpp	/^LPDISPATCH _Font::GetShading()$/;"	f	class:_Font
GetShadow	mate/excel8.cpp	/^VARIANT Font::GetShadow()$/;"	f	class:Font
GetShadow	mate/msword8.cpp	/^BOOL Borders::GetShadow()$/;"	f	class:Borders
GetShadow	mate/msword8.cpp	/^long _Font::GetShadow()$/;"	f	class:_Font
GetShapeRange	mate/msword8.cpp	/^LPDISPATCH Range2::GetShapeRange()$/;"	f	class:Range2
GetShapeRange	mate/msword8.cpp	/^LPDISPATCH Selection::GetShapeRange()$/;"	f	class:Selection
GetShapes	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetShapes()$/;"	f	class:_Worksheet
GetShapes	mate/msword8.cpp	/^LPDISPATCH _Document::GetShapes()$/;"	f	class:_Document
GetSheets	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetSheets()$/;"	f	class:_ApplicationExcel
GetSheets	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetSheets()$/;"	f	class:_Workbook
GetSheetsInNewWorkbook	mate/excel8.cpp	/^long _ApplicationExcel::GetSheetsInNewWorkbook()$/;"	f	class:_ApplicationExcel
GetShowChartTipNames	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetShowChartTipNames()$/;"	f	class:_ApplicationExcel
GetShowChartTipValues	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetShowChartTipValues()$/;"	f	class:_ApplicationExcel
GetShowConflictHistory	mate/excel8.cpp	/^BOOL _Workbook::GetShowConflictHistory()$/;"	f	class:_Workbook
GetShowDetail	mate/excel8.cpp	/^VARIANT Range::GetShowDetail()$/;"	f	class:Range
GetShowGrammaticalErrors	mate/msword8.cpp	/^BOOL _Document::GetShowGrammaticalErrors()$/;"	f	class:_Document
GetShowRevisions	mate/msword8.cpp	/^BOOL _Document::GetShowRevisions()$/;"	f	class:_Document
GetShowSpellingErrors	mate/msword8.cpp	/^BOOL _Document::GetShowSpellingErrors()$/;"	f	class:_Document
GetShowSummary	mate/msword8.cpp	/^BOOL _Document::GetShowSummary()$/;"	f	class:_Document
GetShowToolTips	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetShowToolTips()$/;"	f	class:_ApplicationExcel
GetShowVisualBasicEditor	mate/msword8.cpp	/^BOOL _ApplicationWord::GetShowVisualBasicEditor()$/;"	f	class:_ApplicationWord
GetShrinkToFit	mate/excel8.cpp	/^VARIANT Range::GetShrinkToFit()$/;"	f	class:Range
GetSize	mate/excel8.cpp	/^VARIANT Font::GetSize()$/;"	f	class:Font
GetSize	mate/msword8.cpp	/^float _Font::GetSize()$/;"	f	class:_Font
GetSmallCaps	mate/msword8.cpp	/^long _Font::GetSmallCaps()$/;"	f	class:_Font
GetSndNodeID	tmp/CDRPacket.cpp	/^char CCDRPacket::GetSndNodeID(void) $/;"	f	class:CCDRPacket
GetSndSysID	tmp/CDRPacket.cpp	/^char CCDRPacket::GetSndSysID(void) $/;"	f	class:CCDRPacket
GetSoundNote	mate/excel8.cpp	/^LPDISPATCH Range::GetSoundNote()$/;"	f	class:Range
GetSpaceAfter	mate/msword8.cpp	/^float Paragraph::GetSpaceAfter()$/;"	f	class:Paragraph
GetSpaceAfter	mate/msword8.cpp	/^float Paragraphs::GetSpaceAfter()$/;"	f	class:Paragraphs
GetSpaceBefore	mate/msword8.cpp	/^float Paragraph::GetSpaceBefore()$/;"	f	class:Paragraph
GetSpaceBefore	mate/msword8.cpp	/^float Paragraphs::GetSpaceBefore()$/;"	f	class:Paragraphs
GetSpaceBetweenColumns	mate/msword8.cpp	/^float Row::GetSpaceBetweenColumns()$/;"	f	class:Row
GetSpaceBetweenColumns	mate/msword8.cpp	/^float Rows::GetSpaceBetweenColumns()$/;"	f	class:Rows
GetSpacing	mate/msword8.cpp	/^float _Font::GetSpacing()$/;"	f	class:_Font
GetSpecialMode	mate/msword8.cpp	/^BOOL _ApplicationWord::GetSpecialMode()$/;"	f	class:_ApplicationWord
GetSpellingChecked	mate/msword8.cpp	/^BOOL Range2::GetSpellingChecked()$/;"	f	class:Range2
GetSpellingChecked	mate/msword8.cpp	/^BOOL _Document::GetSpellingChecked()$/;"	f	class:_Document
GetSpellingErrors	mate/msword8.cpp	/^LPDISPATCH Range2::GetSpellingErrors()$/;"	f	class:Range2
GetSpellingErrors	mate/msword8.cpp	/^LPDISPATCH _Document::GetSpellingErrors()$/;"	f	class:_Document
GetSpellingSuggestions	mate/msword8.cpp	/^LPDISPATCH Range2::GetSpellingSuggestions(VARIANT* CustomDictionary, VARIANT* IgnoreUppercase, VARIANT* MainDictionary, VARIANT* SuggestionMode, VARIANT* CustomDictionary2, VARIANT* CustomDictionary3, VARIANT* CustomDictionary4, $/;"	f	class:Range2
GetSpellingSuggestions	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetSpellingSuggestions(LPCTSTR Word, VARIANT* CustomDictionary, VARIANT* IgnoreUppercase, VARIANT* MainDictionary, VARIANT* SuggestionMode, VARIANT* CustomDictionary2, VARIANT* CustomDictionary3, VARIANT* CustomDictionary4, $/;"	f	class:_ApplicationWord
GetStandardFont	mate/excel8.cpp	/^CString _ApplicationExcel::GetStandardFont()$/;"	f	class:_ApplicationExcel
GetStandardFontSize	mate/excel8.cpp	/^double _ApplicationExcel::GetStandardFontSize()$/;"	f	class:_ApplicationExcel
GetStandardHeight	mate/excel8.cpp	/^double _Worksheet::GetStandardHeight()$/;"	f	class:_Worksheet
GetStandardWidth	mate/excel8.cpp	/^double _Worksheet::GetStandardWidth()$/;"	f	class:_Worksheet
GetStart	mate/msword8.cpp	/^long Range2::GetStart()$/;"	f	class:Range2
GetStart	mate/msword8.cpp	/^long Selection::GetStart()$/;"	f	class:Selection
GetStartCol	mate/OfficeDrawInfo.cpp	/^int COfficeDrawInfo::GetStartCol(int nItemCol) $/;"	f	class:COfficeDrawInfo
GetStartIsActive	mate/msword8.cpp	/^BOOL Selection::GetStartIsActive()$/;"	f	class:Selection
GetStartRow	mate/OfficeDrawInfo.cpp	/^int COfficeDrawInfo::GetStartRow(void) $/;"	f	class:COfficeDrawInfo
GetStartupPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetStartupPath()$/;"	f	class:_ApplicationExcel
GetStartupPath	mate/msword8.cpp	/^CString _ApplicationWord::GetStartupPath()$/;"	f	class:_ApplicationWord
GetStatusBar	mate/excel8.cpp	/^VARIANT _ApplicationExcel::GetStatusBar()$/;"	f	class:_ApplicationExcel
GetStoryLength	mate/msword8.cpp	/^long Range2::GetStoryLength()$/;"	f	class:Range2
GetStoryLength	mate/msword8.cpp	/^long Selection::GetStoryLength()$/;"	f	class:Selection
GetStoryRanges	mate/msword8.cpp	/^LPDISPATCH _Document::GetStoryRanges()$/;"	f	class:_Document
GetStoryType	mate/msword8.cpp	/^long Range2::GetStoryType()$/;"	f	class:Range2
GetStoryType	mate/msword8.cpp	/^long Selection::GetStoryType()$/;"	f	class:Selection
GetStrikeThrough	mate/msword8.cpp	/^long _Font::GetStrikeThrough()$/;"	f	class:_Font
GetStrikethrough	mate/excel8.cpp	/^VARIANT Font::GetStrikethrough()$/;"	f	class:Font
GetStyle	mate/excel8.cpp	/^VARIANT Range::GetStyle()$/;"	f	class:Range
GetStyle	mate/msword8.cpp	/^VARIANT Paragraph::GetStyle()$/;"	f	class:Paragraph
GetStyle	mate/msword8.cpp	/^VARIANT Paragraphs::GetStyle()$/;"	f	class:Paragraphs
GetStyle	mate/msword8.cpp	/^VARIANT Range2::GetStyle()$/;"	f	class:Range2
GetStyle	mate/msword8.cpp	/^VARIANT Selection::GetStyle()$/;"	f	class:Selection
GetStyles	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetStyles()$/;"	f	class:_Workbook
GetStyles	mate/msword8.cpp	/^LPDISPATCH _Document::GetStyles()$/;"	f	class:_Document
GetSubdocuments	mate/msword8.cpp	/^LPDISPATCH Range2::GetSubdocuments()$/;"	f	class:Range2
GetSubdocuments	mate/msword8.cpp	/^LPDISPATCH _Document::GetSubdocuments()$/;"	f	class:_Document
GetSubscript	mate/excel8.cpp	/^VARIANT Font::GetSubscript()$/;"	f	class:Font
GetSubscript	mate/msword8.cpp	/^long _Font::GetSubscript()$/;"	f	class:_Font
GetSummary	mate/excel8.cpp	/^VARIANT Range::GetSummary()$/;"	f	class:Range
GetSummaryLength	mate/msword8.cpp	/^long _Document::GetSummaryLength()$/;"	f	class:_Document
GetSummaryViewMode	mate/msword8.cpp	/^long _Document::GetSummaryViewMode()$/;"	f	class:_Document
GetSuperscript	mate/excel8.cpp	/^VARIANT Font::GetSuperscript()$/;"	f	class:Font
GetSuperscript	mate/msword8.cpp	/^long _Font::GetSuperscript()$/;"	f	class:_Font
GetSurroundFooter	mate/msword8.cpp	/^BOOL Borders::GetSurroundFooter()$/;"	f	class:Borders
GetSurroundHeader	mate/msword8.cpp	/^BOOL Borders::GetSurroundHeader()$/;"	f	class:Borders
GetSynonymInfo	mate/msword8.cpp	/^LPDISPATCH Range2::GetSynonymInfo()$/;"	f	class:Range2
GetSynonymInfo	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetSynonymInfo(LPCTSTR Word, VARIANT* LanguageID)$/;"	f	class:_ApplicationWord
GetSystem	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetSystem()$/;"	f	class:_ApplicationWord
GetSystemDirectory	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetSystemDirectory(void) $/;"	f	class:CAppLogFile
GetSystemDirectory	tmp/LogTracer.h	/^	LPCTSTR GetSystemDirectory(void)$/;"	f	class:CLogTracer
GetSystemID	tmp/CDRPacket.cpp	/^int CCDRPacket::GetSystemID(void)$/;"	f	class:CCDRPacket
GetSystemVersion	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetSystemVersion(void) $/;"	f	class:CAppLogFile
GetSystemVersion	tmp/LogTracer.h	/^	LPCTSTR GetSystemVersion(void)$/;"	f	class:CLogTracer
GetTabLength	mate/Tabwnd.cpp	/^int CTabWnd::GetTabLength()$/;"	f	class:CTabWnd
GetTabStops	mate/msword8.cpp	/^LPDISPATCH Paragraph::GetTabStops()$/;"	f	class:Paragraph
GetTabStops	mate/msword8.cpp	/^LPDISPATCH Paragraphs::GetTabStops()$/;"	f	class:Paragraphs
GetTables	mate/msword8.cpp	/^LPDISPATCH Range2::GetTables()$/;"	f	class:Range2
GetTables	mate/msword8.cpp	/^LPDISPATCH Selection::GetTables()$/;"	f	class:Selection
GetTables	mate/msword8.cpp	/^LPDISPATCH _Document::GetTables()$/;"	f	class:_Document
GetTablesOfAuthorities	mate/msword8.cpp	/^LPDISPATCH _Document::GetTablesOfAuthorities()$/;"	f	class:_Document
GetTablesOfAuthoritiesCategories	mate/msword8.cpp	/^LPDISPATCH _Document::GetTablesOfAuthoritiesCategories()$/;"	f	class:_Document
GetTablesOfContents	mate/msword8.cpp	/^LPDISPATCH _Document::GetTablesOfContents()$/;"	f	class:_Document
GetTablesOfFigures	mate/msword8.cpp	/^LPDISPATCH _Document::GetTablesOfFigures()$/;"	f	class:_Document
GetTasks	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetTasks()$/;"	f	class:_ApplicationWord
GetTemplateRemoveExtData	mate/excel8.cpp	/^BOOL _Workbook::GetTemplateRemoveExtData()$/;"	f	class:_Workbook
GetTemplates	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetTemplates()$/;"	f	class:_ApplicationWord
GetTemplatesPath	mate/excel8.cpp	/^CString _ApplicationExcel::GetTemplatesPath()$/;"	f	class:_ApplicationExcel
GetText	mate/excel8.cpp	/^VARIANT Range::GetText()$/;"	f	class:Range
GetText	mate/msword8.cpp	/^CString Range2::GetText()$/;"	f	class:Range2
GetText	mate/msword8.cpp	/^CString Selection::GetText()$/;"	f	class:Selection
GetTextRetrievalMode	mate/msword8.cpp	/^LPDISPATCH Range2::GetTextRetrievalMode()$/;"	f	class:Range2
GetTexture	mate/msword8.cpp	/^long Shading::GetTexture()$/;"	f	class:Shading
GetThisWorkbook	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetThisWorkbook()$/;"	f	class:_ApplicationExcel
GetTimeStamp	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetTimeStamp(BOOL bDate) $/;"	f	class:CAppLogFile
GetTooltipText	mate/SystemTray.cpp	/^CString CSystemTray::GetTooltipText() const$/;"	f	class:CSystemTray
GetTop	mate/excel8.cpp	/^VARIANT Range::GetTop()$/;"	f	class:Range
GetTop	mate/excel8.cpp	/^double _ApplicationExcel::GetTop()$/;"	f	class:_ApplicationExcel
GetTop	mate/msword8.cpp	/^long _ApplicationWord::GetTop()$/;"	f	class:_ApplicationWord
GetTrackRevisions	mate/msword8.cpp	/^BOOL _Document::GetTrackRevisions()$/;"	f	class:_Document
GetTransitionExpEval	mate/excel8.cpp	/^BOOL _Worksheet::GetTransitionExpEval()$/;"	f	class:_Worksheet
GetTransitionFormEntry	mate/excel8.cpp	/^BOOL _Worksheet::GetTransitionFormEntry()$/;"	f	class:_Worksheet
GetTransitionMenuKey	mate/excel8.cpp	/^CString _ApplicationExcel::GetTransitionMenuKey()$/;"	f	class:_ApplicationExcel
GetTransitionMenuKeyAction	mate/excel8.cpp	/^long _ApplicationExcel::GetTransitionMenuKeyAction()$/;"	f	class:_ApplicationExcel
GetTransitionNavigKeys	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetTransitionNavigKeys()$/;"	f	class:_ApplicationExcel
GetType	mate/excel8.cpp	/^long _Worksheet::GetType()$/;"	f	class:_Worksheet
GetType	mate/msword8.cpp	/^long Selection::GetType()$/;"	f	class:Selection
GetType	mate/msword8.cpp	/^long _Document::GetType()$/;"	f	class:_Document
GetUILanguage	mate/excel8.cpp	/^long _ApplicationExcel::GetUILanguage()$/;"	f	class:_ApplicationExcel
GetUnderline	mate/excel8.cpp	/^VARIANT Font::GetUnderline()$/;"	f	class:Font
GetUnderline	mate/msword8.cpp	/^long Range2::GetUnderline()$/;"	f	class:Range2
GetUnderline	mate/msword8.cpp	/^long _Font::GetUnderline()$/;"	f	class:_Font
GetUniform	mate/msword8.cpp	/^BOOL Table::GetUniform()$/;"	f	class:Table
GetUpdateRemoteReferences	mate/excel8.cpp	/^BOOL _Workbook::GetUpdateRemoteReferences()$/;"	f	class:_Workbook
GetUpdateStylesOnOpen	mate/msword8.cpp	/^BOOL _Document::GetUpdateStylesOnOpen()$/;"	f	class:_Document
GetUsableHeight	mate/excel8.cpp	/^double _ApplicationExcel::GetUsableHeight()$/;"	f	class:_ApplicationExcel
GetUsableHeight	mate/msword8.cpp	/^long _ApplicationWord::GetUsableHeight()$/;"	f	class:_ApplicationWord
GetUsableWidth	mate/excel8.cpp	/^double _ApplicationExcel::GetUsableWidth()$/;"	f	class:_ApplicationExcel
GetUsableWidth	mate/msword8.cpp	/^long _ApplicationWord::GetUsableWidth()$/;"	f	class:_ApplicationWord
GetUseStandardHeight	mate/excel8.cpp	/^VARIANT Range::GetUseStandardHeight()$/;"	f	class:Range
GetUseStandardWidth	mate/excel8.cpp	/^VARIANT Range::GetUseStandardWidth()$/;"	f	class:Range
GetUsedRange	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetUsedRange()$/;"	f	class:_Worksheet
GetUserAddress	mate/msword8.cpp	/^CString _ApplicationWord::GetUserAddress()$/;"	f	class:_ApplicationWord
GetUserControl	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetUserControl()$/;"	f	class:_ApplicationExcel
GetUserControl	mate/msword8.cpp	/^BOOL _ApplicationWord::GetUserControl()$/;"	f	class:_ApplicationWord
GetUserControl	mate/msword8.cpp	/^BOOL _Document::GetUserControl()$/;"	f	class:_Document
GetUserInitials	mate/msword8.cpp	/^CString _ApplicationWord::GetUserInitials()$/;"	f	class:_ApplicationWord
GetUserName_	mate/excel8.cpp	/^CString _ApplicationExcel::GetUserName_()$/;"	f	class:_ApplicationExcel
GetUserName_	mate/msword8.cpp	/^CString _ApplicationWord::GetUserName_()$/;"	f	class:_ApplicationWord
GetUserStatus	mate/excel8.cpp	/^VARIANT _Workbook::GetUserStatus()$/;"	f	class:_Workbook
GetVBProject	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetVBProject()$/;"	f	class:_Workbook
GetVBProject	mate/msword8.cpp	/^LPDISPATCH _Document::GetVBProject()$/;"	f	class:_Document
GetVPageBreaks	mate/excel8.cpp	/^LPDISPATCH Worksheets::GetVPageBreaks()$/;"	f	class:Worksheets
GetVPageBreaks	mate/excel8.cpp	/^LPDISPATCH _Worksheet::GetVPageBreaks()$/;"	f	class:_Worksheet
GetValidation	mate/excel8.cpp	/^LPDISPATCH Range::GetValidation()$/;"	f	class:Range
GetValue	mate/excel8.cpp	/^CString _ApplicationExcel::GetValue()$/;"	f	class:_ApplicationExcel
GetValue	mate/excel8.cpp	/^VARIANT Range::GetValue()$/;"	f	class:Range
GetValue2	mate/excel8.cpp	/^VARIANT Range::GetValue2()$/;"	f	class:Range
GetVariables	mate/msword8.cpp	/^LPDISPATCH _Document::GetVariables()$/;"	f	class:_Document
GetVbe	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetVbe()$/;"	f	class:_ApplicationExcel
GetVbe	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetVbe()$/;"	f	class:_ApplicationWord
GetVersion	mate/excel8.cpp	/^CString _ApplicationExcel::GetVersion()$/;"	f	class:_ApplicationExcel
GetVersion	mate/msword8.cpp	/^CString _ApplicationWord::GetVersion()$/;"	f	class:_ApplicationWord
GetVersionC	mate/ButtonST.h	/^	static LPCTSTR GetVersionC()	{return (LPCTSTR)_T("3.9");}$/;"	f	class:CButtonST
GetVersionI	mate/ButtonST.h	/^	static short GetVersionI()		{return 39;}$/;"	f	class:CButtonST
GetVersions	mate/msword8.cpp	/^LPDISPATCH _Document::GetVersions()$/;"	f	class:_Document
GetVerticalAlignment	mate/excel8.cpp	/^VARIANT Range::GetVerticalAlignment()$/;"	f	class:Range
GetVerticalAlignment	mate/msword8.cpp	/^long Cell::GetVerticalAlignment()$/;"	f	class:Cell
GetVerticalAlignment	mate/msword8.cpp	/^long Cells::GetVerticalAlignment()$/;"	f	class:Cells
GetVisible	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetVisible()$/;"	f	class:_ApplicationExcel
GetVisible	mate/excel8.cpp	/^VARIANT Worksheets::GetVisible()$/;"	f	class:Worksheets
GetVisible	mate/excel8.cpp	/^long _Worksheet::GetVisible()$/;"	f	class:_Worksheet
GetVisible	mate/msword8.cpp	/^BOOL _ApplicationWord::GetVisible()$/;"	f	class:_ApplicationWord
GetWidowControl	mate/msword8.cpp	/^long Paragraph::GetWidowControl()$/;"	f	class:Paragraph
GetWidowControl	mate/msword8.cpp	/^long Paragraphs::GetWidowControl()$/;"	f	class:Paragraphs
GetWidth	mate/excel8.cpp	/^VARIANT Range::GetWidth()$/;"	f	class:Range
GetWidth	mate/excel8.cpp	/^double _ApplicationExcel::GetWidth()$/;"	f	class:_ApplicationExcel
GetWidth	mate/msword8.cpp	/^float Cell::GetWidth()$/;"	f	class:Cell
GetWidth	mate/msword8.cpp	/^float Cells::GetWidth()$/;"	f	class:Cells
GetWidth	mate/msword8.cpp	/^float Column::GetWidth()$/;"	f	class:Column
GetWidth	mate/msword8.cpp	/^float Columns::GetWidth()$/;"	f	class:Columns
GetWidth	mate/msword8.cpp	/^long _ApplicationWord::GetWidth()$/;"	f	class:_ApplicationWord
GetWindowState	mate/excel8.cpp	/^long _ApplicationExcel::GetWindowState()$/;"	f	class:_ApplicationExcel
GetWindowState	mate/msword8.cpp	/^long _ApplicationWord::GetWindowState()$/;"	f	class:_ApplicationWord
GetWindows	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetWindows()$/;"	f	class:_ApplicationExcel
GetWindows	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetWindows()$/;"	f	class:_Workbook
GetWindows	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetWindows()$/;"	f	class:_ApplicationWord
GetWindows	mate/msword8.cpp	/^LPDISPATCH _Document::GetWindows()$/;"	f	class:_Document
GetWindowsDirectory	mate/AppLogFile.cpp	/^LPCTSTR CAppLogFile::GetWindowsDirectory(void) $/;"	f	class:CAppLogFile
GetWindowsDirectory	tmp/LogTracer.h	/^	LPCTSTR GetWindowsDirectory(void)$/;"	f	class:CLogTracer
GetWindowsForPens	mate/excel8.cpp	/^BOOL _ApplicationExcel::GetWindowsForPens()$/;"	f	class:_ApplicationExcel
GetWordBasic	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::GetWordBasic()$/;"	f	class:_ApplicationWord
GetWords	mate/msword8.cpp	/^LPDISPATCH Range2::GetWords()$/;"	f	class:Range2
GetWords	mate/msword8.cpp	/^LPDISPATCH Selection::GetWords()$/;"	f	class:Selection
GetWords	mate/msword8.cpp	/^LPDISPATCH _Document::GetWords()$/;"	f	class:_Document
GetWorkbooks	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetWorkbooks()$/;"	f	class:_ApplicationExcel
GetWorksheet	mate/excel8.cpp	/^LPDISPATCH Range::GetWorksheet()$/;"	f	class:Range
GetWorksheetFunction	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetWorksheetFunction()$/;"	f	class:_ApplicationExcel
GetWorksheets	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::GetWorksheets()$/;"	f	class:_ApplicationExcel
GetWorksheets	mate/excel8.cpp	/^LPDISPATCH _Workbook::GetWorksheets()$/;"	f	class:_Workbook
GetWrapText	mate/excel8.cpp	/^VARIANT Range::GetWrapText()$/;"	f	class:Range
GetWriteReserved	mate/excel8.cpp	/^BOOL _Workbook::GetWriteReserved()$/;"	f	class:_Workbook
GetWriteReserved	mate/msword8.cpp	/^BOOL _Document::GetWriteReserved()$/;"	f	class:_Document
GetWriteReservedBy	mate/excel8.cpp	/^CString _Workbook::GetWriteReservedBy()$/;"	f	class:_Workbook
GetXPos	mate/DeviceDrawInfo.cpp	/^int CDeviceDrawInfo::GetXPos(int nColumn) $/;"	f	class:CDeviceDrawInfo
GetYPos	mate/DeviceDrawInfo.cpp	/^int CDeviceDrawInfo::GetYPos(int nLineNo) $/;"	f	class:CDeviceDrawInfo
Get_CodeName	mate/excel8.cpp	/^CString _Workbook::Get_CodeName()$/;"	f	class:_Workbook
Get_CodeName	mate/excel8.cpp	/^CString _Worksheet::Get_CodeName()$/;"	f	class:_Worksheet
Get_CodeName	mate/msword8.cpp	/^CString _Document::Get_CodeName()$/;"	f	class:_Document
Get_Default	mate/excel8.cpp	/^CString _ApplicationExcel::Get_Default()$/;"	f	class:_ApplicationExcel
Get_Default	mate/excel8.cpp	/^LPDISPATCH Workbooks::Get_Default(const VARIANT& Index)$/;"	f	class:Workbooks
Get_Default	mate/excel8.cpp	/^LPDISPATCH Worksheets::Get_Default(const VARIANT& Index)$/;"	f	class:Worksheets
Get_Default	mate/excel8.cpp	/^VARIANT Range::Get_Default(const VARIANT& RowIndex, const VARIANT& ColumnIndex)$/;"	f	class:Range
Get_NewEnum	mate/excel8.cpp	/^LPUNKNOWN Range::Get_NewEnum()$/;"	f	class:Range
Get_NewEnum	mate/excel8.cpp	/^LPUNKNOWN Workbooks::Get_NewEnum()$/;"	f	class:Workbooks
Get_NewEnum	mate/excel8.cpp	/^LPUNKNOWN Worksheets::Get_NewEnum()$/;"	f	class:Worksheets
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Borders::Get_NewEnum()$/;"	f	class:Borders
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Cells::Get_NewEnum()$/;"	f	class:Cells
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Columns::Get_NewEnum()$/;"	f	class:Columns
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Documents::Get_NewEnum()$/;"	f	class:Documents
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Paragraphs::Get_NewEnum()$/;"	f	class:Paragraphs
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Rows::Get_NewEnum()$/;"	f	class:Rows
Get_NewEnum	mate/msword8.cpp	/^LPUNKNOWN Tables::Get_NewEnum()$/;"	f	class:Tables
GoBack	mate/msword8.cpp	/^void _ApplicationWord::GoBack()$/;"	f	class:_ApplicationWord
GoForward	mate/msword8.cpp	/^void _ApplicationWord::GoForward()$/;"	f	class:_ApplicationWord
GoTo	mate/msword8.cpp	/^LPDISPATCH Range2::GoTo(VARIANT* What, VARIANT* Which, VARIANT* Count, VARIANT* Name)$/;"	f	class:Range2
GoTo	mate/msword8.cpp	/^LPDISPATCH Selection::GoTo(VARIANT* What, VARIANT* Which, VARIANT* Count, VARIANT* Name)$/;"	f	class:Selection
GoTo	mate/msword8.cpp	/^LPDISPATCH _Document::GoTo(VARIANT* What, VARIANT* Which, VARIANT* Count, VARIANT* Name)$/;"	f	class:_Document
GoToNext	mate/msword8.cpp	/^LPDISPATCH Range2::GoToNext(long What)$/;"	f	class:Range2
GoToNext	mate/msword8.cpp	/^LPDISPATCH Selection::GoToNext(long What)$/;"	f	class:Selection
GoToPrevious	mate/msword8.cpp	/^LPDISPATCH Range2::GoToPrevious(long What)$/;"	f	class:Range2
GoToPrevious	mate/msword8.cpp	/^LPDISPATCH Selection::GoToPrevious(long What)$/;"	f	class:Selection
GoalSeek	mate/excel8.cpp	/^BOOL Range::GoalSeek(const VARIANT& Goal, LPDISPATCH ChangingCell)$/;"	f	class:Range
Goto	mate/excel8.cpp	/^void _ApplicationExcel::Goto(const VARIANT& Reference, const VARIANT& Scroll)$/;"	f	class:_ApplicationExcel
Group	mate/excel8.cpp	/^VARIANT Range::Group(const VARIANT& Start, const VARIANT& End, const VARIANT& By, const VARIANT& Periods)$/;"	f	class:Range
Grow	mate/msword8.cpp	/^void _Font::Grow()$/;"	f	class:_Font
HALF_PAGE	mate/SetupInfo.h	21;"	d
HEADER	inc/CDRType.h	/^} HEADER ;$/;"	t	typeref:struct:_HEADER
HEADER	tmp/CDRType.h	/^} HEADER ;$/;"	t	typeref:struct:_HEADER
HORZ_MARGIN	mate/CDRMateView.h	26;"	d
Help	mate/excel8.cpp	/^void _ApplicationExcel::Help(const VARIANT& HelpFile, const VARIANT& HelpContextID)$/;"	f	class:_ApplicationExcel
Help	mate/msword8.cpp	/^void _ApplicationWord::Help(VARIANT* HelpType)$/;"	f	class:_ApplicationWord
HelpTool	mate/msword8.cpp	/^void _ApplicationWord::HelpTool()$/;"	f	class:_ApplicationWord
HideIcon	mate/SystemTray.cpp	/^void CSystemTray::HideIcon()$/;"	f	class:CSystemTray
HighlightChangesOptions	mate/excel8.cpp	/^void _Workbook::HighlightChangesOptions(const VARIANT& When, const VARIANT& Who, const VARIANT& Where)$/;"	f	class:_Workbook
HitTest	mate/Tabwnd.cpp	/^int CTabWnd::HitTest(int x, int y)$/;"	f	class:CTabWnd
HomeKey	mate/msword8.cpp	/^long Selection::HomeKey(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Selection
IDB_ABOUT_HDRMATE	mate/resource.h	37;"	d
IDB_BITMAP_ABOUT	mate/resource.h	21;"	d
IDB_BITMAP_HUVITZ	mate/resource.h	15;"	d
IDB_BITMAP_LOGO	mate/resource.h	17;"	d
IDB_BITMAP_REPORT	mate/resource.h	29;"	d
IDB_BITMAP_SEND	mate/resource.h	31;"	d
IDB_BUTTON_BAR	mate/resource.h	26;"	d
IDB_BUTTON_DELETE	mate/resource.h	27;"	d
IDB_BUTTON_EXPORT	mate/resource.h	32;"	d
IDB_BUTTON_GRAPH	mate/resource.h	33;"	d
IDB_BUTTON_PRINT	mate/resource.h	28;"	d
IDB_BUTTON_REPORT	mate/resource.h	30;"	d
IDB_BUTTON_TRANSFER	mate/resource.h	35;"	d
IDB_HORZ_LINE	mate/resource.h	24;"	d
IDB_MENU_BAR	mate/resource.h	23;"	d
IDB_VERT_LINE	mate/resource.h	25;"	d
IDC_BUTTON_ABOUT	mate/resource.h	123;"	d
IDC_BUTTON_ADVANCED	mate/resource.h	46;"	d
IDC_BUTTON_CLOSE	mate/resource.h	136;"	d
IDC_BUTTON_CONNECT	mate/resource.h	121;"	d
IDC_BUTTON_DELETE	mate/resource.h	43;"	d
IDC_BUTTON_DELETE1	mate/resource.h	127;"	d
IDC_BUTTON_DELETE2	mate/resource.h	131;"	d
IDC_BUTTON_DELETE_ALL	mate/resource.h	74;"	d
IDC_BUTTON_DOWN	mate/resource.h	81;"	d
IDC_BUTTON_EXIT	mate/resource.h	120;"	d
IDC_BUTTON_EXPORT	mate/resource.h	41;"	d
IDC_BUTTON_EXPORT1	mate/resource.h	129;"	d
IDC_BUTTON_EXPORT2	mate/resource.h	133;"	d
IDC_BUTTON_EXPORT_DIR	mate/resource.h	96;"	d
IDC_BUTTON_GRAPH1	mate/resource.h	134;"	d
IDC_BUTTON_GRAPH2	mate/resource.h	135;"	d
IDC_BUTTON_LEFT	mate/resource.h	59;"	d
IDC_BUTTON_OPEN_EXPORT	mate/resource.h	75;"	d
IDC_BUTTON_OPEN_IMPORT	mate/resource.h	98;"	d
IDC_BUTTON_OPTIONS	mate/resource.h	122;"	d
IDC_BUTTON_PRINT	mate/resource.h	42;"	d
IDC_BUTTON_PRINT1	mate/resource.h	128;"	d
IDC_BUTTON_PRINT2	mate/resource.h	132;"	d
IDC_BUTTON_RECEIVED	mate/resource.h	124;"	d
IDC_BUTTON_REPORT1	mate/resource.h	126;"	d
IDC_BUTTON_REPORT2	mate/resource.h	130;"	d
IDC_BUTTON_RIGHT	mate/resource.h	53;"	d
IDC_BUTTON_SELECT_ALL	mate/resource.h	71;"	d
IDC_BUTTON_SEND	mate/resource.h	44;"	d
IDC_BUTTON_TRANSFFERED	mate/resource.h	125;"	d
IDC_BUTTON_UP	mate/resource.h	84;"	d
IDC_BUTTON_UPDATE	mate/resource.h	105;"	d
IDC_BUTTON_UPDATE2	mate/resource.h	106;"	d
IDC_BUTTON_UPDATE3	mate/resource.h	107;"	d
IDC_BUTTON_VIEW	mate/resource.h	40;"	d
IDC_CHECK_CONNECT	mate/resource.h	56;"	d
IDC_CHECK_FAMILY_HISTORY	mate/resource.h	73;"	d
IDC_CHECK_HISTORY_INPUT	mate/resource.h	54;"	d
IDC_CHECK_MAJOR_COMPLAINTS	mate/resource.h	61;"	d
IDC_CHECK_MEDICAL_HISTORY	mate/resource.h	57;"	d
IDC_CHECK_OTHER_COMMENTS	mate/resource.h	64;"	d
IDC_CHECK_STARTUP	mate/resource.h	72;"	d
IDC_CHECK_VISION_REQUIREMENT	mate/resource.h	69;"	d
IDC_COMBO_BAUD_RATE	mate/resource.h	63;"	d
IDC_COMBO_COMPUTER	mate/resource.h	66;"	d
IDC_COMBO_DELETE_RECV	mate/resource.h	82;"	d
IDC_COMBO_DELETE_TRANS	mate/resource.h	89;"	d
IDC_COMBO_EXPORT_TYPE	mate/resource.h	77;"	d
IDC_COMBO_FILE_CREATION	mate/resource.h	88;"	d
IDC_COMBO_FILE_CREATION2	mate/resource.h	93;"	d
IDC_COMBO_FONT_SIZE	mate/resource.h	110;"	d
IDC_COMBO_PORT	mate/resource.h	60;"	d
IDC_COMBO_PRINT_ALIGN	mate/resource.h	115;"	d
IDC_COMBO_PRINT_MODE	mate/resource.h	113;"	d
IDC_COMBO_PROTO_VER	mate/resource.h	76;"	d
IDC_COMBO_SIZE_RECV	mate/resource.h	95;"	d
IDC_COMBO_SIZE_TRANS	mate/resource.h	92;"	d
IDC_COMBO_SUBFOLDER	mate/resource.h	86;"	d
IDC_COMBO_SYSTEM_ID	mate/resource.h	79;"	d
IDC_EDIT_AGE	mate/resource.h	52;"	d
IDC_EDIT_EXPORT_DIR	mate/resource.h	51;"	d
IDC_EDIT_FAMILY_HISTORY	mate/resource.h	62;"	d
IDC_EDIT_FILE_NAME	mate/resource.h	90;"	d
IDC_EDIT_IMPORT_DIR	mate/resource.h	68;"	d
IDC_EDIT_MAJOR_COMPLAINTS	mate/resource.h	55;"	d
IDC_EDIT_MEDICAL_HISTORY	mate/resource.h	65;"	d
IDC_EDIT_NAME	mate/resource.h	91;"	d
IDC_EDIT_OTHER_COMMENTS	mate/resource.h	70;"	d
IDC_EDIT_VISION_REQUIREMENT	mate/resource.h	58;"	d
IDC_LAND_FULL	mate/resource.h	116;"	d
IDC_LAND_LEFT	mate/resource.h	117;"	d
IDC_LAND_RIGHT	mate/resource.h	118;"	d
IDC_LIST_LEFT	mate/resource.h	100;"	d
IDC_LIST_RECEIVER	mate/resource.h	38;"	d
IDC_LIST_RIGHT	mate/resource.h	102;"	d
IDC_LIST_TRANSFER	mate/resource.h	39;"	d
IDC_PORTRAIT	mate/resource.h	119;"	d
IDC_RADIO2	mate/resource.h	112;"	d
IDC_RADIO3	mate/resource.h	114;"	d
IDC_RADIO_CDR	mate/resource.h	111;"	d
IDC_RADIO_DONT_PRINT	mate/resource.h	67;"	d
IDC_RADIO_EXPORT_OFF	mate/resource.h	104;"	d
IDC_RADIO_EXPORT_ON	mate/resource.h	103;"	d
IDC_RADIO_FEMALE	mate/resource.h	97;"	d
IDC_RADIO_GRAY_COLOR	mate/resource.h	78;"	d
IDC_RADIO_LANDSCAPE	mate/resource.h	49;"	d
IDC_RADIO_MALE	mate/resource.h	94;"	d
IDC_RADIO_PORTRAIT	mate/resource.h	50;"	d
IDC_RADIO_PRINT_OFF	mate/resource.h	101;"	d
IDC_RADIO_PRINT_ON	mate/resource.h	99;"	d
IDC_RADIO_SIZE_A4	mate/resource.h	47;"	d
IDC_RADIO_SIZE_LETTER	mate/resource.h	48;"	d
IDC_RADIO_SUBFOLDER_OFF	mate/resource.h	83;"	d
IDC_RADIO_SUBFOLDER_ON	mate/resource.h	80;"	d
IDC_RADIO_TRANSFER_OFF	mate/resource.h	87;"	d
IDC_RADIO_TRANSFER_ON	mate/resource.h	85;"	d
IDC_STATIC_AREA	mate/resource.h	45;"	d
IDC_STATIC_DATA	mate/resource.h	108;"	d
IDC_STATIC_TYPE	mate/resource.h	109;"	d
IDD	mate/AdvancedDlg.h	/^	enum { IDD = IDD_ADVANCED };$/;"	e	enum:CAdvancedDlg::__anon11
IDD	mate/CDRMate.cpp	/^	enum { IDD = IDD_ABOUTBOX3 };$/;"	e	enum:CAboutDlg::__anon5	file:
IDD	mate/CDRMateView.h	/^	enum { IDD = IDD_CDRMATE_FORM };$/;"	e	enum:CCDRMateView::__anon10
IDD	mate/ConnectPage.h	/^	enum { IDD = IDD_CONNECT_PAGE };$/;"	e	enum:CConnectPage::__anon3
IDD	mate/GeneralPage.h	/^	enum { IDD = IDD_GENERAL_PAGE };$/;"	e	enum:CGeneralPage::__anon13
IDD	mate/ImportDlg.h	/^	enum { IDD = IDD_DIALOG_IMPORT };$/;"	e	enum:CImportDlg::__anon2
IDD	mate/PatientHistory.h	/^	enum { IDD = IDD_PATIENT_HISTORY };$/;"	e	enum:CPatientHistory::__anon1
IDD	mate/PrintPage.h	/^	enum { IDD = IDD_PRINT_PAGE };$/;"	e	enum:CPrintPage::__anon12
IDD_ABOUTBOX	mate/resource.h	5;"	d
IDD_ABOUTBOX2	mate/resource.h	6;"	d
IDD_ABOUTBOX3	mate/resource.h	36;"	d
IDD_ADVANCED	mate/resource.h	18;"	d
IDD_CDRMATE_FORM	mate/resource.h	7;"	d
IDD_CONNECT_PAGE	mate/resource.h	12;"	d
IDD_DIALOG_IMPORT	mate/resource.h	20;"	d
IDD_GENERAL_PAGE	mate/resource.h	10;"	d
IDD_PATIENT_HISTORY	mate/resource.h	16;"	d
IDD_PRINT_PAGE	mate/resource.h	14;"	d
IDI_TRAYICON	mate/resource.h	11;"	d
IDI_TRAYICON2	mate/resource.h	22;"	d
IDM_MENU_CLOSE	mate/resource.h	144;"	d
IDM_MENU_PRINT	mate/resource.h	145;"	d
IDM_TRAY_EXIT	mate/resource.h	138;"	d
IDM_TRAY_RESTORE	mate/resource.h	137;"	d
IDR_CDRMATTYPE	mate/resource.h	9;"	d
IDR_DATAFRAME	mate/resource.h	19;"	d
IDR_MAINFRAME	mate/resource.h	8;"	d
IDR_MENU1	mate/resource.h	34;"	d
IDR_TRAY_MENU	mate/resource.h	13;"	d
ID_FILE_CONNECT	mate/resource.h	139;"	d
ID_FILE_DISCONNECT	mate/resource.h	141;"	d
ID_FILE_EXIT	mate/resource.h	143;"	d
ID_MENUITEM32773	mate/resource.h	140;"	d
ID_SETUP_OPTIONS	mate/resource.h	142;"	d
IMPORT_DELETE	mate/ImportDlg.h	12;"	d
IMPORT_IGNORE	mate/ImportDlg.h	11;"	d
IMPORT_UPDATE	mate/ImportDlg.h	10;"	d
INC	Makefile	/^INC=-I. -I.\/inc$/;"	m
INDENT	data_dump.c	8;"	d	file:
INFO_BUFFER_SIZE	mate/AppLogFile.h	16;"	d
INFO_BUFFER_SIZE	tmp/LogTracer.h	25;"	d
INIT_LIST_HEAD	inc/list.h	29;"	d
INI_BUFFERSIZE	inc/minIni.h	31;"	d
ITM_BVF_FAR	mate/Define.h	21;"	d
ITM_BVF_NEAR	mate/Define.h	22;"	d
ITM_FINAL_FAR	mate/Define.h	12;"	d
ITM_FINAL_NEAR	mate/Define.h	13;"	d
ITM_KER_DATA	mate/Define.h	23;"	d
ITM_LENS_DATA	mate/Define.h	8;"	d
ITM_NPA_DATA	mate/Define.h	15;"	d
ITM_NPC_DATA	mate/Define.h	14;"	d
ITM_NRA_PRA	mate/Define.h	16;"	d
ITM_NRC_PRC_FAR	mate/Define.h	17;"	d
ITM_NRC_PRC_NEAR	mate/Define.h	18;"	d
ITM_PRISM_FAR	mate/Define.h	19;"	d
ITM_PRISM_NEAR	mate/Define.h	20;"	d
ITM_REFR_DATA	mate/Define.h	9;"	d
ITM_RETINO_DATA	mate/Define.h	24;"	d
ITM_RK_GRAPH	mate/Define.h	29;"	d
ITM_SUBJ_FAR	mate/Define.h	10;"	d
ITM_SUBJ_NEAR	mate/Define.h	11;"	d
ITM_TL_FINAL	mate/Define.h	27;"	d
ITM_TL_LENS	mate/Define.h	25;"	d
ITM_TL_REFR	mate/Define.h	26;"	d
ITM_TL_SUBJ	mate/Define.h	28;"	d
ITM_TOTAL_NUM	mate/Define.h	33;"	d
ITM_UNVA_FAR	mate/Define.h	6;"	d
ITM_UNVA_NEAR	mate/Define.h	7;"	d
ImportDataFile	mate/FileSystem.cpp	/^BOOL CFileSystem::ImportDataFile(int nType, CString sPath, CStringArray &arFields, int nField)$/;"	f	class:CFileSystem
ImportFile	mate/CLMData.cpp	/^BOOL CCLMData::ImportFile(CString sPath) $/;"	f	class:CCLMData
ImportFile	mate/MRKData.cpp	/^BOOL CMRKData::ImportFile(CString sPath) $/;"	f	class:CMRKData
InRange	mate/msword8.cpp	/^BOOL Range2::InRange(LPDISPATCH Range)$/;"	f	class:Range2
InRange	mate/msword8.cpp	/^BOOL Selection::InRange(LPDISPATCH Range)$/;"	f	class:Selection
InStory	mate/msword8.cpp	/^BOOL Range2::InStory(LPDISPATCH Range)$/;"	f	class:Range2
InStory	mate/msword8.cpp	/^BOOL Selection::InStory(LPDISPATCH Range)$/;"	f	class:Selection
InchesToPoints	mate/excel8.cpp	/^double _ApplicationExcel::InchesToPoints(double Inches)$/;"	f	class:_ApplicationExcel
InchesToPoints	mate/msword8.cpp	/^float _ApplicationWord::InchesToPoints(float Inches)$/;"	f	class:_ApplicationWord
Indent	mate/msword8.cpp	/^void Paragraph::Indent()$/;"	f	class:Paragraph
Indent	mate/msword8.cpp	/^void Paragraphs::Indent()$/;"	f	class:Paragraphs
Init	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::Init(CSetupInfo *pSetupInfo)$/;"	f	class:CDeviceDrawInfo
Init	mate/SetupInfo.cpp	/^void CSetupInfo::Init(void)$/;"	f	class:CSetupInfo
InitControls	mate/CDRMateView.cpp	/^void CCDRMateView::InitControls(void) $/;"	f	class:CCDRMateView
InitDeviceInfo	mate/DataFrm.cpp	/^BOOL CDataFrm::InitDeviceInfo(int nMode, void *pData)$/;"	f	class:CDataFrm
InitDocument	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::InitDocument(void) $/;"	f	class:COfficeDrawInfo
InitInstance	mate/CDRMate.cpp	/^BOOL CCDRMateApp::InitInstance()$/;"	f	class:CCDRMateApp
InitLock	tmp/LogTracer.h	/^	inline void			InitLock() {InitializeCriticalSection(&m_csLock);}$/;"	f	class:CLogTracer
InitLock	tmp/SerialComm.h	/^	inline void			InitLock() {InitializeCriticalSection(&m_csLock);}$/;"	f	class:CSerialComm
InitToolTip	mate/ButtonST.cpp	/^void CButtonST::InitToolTip()$/;"	f	class:CButtonST
InitWorksheet	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::InitWorksheet(void) $/;"	f	class:COfficeDrawInfo
Initialise	mate/SystemTray.cpp	/^void CSystemTray::Initialise()$/;"	f	class:CSystemTray
InputBox	mate/excel8.cpp	/^VARIANT _ApplicationExcel::InputBox(LPCTSTR Prompt, const VARIANT& Title, const VARIANT& Default, const VARIANT& Left, const VARIANT& Top, const VARIANT& HelpFile, const VARIANT& HelpContextID, const VARIANT& Type)$/;"	f	class:_ApplicationExcel
Insert	mate/excel8.cpp	/^void Range::Insert(const VARIANT& Shift)$/;"	f	class:Range
InsertAfter	mate/msword8.cpp	/^void Range2::InsertAfter(LPCTSTR Text)$/;"	f	class:Range2
InsertAfter	mate/msword8.cpp	/^void Selection::InsertAfter(LPCTSTR Text)$/;"	f	class:Selection
InsertAutoText	mate/msword8.cpp	/^void Range2::InsertAutoText()$/;"	f	class:Range2
InsertBefore	mate/msword8.cpp	/^void Range2::InsertBefore(LPCTSTR Text)$/;"	f	class:Range2
InsertBefore	mate/msword8.cpp	/^void Selection::InsertBefore(LPCTSTR Text)$/;"	f	class:Selection
InsertBreak	mate/msword8.cpp	/^void Range2::InsertBreak(VARIANT* Type)$/;"	f	class:Range2
InsertBreak	mate/msword8.cpp	/^void Selection::InsertBreak(VARIANT* Type)$/;"	f	class:Selection
InsertCaption	mate/msword8.cpp	/^void Range2::InsertCaption(VARIANT* Label, VARIANT* Title, VARIANT* TitleAutoText, VARIANT* Position)$/;"	f	class:Range2
InsertCaption	mate/msword8.cpp	/^void Selection::InsertCaption(VARIANT* Label, VARIANT* Title, VARIANT* TitleAutoText, VARIANT* Position)$/;"	f	class:Selection
InsertCells	mate/msword8.cpp	/^void Selection::InsertCells(VARIANT* ShiftCells)$/;"	f	class:Selection
InsertColumns	mate/msword8.cpp	/^void Selection::InsertColumns()$/;"	f	class:Selection
InsertCrossReference	mate/msword8.cpp	/^void Range2::InsertCrossReference(VARIANT* ReferenceType, long ReferenceKind, VARIANT* ReferenceItem, VARIANT* InsertAsHyperlink, VARIANT* IncludePosition)$/;"	f	class:Range2
InsertCrossReference	mate/msword8.cpp	/^void Selection::InsertCrossReference(VARIANT* ReferenceType, long ReferenceKind, VARIANT* ReferenceItem, VARIANT* InsertAsHyperlink, VARIANT* IncludePosition)$/;"	f	class:Selection
InsertDatabase	mate/msword8.cpp	/^void Range2::InsertDatabase(VARIANT* Format, VARIANT* Style, VARIANT* LinkToSource, VARIANT* Connection, VARIANT* SQLStatement, VARIANT* SQLStatement1, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* WritePasswordDocument, $/;"	f	class:Range2
InsertDateTime	mate/msword8.cpp	/^void Range2::InsertDateTime(VARIANT* DateTimeFormat, VARIANT* InsertAsField, VARIANT* InsertAsFullWidth)$/;"	f	class:Range2
InsertDateTime	mate/msword8.cpp	/^void Selection::InsertDateTime(VARIANT* DateTimeFormat, VARIANT* InsertAsField, VARIANT* InsertAsFullWidth)$/;"	f	class:Selection
InsertFile	mate/msword8.cpp	/^void Range2::InsertFile(LPCTSTR FileName, VARIANT* Range, VARIANT* ConfirmConversions, VARIANT* Link, VARIANT* Attachment)$/;"	f	class:Range2
InsertFile	mate/msword8.cpp	/^void Selection::InsertFile(LPCTSTR FileName, VARIANT* Range, VARIANT* ConfirmConversions, VARIANT* Link, VARIANT* Attachment)$/;"	f	class:Selection
InsertFormula	mate/msword8.cpp	/^void Selection::InsertFormula(VARIANT* Formula, VARIANT* NumberFormat)$/;"	f	class:Selection
InsertIndent	mate/excel8.cpp	/^void Range::InsertIndent(long InsertAmount)$/;"	f	class:Range
InsertParagraph	mate/msword8.cpp	/^void Range2::InsertParagraph()$/;"	f	class:Range2
InsertParagraph	mate/msword8.cpp	/^void Selection::InsertParagraph()$/;"	f	class:Selection
InsertParagraphAfter	mate/msword8.cpp	/^void Range2::InsertParagraphAfter()$/;"	f	class:Range2
InsertParagraphAfter	mate/msword8.cpp	/^void Selection::InsertParagraphAfter()$/;"	f	class:Selection
InsertParagraphBefore	mate/msword8.cpp	/^void Range2::InsertParagraphBefore()$/;"	f	class:Range2
InsertParagraphBefore	mate/msword8.cpp	/^void Selection::InsertParagraphBefore()$/;"	f	class:Selection
InsertRows	mate/msword8.cpp	/^void Selection::InsertRows(VARIANT* NumRows)$/;"	f	class:Selection
InsertSymbol	mate/msword8.cpp	/^void Range2::InsertSymbol(long CharacterNumber, VARIANT* Font, VARIANT* Unicode, VARIANT* Bias)$/;"	f	class:Range2
InsertSymbol	mate/msword8.cpp	/^void Selection::InsertSymbol(long CharacterNumber, VARIANT* Font, VARIANT* Unicode, VARIANT* Bias)$/;"	f	class:Selection
Interior	mate/excel8.h	/^	Interior() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Interior
Interior	mate/excel8.h	/^	Interior(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Interior
Interior	mate/excel8.h	/^	Interior(const Interior& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Interior
Interior	mate/excel8.h	/^class Interior : public COleDispatchDriver$/;"	c
Intersect	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::Intersect(LPDISPATCH Arg1, LPDISPATCH Arg2, const VARIANT& Arg3, const VARIANT& Arg4, const VARIANT& Arg5, const VARIANT& Arg6, const VARIANT& Arg7, const VARIANT& Arg8, const VARIANT& Arg9, const VARIANT& Arg10, $/;"	f	class:_ApplicationExcel
IsCompleted	tmp/CDRSession.cpp	/^BOOL CCDRSession::IsCompleted(void)$/;"	f	class:CCDRSession
IsConnected	mate/CDROpPannel.cpp	/^BOOL CCDROpPannel::IsConnected(void)$/;"	f	class:CCDROpPannel
IsConnected	tmp/SerialComm.cpp	/^BOOL CSerialComm::IsConnected(void)$/;"	f	class:CSerialComm
IsDuplicated	mate/InstanceChecker.cpp	/^BOOL CInstanceChecker::IsDuplicated(const char *pName)$/;"	f	class:CInstanceChecker
IsEmpty	mate/Utility.cpp	/^BOOL IsEmpty(const char *pData) $/;"	f
IsEqual	mate/msword8.cpp	/^BOOL Range2::IsEqual(LPDISPATCH Range)$/;"	f	class:Range2
IsEqual	mate/msword8.cpp	/^BOOL Selection::IsEqual(LPDISPATCH Range)$/;"	f	class:Selection
IsKnownError	mate/Error.cpp	/^BOOL IsKnownError(void) $/;"	f
IsProtocolErr	tmp/SerialComm.cpp	/^BOOL CSerialComm::IsProtocolErr(void) $/;"	f	class:CSerialComm
Item	mate/msword8.cpp	/^LPDISPATCH Borders::Item(long Index)$/;"	f	class:Borders
Item	mate/msword8.cpp	/^LPDISPATCH Cells::Item(long Index)$/;"	f	class:Cells
Item	mate/msword8.cpp	/^LPDISPATCH Columns::Item(long Index)$/;"	f	class:Columns
Item	mate/msword8.cpp	/^LPDISPATCH Documents::Item(VARIANT* Index)$/;"	f	class:Documents
Item	mate/msword8.cpp	/^LPDISPATCH Paragraphs::Item(long Index)$/;"	f	class:Paragraphs
Item	mate/msword8.cpp	/^LPDISPATCH Rows::Item(long Index)$/;"	f	class:Rows
Item	mate/msword8.cpp	/^LPDISPATCH Tables::Item(long Index)$/;"	f	class:Tables
Justify	mate/excel8.cpp	/^void Range::Justify()$/;"	f	class:Range
KER_DATA	inc/CDRType.h	/^} KER_DATA ;$/;"	t	typeref:struct:_KER_DATA
KER_DATA	tmp/CDRType.h	/^} KER_DATA ;$/;"	t	typeref:struct:_KER_DATA
KR_DATA	inc/CDRType.h	/^} KR_DATA ;$/;"	t	typeref:struct:_KR_DATA
KR_DATA	tmp/CDRType.h	/^} KR_DATA ;$/;"	t	typeref:struct:_KR_DATA
KeyString	mate/msword8.cpp	/^CString _ApplicationWord::KeyString(long KeyCode, VARIANT* KeyCode2)$/;"	f	class:_ApplicationWord
LD	Makefile	/^LD=ld$/;"	m
LEFT_EYE	mate/ZernikeContext.h	/^    enum { LEFT_EYE = 1, RIGHT_EYE = 0 } ;$/;"	e	enum:CZernikeContext::__anon6
LENS_DATA	inc/CDRType.h	/^} LENS_DATA ;$/;"	t	typeref:struct:_LENS_DATA
LENS_DATA	tmp/CDRType.h	/^} LENS_DATA ;$/;"	t	typeref:struct:_LENS_DATA
LIBS	Makefile	/^LIBS=..\/minini\/minIni.o -lpthread$/;"	m
LIST_HEAD	inc/list.h	26;"	d
LIST_HEAD_INIT	inc/list.h	24;"	d
LIST_RECEIVER	mate/CDRMateView.h	32;"	d
LIST_TRANSFER	mate/CDRMateView.h	33;"	d
LIST_UNKNOWN	mate/CDRMateView.h	31;"	d
LM_EXCEL	mate/CDRData.h	18;"	d
LM_PRINT	mate/CDRData.h	16;"	d
LM_WORD	mate/CDRData.h	17;"	d
LTRACE	tmp/LogTracer.h	21;"	d
LinesToPoints	mate/msword8.cpp	/^float _ApplicationWord::LinesToPoints(float Lines)$/;"	f	class:_ApplicationWord
LinkInfo	mate/excel8.cpp	/^VARIANT _Workbook::LinkInfo(LPCTSTR Name, long LinkInfo, const VARIANT& Type, const VARIANT& EditionRef)$/;"	f	class:_Workbook
LinkSources	mate/excel8.cpp	/^VARIANT _Workbook::LinkSources(const VARIANT& Type)$/;"	f	class:_Workbook
ListCommands	mate/msword8.cpp	/^void _ApplicationWord::ListCommands(BOOL ListAllCommands)$/;"	f	class:_ApplicationWord
ListNames	mate/excel8.cpp	/^void Range::ListNames()$/;"	f	class:Range
Load	mate/SetupInfo.cpp	/^BOOL CSetupInfo::Load(const char *pExePath) $/;"	f	class:CSetupInfo
LockThis	tmp/LogTracer.h	/^	inline void			LockThis() {EnterCriticalSection(&m_csLock);} $/;"	f	class:CLogTracer
LockThis	tmp/SerialComm.h	/^	inline void			LockThis() {EnterCriticalSection(&m_csLock);} $/;"	f	class:CSerialComm
LookupNameProperties	mate/msword8.cpp	/^void Range2::LookupNameProperties()$/;"	f	class:Range2
LookupNameProperties	mate/msword8.cpp	/^void _ApplicationWord::LookupNameProperties(LPCTSTR Name)$/;"	f	class:_ApplicationWord
MANUAL_TRANSFER	main.c	36;"	d	file:
MAP_LEVEL_N	mate/ZernikeContext.h	5;"	d
MAP_RADIUS	mate/ZernikeContext.h	6;"	d
MAP_WIDTH	mate/ZernikeContext.h	7;"	d
MAX	inc/main.h	73;"	d
MAX_BUF	raw_packet.c	13;"	d	file:
MAX_CLM_FIELD	inc/clm_data.h	6;"	d
MAX_MRK_FIELD	inc/mrk_data.h	6;"	d
MININI_H	inc/minIni.h	20;"	d
MRK_DATA	mate/FileSystem.h	12;"	d
MRK_VIEW	mate/DeviceDrawInfo.h	19;"	d
MSG_ACK	inc/cdr_packet.h	6;"	d
MSG_ACK	tmp/SerialComm.h	11;"	d
MSG_BUSY	inc/cdr_packet.h	9;"	d
MSG_BUSY	tmp/SerialComm.h	13;"	d
MSG_LEN_MIN	inc/CDRType.h	19;"	d
MSG_LEN_MIN	tmp/CDRType.h	15;"	d
MSG_NACK	inc/cdr_packet.h	7;"	d
MSG_NACK	tmp/SerialComm.h	12;"	d
MSG_NAK	inc/cdr_packet.h	8;"	d
M_DATA	inc/CDRType.h	/^} M_DATA ;$/;"	t	typeref:struct:_M_DATA
M_DATA	tmp/CDRType.h	/^} M_DATA ;$/;"	t	typeref:struct:_M_DATA
M_N_DATA	inc/CDRType.h	/^} M_N_DATA ;$/;"	t	typeref:struct:_M_N_DATA
M_N_DATA	tmp/CDRType.h	/^} M_N_DATA ;$/;"	t	typeref:struct:_M_N_DATA
MacroOptions	mate/excel8.cpp	/^void _ApplicationExcel::MacroOptions(const VARIANT& Macro, const VARIANT& Description, const VARIANT& HasMenu, const VARIANT& MenuText, const VARIANT& HasShortcutKey, const VARIANT& ShortcutKey, const VARIANT& Category, const VARIANT& StatusBar, $/;"	f	class:_ApplicationExcel
MailLogoff	mate/excel8.cpp	/^void _ApplicationExcel::MailLogoff()$/;"	f	class:_ApplicationExcel
MailLogon	mate/excel8.cpp	/^void _ApplicationExcel::MailLogon(const VARIANT& Name, const VARIANT& Password, const VARIANT& DownloadNewMail)$/;"	f	class:_ApplicationExcel
MakeCompatibilityDefault	mate/msword8.cpp	/^void _Document::MakeCompatibilityDefault()$/;"	f	class:_Document
MakeDocument	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::MakeDocument(void) $/;"	f	class:COfficeDrawInfo
MakeWorksheet	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::MakeWorksheet(void) $/;"	f	class:COfficeDrawInfo
ManualHyphenation	mate/msword8.cpp	/^void _Document::ManualHyphenation()$/;"	f	class:_Document
Merge	mate/excel8.cpp	/^void Range::Merge(const VARIANT& Across)$/;"	f	class:Range
Merge	mate/msword8.cpp	/^void Cell::Merge(LPDISPATCH MergeTo)$/;"	f	class:Cell
Merge	mate/msword8.cpp	/^void Cells::Merge()$/;"	f	class:Cells
Merge	mate/msword8.cpp	/^void _Document::Merge(LPCTSTR FileName)$/;"	f	class:_Document
MergeColumn	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::MergeColumn(int nRow, int nCol, int nCount) $/;"	f	class:COfficeDrawInfo
MergeWorkbook	mate/excel8.cpp	/^void _Workbook::MergeWorkbook(const VARIANT& Filename)$/;"	f	class:_Workbook
MillimetersToPoints	mate/msword8.cpp	/^float _ApplicationWord::MillimetersToPoints(float Millimeters)$/;"	f	class:_ApplicationWord
MountVolume	mate/msword8.cpp	/^short _ApplicationWord::MountVolume(LPCTSTR Zone, LPCTSTR Server, LPCTSTR Volume, VARIANT* User, VARIANT* UserPassword, VARIANT* VolumePassword)$/;"	f	class:_ApplicationWord
Move	mate/excel8.cpp	/^void Worksheets::Move(const VARIANT& Before, const VARIANT& After)$/;"	f	class:Worksheets
Move	mate/excel8.cpp	/^void _Worksheet::Move(const VARIANT& Before, const VARIANT& After)$/;"	f	class:_Worksheet
Move	mate/msword8.cpp	/^long Range2::Move(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
Move	mate/msword8.cpp	/^long Selection::Move(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
Move	mate/msword8.cpp	/^void _ApplicationWord::Move(long Left, long Top)$/;"	f	class:_ApplicationWord
MoveDown	mate/msword8.cpp	/^long Selection::MoveDown(VARIANT* Unit, VARIANT* Count, VARIANT* Extend)$/;"	f	class:Selection
MoveEnd	mate/msword8.cpp	/^long Range2::MoveEnd(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
MoveEnd	mate/msword8.cpp	/^long Selection::MoveEnd(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
MoveEndUntil	mate/msword8.cpp	/^long Range2::MoveEndUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveEndUntil	mate/msword8.cpp	/^long Selection::MoveEndUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MoveEndWhile	mate/msword8.cpp	/^long Range2::MoveEndWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveEndWhile	mate/msword8.cpp	/^long Selection::MoveEndWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MoveLeft	mate/msword8.cpp	/^long Selection::MoveLeft(VARIANT* Unit, VARIANT* Count, VARIANT* Extend)$/;"	f	class:Selection
MoveRight	mate/msword8.cpp	/^long Selection::MoveRight(VARIANT* Unit, VARIANT* Count, VARIANT* Extend)$/;"	f	class:Selection
MoveStart	mate/msword8.cpp	/^long Range2::MoveStart(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
MoveStart	mate/msword8.cpp	/^long Selection::MoveStart(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
MoveStartUntil	mate/msword8.cpp	/^long Range2::MoveStartUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveStartUntil	mate/msword8.cpp	/^long Selection::MoveStartUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MoveStartWhile	mate/msword8.cpp	/^long Range2::MoveStartWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveStartWhile	mate/msword8.cpp	/^long Selection::MoveStartWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MoveToRight	mate/SystemTray.cpp	/^void CSystemTray::MoveToRight()$/;"	f	class:CSystemTray
MoveUntil	mate/msword8.cpp	/^long Range2::MoveUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveUntil	mate/msword8.cpp	/^long Selection::MoveUntil(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MoveUp	mate/msword8.cpp	/^long Selection::MoveUp(VARIANT* Unit, VARIANT* Count, VARIANT* Extend)$/;"	f	class:Selection
MoveWhile	mate/msword8.cpp	/^long Range2::MoveWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Range2
MoveWhile	mate/msword8.cpp	/^long Selection::MoveWhile(VARIANT* Cset, VARIANT* Count)$/;"	f	class:Selection
MsgThreadFunc	tmp/SerialComm.cpp	/^DWORD WINAPI CSerialComm::MsgThreadFunc(void *pvParam)$/;"	f	class:CSerialComm
NONE_VIEW	mate/DeviceDrawInfo.h	17;"	d
NPA_DATA	inc/CDRType.h	/^} NPA_DATA ;$/;"	t	typeref:struct:_NPA_DATA
NPA_DATA	tmp/CDRType.h	/^} NPA_DATA ;$/;"	t	typeref:struct:_NPA_DATA
NPC_DATA	inc/CDRType.h	/^} NPC_DATA ;$/;"	t	typeref:struct:_NPC_DATA
NPC_DATA	tmp/CDRType.h	/^} NPC_DATA ;$/;"	t	typeref:struct:_NPC_DATA
NP_RA_DATA	inc/CDRType.h	/^} NP_RA_DATA ;$/;"	t	typeref:struct:_NP_RA_DATA
NP_RA_DATA	tmp/CDRType.h	/^} NP_RA_DATA ;$/;"	t	typeref:struct:_NP_RA_DATA
NavigateArrow	mate/excel8.cpp	/^void Range::NavigateArrow(const VARIANT& TowardPrecedent, const VARIANT& ArrowNumber, const VARIANT& LinkNumber)$/;"	f	class:Range
NewWindow	mate/excel8.cpp	/^LPDISPATCH _Workbook::NewWindow()$/;"	f	class:_Workbook
NewWindow	mate/msword8.cpp	/^LPDISPATCH _ApplicationWord::NewWindow()$/;"	f	class:_ApplicationWord
Next	mate/msword8.cpp	/^LPDISPATCH Paragraph::Next(VARIANT* Count)$/;"	f	class:Paragraph
Next	mate/msword8.cpp	/^LPDISPATCH Range2::Next(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
Next	mate/msword8.cpp	/^LPDISPATCH Selection::Next(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
NextField	mate/msword8.cpp	/^LPDISPATCH Selection::NextField()$/;"	f	class:Selection
NextLetter	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::NextLetter()$/;"	f	class:_ApplicationExcel
NextLetter	mate/msword8.cpp	/^void _ApplicationWord::NextLetter()$/;"	f	class:_ApplicationWord
NextRevision	mate/msword8.cpp	/^LPDISPATCH Selection::NextRevision(VARIANT* Wrap)$/;"	f	class:Selection
NextSubdocument	mate/msword8.cpp	/^void Range2::NextSubdocument()$/;"	f	class:Range2
NextSubdocument	mate/msword8.cpp	/^void Selection::NextSubdocument()$/;"	f	class:Selection
NoteText	mate/excel8.cpp	/^CString Range::NoteText(const VARIANT& Text, const VARIANT& Start, const VARIANT& Length)$/;"	f	class:Range
NotifyWindow	tmp/SerialComm.cpp	/^void CSerialComm::NotifyWindow(long wParam, long lParam)$/;"	f	class:CSerialComm
OBJS	Makefile	/^OBJS=main.o conf.o serial.o raw_packet.o cdr_packet.o cdr_session.o data_dump.o csv_export.o console.o clm_data.o mrk_data.o buf_list.o inotify.o auto_send.o manual_send.o$/;"	m
OLEObjects	mate/excel8.cpp	/^LPDISPATCH _Worksheet::OLEObjects(const VARIANT& Index)$/;"	f	class:_Worksheet
OMIT_EMPTYDATA	mate/SetupInfo.h	29;"	d
OPEN_APPLOG	mate/AppLogFile.h	12;"	d
ORIENT_LANDSCAPE	mate/SetupInfo.h	20;"	d
ORIENT_PORTRAIT	mate/SetupInfo.h	19;"	d
OS	Makefile	/^OS=$(shell uname -o)$/;"	m
OffsetColor	mate/ButtonST.cpp	/^DWORD CButtonST::OffsetColor(BYTE byColorIndex, short shOffset, BOOL bRepaint)$/;"	f	class:CButtonST
OnActivate	mate/ButtonST.cpp	/^void CButtonST::OnActivate(UINT nState, CWnd* pWndOther, BOOL bMinimized) $/;"	f	class:CButtonST
OnAppAbout	mate/CDRMate.cpp	/^void CCDRMateApp::OnAppAbout()$/;"	f	class:CCDRMateApp
OnBeginPrinting	mate/CDRMateView.cpp	/^void CCDRMateView::OnBeginPrinting(CDC* \/*pDC*\/, CPrintInfo* \/*pInfo*\/)$/;"	f	class:CCDRMateView
OnButtonAbout	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonAbout(void)$/;"	f	class:CCDRMateView
OnButtonAdvanced	mate/GeneralPage.cpp	/^void CGeneralPage::OnButtonAdvanced() $/;"	f	class:CGeneralPage
OnButtonClose	mate/CDRMate.cpp	/^void CAboutDlg::OnButtonClose(void) $/;"	f	class:CAboutDlg
OnButtonConnect	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonConnect(void)$/;"	f	class:CCDRMateView
OnButtonDelete	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonDelete() $/;"	f	class:CCDRMateView
OnButtonDelete1	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonDelete1(void)$/;"	f	class:CCDRMateView
OnButtonDelete2	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonDelete2(void)$/;"	f	class:CCDRMateView
OnButtonDeleteAll	mate/PrintPage.cpp	/^void CPrintPage::OnButtonDeleteAll() $/;"	f	class:CPrintPage
OnButtonDown	mate/PrintPage.cpp	/^void CPrintPage::OnButtonDown() $/;"	f	class:CPrintPage
OnButtonExit	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonExit(void)$/;"	f	class:CCDRMateView
OnButtonExport	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonExport() $/;"	f	class:CCDRMateView
OnButtonExport1	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonExport1(void)$/;"	f	class:CCDRMateView
OnButtonExport2	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonExport2(void) $/;"	f	class:CCDRMateView
OnButtonExportDir	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnButtonExportDir() $/;"	f	class:CAdvancedDlg
OnButtonGraph1	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonGraph1(void)$/;"	f	class:CCDRMateView
OnButtonGraph2	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonGraph2(void)$/;"	f	class:CCDRMateView
OnButtonLeft	mate/PrintPage.cpp	/^void CPrintPage::OnButtonLeft() $/;"	f	class:CPrintPage
OnButtonOpenExport	mate/GeneralPage.cpp	/^void CGeneralPage::OnButtonOpenExport() $/;"	f	class:CGeneralPage
OnButtonOpenImport	mate/GeneralPage.cpp	/^void CGeneralPage::OnButtonOpenImport() $/;"	f	class:CGeneralPage
OnButtonOptions	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonOptions(void)$/;"	f	class:CCDRMateView
OnButtonPrint	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonPrint() $/;"	f	class:CCDRMateView
OnButtonPrint1	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonPrint1(void)$/;"	f	class:CCDRMateView
OnButtonPrint2	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonPrint2(void)$/;"	f	class:CCDRMateView
OnButtonReceived	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonReceived(void) $/;"	f	class:CCDRMateView
OnButtonReport1	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonReport1(void)$/;"	f	class:CCDRMateView
OnButtonReport2	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonReport2(void)$/;"	f	class:CCDRMateView
OnButtonRight	mate/PrintPage.cpp	/^void CPrintPage::OnButtonRight() $/;"	f	class:CPrintPage
OnButtonSelectAll	mate/PrintPage.cpp	/^void CPrintPage::OnButtonSelectAll() $/;"	f	class:CPrintPage
OnButtonSend	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonSend() $/;"	f	class:CCDRMateView
OnButtonTransffered	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonTransffered(void) $/;"	f	class:CCDRMateView
OnButtonUp	mate/PrintPage.cpp	/^void CPrintPage::OnButtonUp() $/;"	f	class:CPrintPage
OnButtonUpdate	mate/ImportDlg.cpp	/^void CImportDlg::OnButtonUpdate() $/;"	f	class:CImportDlg
OnButtonUpdate2	mate/ImportDlg.cpp	/^void CImportDlg::OnButtonUpdate2() $/;"	f	class:CImportDlg
OnButtonUpdate3	mate/ImportDlg.cpp	/^void CImportDlg::OnButtonUpdate3() $/;"	f	class:CImportDlg
OnButtonView	mate/CDRMateView.cpp	/^void CCDRMateView::OnButtonView() $/;"	f	class:CCDRMateView
OnCancelMode	mate/ButtonST.cpp	/^void CButtonST::OnCancelMode() $/;"	f	class:CButtonST
OnChar	mate/CDRMateView.cpp	/^void CCDRMateView::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags) $/;"	f	class:CCDRMateView
OnCheckHistoryInput	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnCheckHistoryInput() $/;"	f	class:CAdvancedDlg
OnClicked	mate/ButtonST.cpp	/^BOOL CButtonST::OnClicked() $/;"	f	class:CButtonST
OnClose	mate/MainFrm.cpp	/^void CMainFrame::OnClose() $/;"	f	class:CMainFrame
OnCreate	mate/DataFrm.cpp	/^int CDataFrm::OnCreate(LPCREATESTRUCT lpCreateStruct) $/;"	f	class:CDataFrm
OnCreate	mate/DataView.cpp	/^int CDataView::OnCreate(LPCREATESTRUCT lpCreateStruct) $/;"	f	class:CDataView
OnCreate	mate/MainFrm.cpp	/^int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)$/;"	f	class:CMainFrame
OnCreate	mate/ZernikeWnd.cpp	/^int CZernikeWnd::OnCreate(LPCREATESTRUCT lpCreateStruct) $/;"	f	class:CZernikeWnd
OnCreateClient	mate/MainFrm.cpp	/^BOOL CMainFrame::OnCreateClient(LPCREATESTRUCT lpcs, CCreateContext* pContext) $/;"	f	class:CMainFrame
OnCtlColor	mate/CDRMateView.cpp	/^HBRUSH CCDRMateView::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) $/;"	f	class:CCDRMateView
OnCtlColor	mate/Lable.cpp	/^HBRUSH CLable::OnCtlColor(CDC* pDC, CWnd* pWnd, UINT nCtlColor) $/;"	f	class:CLable
OnDblclkListReceiver	mate/CDRMateView.cpp	/^void CCDRMateView::OnDblclkListReceiver(NMHDR* pNMHDR, LRESULT* pResult) $/;"	f	class:CCDRMateView
OnDblclkListTransfer	mate/CDRMateView.cpp	/^void CCDRMateView::OnDblclkListTransfer(NMHDR* pNMHDR, LRESULT* pResult) $/;"	f	class:CCDRMateView
OnDestroy	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnDestroy() $/;"	f	class:CAdvancedDlg
OnDestroy	mate/ConnectPage.cpp	/^void CConnectPage::OnDestroy() $/;"	f	class:CConnectPage
OnDestroy	mate/DataFrm.cpp	/^void CDataFrm::OnDestroy() $/;"	f	class:CDataFrm
OnDestroy	mate/DataView.cpp	/^void CDataView::OnDestroy() $/;"	f	class:CDataView
OnDestroy	mate/GeneralPage.cpp	/^void CGeneralPage::OnDestroy() $/;"	f	class:CGeneralPage
OnDestroy	mate/MainFrm.cpp	/^void CMainFrame::OnDestroy() $/;"	f	class:CMainFrame
OnDestroy	mate/PrintPage.cpp	/^void CPrintPage::OnDestroy() $/;"	f	class:CPrintPage
OnDraw	mate/DataView.cpp	/^void CDataView::OnDraw(CDC* pDC)$/;"	f	class:CDataView
OnDraw	mate/ZernikeView.cpp	/^void CZernikeView::OnDraw(CDC* pDC)$/;"	f	class:CZernikeView
OnDrawBackground	mate/ButtonST.cpp	/^DWORD CButtonST::OnDrawBackground(CDC* pDC, CRect* pRect)$/;"	f	class:CButtonST
OnDrawBorder	mate/ButtonST.cpp	/^DWORD CButtonST::OnDrawBorder(CDC* pDC, CRect* pRect)$/;"	f	class:CButtonST
OnEnable	mate/ButtonST.cpp	/^void CButtonST::OnEnable(BOOL bEnable) $/;"	f	class:CButtonST
OnEndPrinting	mate/CDRMateView.cpp	/^void CCDRMateView::OnEndPrinting(CDC* \/*pDC*\/, CPrintInfo* \/*pInfo*\/)$/;"	f	class:CCDRMateView
OnEraseBkgnd	mate/Tabwnd.cpp	/^BOOL CTabWnd::OnEraseBkgnd(CDC* pDC)$/;"	f	class:CTabWnd
OnFileConnect	mate/CDRMateView.cpp	/^void CCDRMateView::OnFileConnect() $/;"	f	class:CCDRMateView
OnFileDisconnect	mate/CDRMateView.cpp	/^void CCDRMateView::OnFileDisconnect() $/;"	f	class:CCDRMateView
OnFileExit	mate/CDRMateView.cpp	/^void CCDRMateView::OnFileExit() $/;"	f	class:CCDRMateView
OnFilePrintSetup	mate/MainFrm.cpp	/^void CMainFrame::OnFilePrintSetup() $/;"	f	class:CMainFrame
OnGetCheck	mate/ButtonST.cpp	/^LRESULT CButtonST::OnGetCheck(WPARAM wParam, LPARAM lParam)$/;"	f	class:CButtonST
OnGetDlgCode	mate/ButtonST.cpp	/^UINT CButtonST::OnGetDlgCode() $/;"	f	class:CButtonST
OnIdle	mate/CDRMate.cpp	/^BOOL CCDRMateApp::OnIdle(LONG lCount) $/;"	f	class:CCDRMateApp
OnInitDialog	mate/AdvancedDlg.cpp	/^BOOL CAdvancedDlg::OnInitDialog() $/;"	f	class:CAdvancedDlg
OnInitDialog	mate/CDRMate.cpp	/^BOOL CAboutDlg::OnInitDialog() $/;"	f	class:CAboutDlg
OnInitDialog	mate/ConnectPage.cpp	/^BOOL CConnectPage::OnInitDialog() $/;"	f	class:CConnectPage
OnInitDialog	mate/GeneralPage.cpp	/^BOOL CGeneralPage::OnInitDialog() $/;"	f	class:CGeneralPage
OnInitDialog	mate/PatientHistory.cpp	/^BOOL CPatientHistory::OnInitDialog() $/;"	f	class:CPatientHistory
OnInitDialog	mate/PrintPage.cpp	/^BOOL CPrintPage::OnInitDialog() $/;"	f	class:CPrintPage
OnInitialUpdate	mate/CDRMateView.cpp	/^void CCDRMateView::OnInitialUpdate()$/;"	f	class:CCDRMateView
OnInitialUpdate	mate/DataView.cpp	/^void CDataView::OnInitialUpdate()$/;"	f	class:CDataView
OnInitialUpdate	mate/ZernikeView.cpp	/^void CZernikeView::OnInitialUpdate()$/;"	f	class:CZernikeView
OnItemdblclickListReceiver	mate/CDRMateView.cpp	/^void CCDRMateView::OnItemdblclickListReceiver(NMHDR* pNMHDR, LRESULT* pResult) $/;"	f	class:CCDRMateView
OnItemdblclickListTransfer	mate/CDRMateView.cpp	/^void CCDRMateView::OnItemdblclickListTransfer(NMHDR* pNMHDR, LRESULT* pResult) $/;"	f	class:CCDRMateView
OnKey	mate/excel8.cpp	/^void _ApplicationExcel::OnKey(LPCTSTR Key, const VARIANT& Procedure)$/;"	f	class:_ApplicationExcel
OnKillFocus	mate/ButtonST.cpp	/^void CButtonST::OnKillFocus(CWnd * pNewWnd)$/;"	f	class:CButtonST
OnKillfocusEditFileName	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnKillfocusEditFileName() $/;"	f	class:CAdvancedDlg
OnLButtonUp	mate/Tabwnd.cpp	/^void CTabWnd::OnLButtonUp(UINT nFlags, CPoint point)$/;"	f	class:CTabWnd
OnMeasureItem	mate/ButtonST.cpp	/^void CButtonST::OnMeasureItem(int nIDCtl, LPMEASUREITEMSTRUCT lpMeasureItemStruct) $/;"	f	class:CButtonST
OnMenuChar	mate/ButtonST.cpp	/^LRESULT CButtonST::OnMenuChar(UINT nChar, UINT nFlags, CMenu* pMenu) $/;"	f	class:CButtonST
OnMenuClose	mate/DataFrm.cpp	/^void CDataFrm::OnMenuClose() $/;"	f	class:CDataFrm
OnMenuClose	mate/ZernikeWnd.cpp	/^void CZernikeWnd::OnMenuClose() $/;"	f	class:CZernikeWnd
OnMenuPrint	mate/DataFrm.cpp	/^void CDataFrm::OnMenuPrint() $/;"	f	class:CDataFrm
OnMenuPrint	mate/ZernikeWnd.cpp	/^void CZernikeWnd::OnMenuPrint() $/;"	f	class:CZernikeWnd
OnMouseLeave	mate/ButtonST.cpp	/^LRESULT CButtonST::OnMouseLeave(WPARAM wParam, LPARAM lParam)$/;"	f	class:CButtonST
OnMouseMove	mate/ButtonST.cpp	/^void CButtonST::OnMouseMove(UINT nFlags, CPoint point)$/;"	f	class:CButtonST
OnNewCdrData	mate/CDRMateView.cpp	/^void CCDRMateView::OnNewCdrData(long wParam, long lParam)$/;"	f	class:CCDRMateView
OnNewDocument	mate/CDRMateDoc.cpp	/^BOOL CCDRMateDoc::OnNewDocument()$/;"	f	class:CCDRMateDoc
OnOK	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnOK() $/;"	f	class:CAdvancedDlg
OnOK	mate/PatientHistory.cpp	/^void CPatientHistory::OnOK() $/;"	f	class:CPatientHistory
OnPaint	mate/MainFrm.cpp	/^void CMainFrame::OnPaint() $/;"	f	class:CMainFrame
OnPaint	mate/Tabwnd.cpp	/^void CTabWnd::OnPaint()$/;"	f	class:CTabWnd
OnPreparePrinting	mate/CDRMateView.cpp	/^BOOL CCDRMateView::OnPreparePrinting(CPrintInfo* pInfo)$/;"	f	class:CCDRMateView
OnPrint	mate/CDRMateView.cpp	/^void CCDRMateView::OnPrint(CDC* pDC, CPrintInfo* \/*pInfo*\/)$/;"	f	class:CCDRMateView
OnQueryDragIcon	mate/MainFrm.cpp	/^HCURSOR CMainFrame::OnQueryDragIcon()$/;"	f	class:CMainFrame
OnRadioDontPrint	mate/PrintPage.cpp	/^void CPrintPage::OnRadioDontPrint() $/;"	f	class:CPrintPage
OnRadioExportOff	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioExportOff() $/;"	f	class:CGeneralPage
OnRadioExportOn	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioExportOn() $/;"	f	class:CGeneralPage
OnRadioGrayColor	mate/PrintPage.cpp	/^void CPrintPage::OnRadioGrayColor() $/;"	f	class:CPrintPage
OnRadioLandscape	mate/PrintPage.cpp	/^void CPrintPage::OnRadioLandscape() $/;"	f	class:CPrintPage
OnRadioPortrait	mate/PrintPage.cpp	/^void CPrintPage::OnRadioPortrait() $/;"	f	class:CPrintPage
OnRadioPrintOff	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioPrintOff() $/;"	f	class:CGeneralPage
OnRadioPrintOn	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioPrintOn() $/;"	f	class:CGeneralPage
OnRadioSizeA4	mate/PrintPage.cpp	/^void CPrintPage::OnRadioSizeA4() $/;"	f	class:CPrintPage
OnRadioSizeLetter	mate/PrintPage.cpp	/^void CPrintPage::OnRadioSizeLetter() $/;"	f	class:CPrintPage
OnRadioSubfolderOff	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnRadioSubfolderOff() $/;"	f	class:CAdvancedDlg
OnRadioSubfolderOn	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnRadioSubfolderOn() $/;"	f	class:CAdvancedDlg
OnRadioTransferOff	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioTransferOff() $/;"	f	class:CGeneralPage
OnRadioTransferOn	mate/GeneralPage.cpp	/^void CGeneralPage::OnRadioTransferOn() $/;"	f	class:CGeneralPage
OnRepeat	mate/excel8.cpp	/^void _ApplicationExcel::OnRepeat(LPCTSTR Text, LPCTSTR Procedure)$/;"	f	class:_ApplicationExcel
OnSelchangeComboExportType	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnSelchangeComboExportType() $/;"	f	class:CAdvancedDlg
OnSelchangeComboFileCreation	mate/AdvancedDlg.cpp	/^void CAdvancedDlg::OnSelchangeComboFileCreation() $/;"	f	class:CAdvancedDlg
OnSelchangeComboFontSize	mate/PrintPage.cpp	/^void CPrintPage::OnSelchangeComboFontSize() $/;"	f	class:CPrintPage
OnSetCheck	mate/ButtonST.cpp	/^LRESULT CButtonST::OnSetCheck(WPARAM wParam, LPARAM lParam)$/;"	f	class:CButtonST
OnSetCursor	mate/ButtonST.cpp	/^BOOL CButtonST::OnSetCursor(CWnd* pWnd, UINT nHitTest, UINT message) $/;"	f	class:CButtonST
OnSetStyle	mate/ButtonST.cpp	/^LRESULT CButtonST::OnSetStyle(WPARAM wParam, LPARAM lParam)$/;"	f	class:CButtonST
OnSetupOptions	mate/CDRMateView.cpp	/^void CCDRMateView::OnSetupOptions() $/;"	f	class:CCDRMateView
OnSize	mate/CDRMateView.cpp	/^void CCDRMateView::OnSize(UINT nType, int cx, int cy) $/;"	f	class:CCDRMateView
OnSize	mate/DataView.cpp	/^void CDataView::OnSize(UINT nType, int cx, int cy) $/;"	f	class:CDataView
OnSize	mate/Tabwnd.cpp	/^void CTabWnd::OnSize(UINT nType, int cx, int cy)$/;"	f	class:CTabWnd
OnSysColorChange	mate/ButtonST.cpp	/^void CButtonST::OnSysColorChange() $/;"	f	class:CButtonST
OnSysCommand	mate/MainFrm.cpp	/^void CMainFrame::OnSysCommand(UINT nID, LPARAM lParam) $/;"	f	class:CMainFrame
OnTabResize	mate/Tabwnd.cpp	/^LRESULT CTabWnd::OnTabResize(WPARAM, LPARAM)$/;"	f	class:CTabWnd
OnTabchanged	mate/CDRMateView.cpp	/^void CCDRMateView::OnTabchanged(long wParam, long lParam)$/;"	f	class:CCDRMateView
OnTime	mate/excel8.cpp	/^void _ApplicationExcel::OnTime(const VARIANT& EarliestTime, LPCTSTR Procedure, const VARIANT& LatestTime, const VARIANT& Schedule)$/;"	f	class:_ApplicationExcel
OnTime	mate/msword8.cpp	/^void _ApplicationWord::OnTime(VARIANT* When, LPCTSTR Name, VARIANT* Tolerance)$/;"	f	class:_ApplicationWord
OnTimer	mate/CDRMateView.cpp	/^void CCDRMateView::OnTimer(UINT nIDEvent) $/;"	f	class:CCDRMateView
OnTimer	mate/SystemTray.cpp	/^void CSystemTray::OnTimer(UINT nIDEvent) $/;"	f	class:CSystemTray
OnTrayExit	mate/MainFrm.cpp	/^void CMainFrame::OnTrayExit() $/;"	f	class:CMainFrame
OnTrayNotification	mate/SystemTray.cpp	/^LRESULT CSystemTray::OnTrayNotification(UINT wParam, LONG lParam) $/;"	f	class:CSystemTray
OnTrayRestore	mate/MainFrm.cpp	/^void CMainFrame::OnTrayRestore() $/;"	f	class:CMainFrame
OnUndo	mate/excel8.cpp	/^void _ApplicationExcel::OnUndo(LPCTSTR Text, LPCTSTR Procedure)$/;"	f	class:_ApplicationExcel
OnUpdateFileConnect	mate/CDRMateView.cpp	/^void CCDRMateView::OnUpdateFileConnect(CCmdUI* pCmdUI) $/;"	f	class:CCDRMateView
OnUpdateFileDisconnect	mate/CDRMateView.cpp	/^void CCDRMateView::OnUpdateFileDisconnect(CCmdUI* pCmdUI) $/;"	f	class:CCDRMateView
Open	mate/AppLogFile.cpp	/^BOOL CAppLogFile::Open(LPCTSTR pLogPath, LPCTSTR pFileName) $/;"	f	class:CAppLogFile
Open	mate/excel8.cpp	/^LPDISPATCH Workbooks::Open(LPCTSTR Filename, const VARIANT& UpdateLinks, const VARIANT& ReadOnly, const VARIANT& Format, const VARIANT& Password, const VARIANT& WriteResPassword, const VARIANT& IgnoreReadOnlyRecommended, const VARIANT& Origin, $/;"	f	class:Workbooks
Open	mate/msword8.cpp	/^LPDISPATCH Documents::Open(VARIANT* FileName, VARIANT* ConfirmConversions, VARIANT* ReadOnly, VARIANT* AddToRecentFiles, VARIANT* PasswordDocument, VARIANT* PasswordTemplate, VARIANT* Revert, VARIANT* WritePasswordDocument, $/;"	f	class:Documents
OpenLinks	mate/excel8.cpp	/^void _Workbook::OpenLinks(LPCTSTR Name, const VARIANT& ReadOnly, const VARIANT& Type)$/;"	f	class:_Workbook
OpenOrCloseUp	mate/msword8.cpp	/^void Paragraph::OpenOrCloseUp()$/;"	f	class:Paragraph
OpenOrCloseUp	mate/msword8.cpp	/^void Paragraphs::OpenOrCloseUp()$/;"	f	class:Paragraphs
OpenText	mate/excel8.cpp	/^void Workbooks::OpenText(LPCTSTR Filename, const VARIANT& Origin, const VARIANT& StartRow, const VARIANT& DataType, long TextQualifier, const VARIANT& ConsecutiveDelimiter, const VARIANT& Tab, const VARIANT& Semicolon, const VARIANT& Comma, $/;"	f	class:Workbooks
OpenUp	mate/msword8.cpp	/^void Paragraph::OpenUp()$/;"	f	class:Paragraph
OpenUp	mate/msword8.cpp	/^void Paragraphs::OpenUp()$/;"	f	class:Paragraphs
OrderListItems	mate/CDRMateView.cpp	/^void CCDRMateView::OrderListItems(int nList) $/;"	f	class:CCDRMateView
OrganizerCopy	mate/msword8.cpp	/^void _ApplicationWord::OrganizerCopy(LPCTSTR Source, LPCTSTR Destination, LPCTSTR Name, long Object)$/;"	f	class:_ApplicationWord
OrganizerDelete	mate/msword8.cpp	/^void _ApplicationWord::OrganizerDelete(LPCTSTR Source, LPCTSTR Name, long Object)$/;"	f	class:_ApplicationWord
OrganizerRename	mate/msword8.cpp	/^void _ApplicationWord::OrganizerRename(LPCTSTR Source, LPCTSTR Name, LPCTSTR NewName, long Object)$/;"	f	class:_ApplicationWord
Outdent	mate/msword8.cpp	/^void Paragraph::Outdent()$/;"	f	class:Paragraph
Outdent	mate/msword8.cpp	/^void Paragraphs::Outdent()$/;"	f	class:Paragraphs
OutlineDemote	mate/msword8.cpp	/^void Paragraph::OutlineDemote()$/;"	f	class:Paragraph
OutlineDemote	mate/msword8.cpp	/^void Paragraphs::OutlineDemote()$/;"	f	class:Paragraphs
OutlineDemoteToBody	mate/msword8.cpp	/^void Paragraph::OutlineDemoteToBody()$/;"	f	class:Paragraph
OutlineDemoteToBody	mate/msword8.cpp	/^void Paragraphs::OutlineDemoteToBody()$/;"	f	class:Paragraphs
OutlinePromote	mate/msword8.cpp	/^void Paragraph::OutlinePromote()$/;"	f	class:Paragraph
OutlinePromote	mate/msword8.cpp	/^void Paragraphs::OutlinePromote()$/;"	f	class:Paragraphs
PAPER_A4	mate/SetupInfo.h	17;"	d
PAPER_LETTER	mate/SetupInfo.h	18;"	d
PATIENT_DATA	inc/CDRType.h	/^} PATIENT_DATA ;$/;"	t	typeref:struct:_PATIENT_DATA
PATIENT_DATA	tmp/CDRType.h	/^} PATIENT_DATA ;$/;"	t	typeref:struct:_PATIENT_DATA
PC_BD	inc/comm_pc_def.h	22;"	d
PC_BD	tmp/comm_pc_def.h	22;"	d
PC_DIST_MOD_ALL	inc/comm_pc_def.h	34;"	d
PC_DIST_MOD_ALL	tmp/comm_pc_def.h	34;"	d
PC_DIST_MOD_FAR	inc/comm_pc_def.h	32;"	d
PC_DIST_MOD_FAR	tmp/comm_pc_def.h	32;"	d
PC_DIST_MOD_NEAR	inc/comm_pc_def.h	33;"	d
PC_DIST_MOD_NEAR	tmp/comm_pc_def.h	33;"	d
PC_DIST_MOD_NONE	inc/comm_pc_def.h	35;"	d
PC_DIST_MOD_NONE	tmp/comm_pc_def.h	35;"	d
PC_ECP	inc/comm_pc_def.h	20;"	d
PC_ECP	tmp/comm_pc_def.h	20;"	d
PC_EYE_MOD_ADDVA	inc/comm_pc_def.h	40;"	d
PC_EYE_MOD_ADDVA	tmp/comm_pc_def.h	40;"	d
PC_EYE_MOD_ALL	inc/comm_pc_def.h	43;"	d
PC_EYE_MOD_ALL	tmp/comm_pc_def.h	43;"	d
PC_EYE_MOD_BOTH	inc/comm_pc_def.h	42;"	d
PC_EYE_MOD_BOTH	tmp/comm_pc_def.h	42;"	d
PC_EYE_MOD_LEFT	inc/comm_pc_def.h	39;"	d
PC_EYE_MOD_LEFT	tmp/comm_pc_def.h	39;"	d
PC_EYE_MOD_NONE	inc/comm_pc_def.h	44;"	d
PC_EYE_MOD_NONE	tmp/comm_pc_def.h	44;"	d
PC_EYE_MOD_OU	inc/comm_pc_def.h	37;"	d
PC_EYE_MOD_OU	tmp/comm_pc_def.h	37;"	d
PC_EYE_MOD_RIGHT	inc/comm_pc_def.h	38;"	d
PC_EYE_MOD_RIGHT	tmp/comm_pc_def.h	38;"	d
PC_EYE_MOD_VA	inc/comm_pc_def.h	41;"	d
PC_EYE_MOD_VA	tmp/comm_pc_def.h	41;"	d
PC_FD	inc/comm_pc_def.h	24;"	d
PC_FD	tmp/comm_pc_def.h	24;"	d
PC_PDESC_BASIC_DATA	inc/comm_pc_def.h	54;"	d
PC_PDESC_BASIC_DATA	tmp/comm_pc_def.h	54;"	d
PC_PDESC_BVF_DATA	inc/comm_pc_def.h	65;"	d
PC_PDESC_BVF_DATA	tmp/comm_pc_def.h	65;"	d
PC_PDESC_CLM_DATA	inc/comm_pc_def.h	56;"	d
PC_PDESC_CLM_DATA	tmp/comm_pc_def.h	56;"	d
PC_PDESC_FIN_DATA	inc/comm_pc_def.h	59;"	d
PC_PDESC_FIN_DATA	tmp/comm_pc_def.h	59;"	d
PC_PDESC_HEADING	inc/comm_pc_def.h	53;"	d
PC_PDESC_HEADING	tmp/comm_pc_def.h	53;"	d
PC_PDESC_KERATO_DATA	inc/comm_pc_def.h	66;"	d
PC_PDESC_KERATO_DATA	tmp/comm_pc_def.h	66;"	d
PC_PDESC_MRK_DATA	inc/comm_pc_def.h	57;"	d
PC_PDESC_MRK_DATA	tmp/comm_pc_def.h	57;"	d
PC_PDESC_PRISM1_DATA	inc/comm_pc_def.h	62;"	d
PC_PDESC_PRISM1_DATA	tmp/comm_pc_def.h	62;"	d
PC_PDESC_PRISM2_DATA	inc/comm_pc_def.h	63;"	d
PC_PDESC_PRISM2_DATA	tmp/comm_pc_def.h	63;"	d
PC_PDESC_PRISM3_DATA	inc/comm_pc_def.h	64;"	d
PC_PDESC_PRISM3_DATA	tmp/comm_pc_def.h	64;"	d
PC_PDESC_RA_DATA	inc/comm_pc_def.h	60;"	d
PC_PDESC_RA_DATA	tmp/comm_pc_def.h	60;"	d
PC_PDESC_RC_DATA	inc/comm_pc_def.h	61;"	d
PC_PDESC_RC_DATA	tmp/comm_pc_def.h	61;"	d
PC_PDESC_SUBJ_DATA	inc/comm_pc_def.h	58;"	d
PC_PDESC_SUBJ_DATA	tmp/comm_pc_def.h	58;"	d
PC_PDESC_TERMINATOR	inc/comm_pc_def.h	67;"	d
PC_PDESC_TERMINATOR	tmp/comm_pc_def.h	67;"	d
PC_PDESC_UA_DATA	inc/comm_pc_def.h	55;"	d
PC_PDESC_UA_DATA	tmp/comm_pc_def.h	55;"	d
PC_RD	inc/comm_pc_def.h	23;"	d
PC_RD	tmp/comm_pc_def.h	23;"	d
PC_SCP	inc/comm_pc_def.h	19;"	d
PC_SCP	tmp/comm_pc_def.h	19;"	d
PC_SD	inc/comm_pc_def.h	25;"	d
PC_SD	tmp/comm_pc_def.h	25;"	d
PRINT	inc/main.h	23;"	d
PRINTER_MODE	mate/DeviceDrawInfo.h	39;"	d
PRINT_ERROR	inc/main.h	25;"	d
PRINT_LEFT_BOT	mate/SetupInfo.h	25;"	d
PRINT_LEFT_TOP	mate/SetupInfo.h	24;"	d
PRINT_RIGHT_BOT	mate/SetupInfo.h	27;"	d
PRINT_RIGHT_TOP	mate/SetupInfo.h	26;"	d
PRISM_DATA	inc/CDRType.h	/^} PRISM_DATA ;$/;"	t	typeref:struct:_PRISM_DATA
PRISM_DATA	tmp/CDRType.h	/^} PRISM_DATA ;$/;"	t	typeref:struct:_PRISM_DATA
P_DATA	inc/CDRType.h	/^} P_DATA ;$/;"	t	typeref:struct:_P_DATA
P_DATA	tmp/CDRType.h	/^} P_DATA ;$/;"	t	typeref:struct:_P_DATA
PaintBk	mate/ButtonST.cpp	/^void CButtonST::PaintBk(CDC* pDC)$/;"	f	class:CButtonST
Paragraph	mate/msword8.h	/^	Paragraph() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Paragraph
Paragraph	mate/msword8.h	/^	Paragraph(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Paragraph
Paragraph	mate/msword8.h	/^	Paragraph(const Paragraph& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Paragraph
Paragraph	mate/msword8.h	/^class Paragraph : public COleDispatchDriver$/;"	c
Paragraphs	mate/msword8.h	/^	Paragraphs() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Paragraphs
Paragraphs	mate/msword8.h	/^	Paragraphs(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Paragraphs
Paragraphs	mate/msword8.h	/^	Paragraphs(const Paragraphs& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Paragraphs
Paragraphs	mate/msword8.h	/^class Paragraphs : public COleDispatchDriver$/;"	c
Parse	mate/excel8.cpp	/^void Range::Parse(const VARIANT& ParseLine, const VARIANT& Destination)$/;"	f	class:Range
Paste	mate/excel8.cpp	/^void _Worksheet::Paste(const VARIANT& Destination, const VARIANT& Link)$/;"	f	class:_Worksheet
Paste	mate/msword8.cpp	/^void Range2::Paste()$/;"	f	class:Range2
Paste	mate/msword8.cpp	/^void Selection::Paste()$/;"	f	class:Selection
PasteFormat	mate/msword8.cpp	/^void Selection::PasteFormat()$/;"	f	class:Selection
PasteSpecial	mate/excel8.cpp	/^void Range::PasteSpecial(long Paste, long Operation, const VARIANT& SkipBlanks, const VARIANT& Transpose)$/;"	f	class:Range
PasteSpecial	mate/excel8.cpp	/^void _Worksheet::PasteSpecial(const VARIANT& Format, const VARIANT& Link, const VARIANT& DisplayAsIcon, const VARIANT& IconFileName, const VARIANT& IconIndex, const VARIANT& IconLabel)$/;"	f	class:_Worksheet
PasteSpecial	mate/msword8.cpp	/^void Range2::PasteSpecial(VARIANT* IconIndex, VARIANT* Link, VARIANT* Placement, VARIANT* DisplayAsIcon, VARIANT* DataType, VARIANT* IconFileName, VARIANT* IconLabel)$/;"	f	class:Range2
PasteSpecial	mate/msword8.cpp	/^void Selection::PasteSpecial(VARIANT* IconIndex, VARIANT* Link, VARIANT* Placement, VARIANT* DisplayAsIcon, VARIANT* DataType, VARIANT* IconFileName, VARIANT* IconLabel)$/;"	f	class:Selection
PicasToPoints	mate/msword8.cpp	/^float _ApplicationWord::PicasToPoints(float Picas)$/;"	f	class:_ApplicationWord
PivotCaches	mate/excel8.cpp	/^LPDISPATCH _Workbook::PivotCaches()$/;"	f	class:_Workbook
PivotTableWizard	mate/excel8.cpp	/^LPDISPATCH _Worksheet::PivotTableWizard(const VARIANT& SourceType, const VARIANT& SourceData, const VARIANT& TableDestination, const VARIANT& TableName, const VARIANT& RowGrand, const VARIANT& ColumnGrand, const VARIANT& SaveData, $/;"	f	class:_Worksheet
PivotTables	mate/excel8.cpp	/^LPDISPATCH _Worksheet::PivotTables(const VARIANT& Index)$/;"	f	class:_Worksheet
PointsToCentimeters	mate/msword8.cpp	/^float _ApplicationWord::PointsToCentimeters(float Points)$/;"	f	class:_ApplicationWord
PointsToInches	mate/msword8.cpp	/^float _ApplicationWord::PointsToInches(float Points)$/;"	f	class:_ApplicationWord
PointsToLines	mate/msword8.cpp	/^float _ApplicationWord::PointsToLines(float Points)$/;"	f	class:_ApplicationWord
PointsToMillimeters	mate/msword8.cpp	/^float _ApplicationWord::PointsToMillimeters(float Points)$/;"	f	class:_ApplicationWord
PointsToPicas	mate/msword8.cpp	/^float _ApplicationWord::PointsToPicas(float Points)$/;"	f	class:_ApplicationWord
Post	mate/excel8.cpp	/^void _Workbook::Post(const VARIANT& DestName)$/;"	f	class:_Workbook
Post	mate/msword8.cpp	/^void _Document::Post()$/;"	f	class:_Document
PreCreateWindow	mate/CDRMateView.cpp	/^BOOL CCDRMateView::PreCreateWindow(CREATESTRUCT& cs)$/;"	f	class:CCDRMateView
PreCreateWindow	mate/DataFrm.cpp	/^BOOL CDataFrm::PreCreateWindow(CREATESTRUCT& cs) $/;"	f	class:CDataFrm
PreCreateWindow	mate/MainFrm.cpp	/^BOOL CMainFrame::PreCreateWindow(CREATESTRUCT& cs)$/;"	f	class:CMainFrame
PreCreateWindow	mate/ZernikeWnd.cpp	/^BOOL CZernikeWnd::PreCreateWindow(CREATESTRUCT& cs) $/;"	f	class:CZernikeWnd
PreSubclassWindow	mate/ButtonST.cpp	/^void CButtonST::PreSubclassWindow() $/;"	f	class:CButtonST
PreTranslateMessage	mate/ButtonST.cpp	/^BOOL CButtonST::PreTranslateMessage(MSG* pMsg) $/;"	f	class:CButtonST
PreTranslateMessage	mate/CDRMateView.cpp	/^BOOL CCDRMateView::PreTranslateMessage(MSG* pMsg) $/;"	f	class:CCDRMateView
PrepareDrawing	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::PrepareDrawing(int nDataView, void *pData) $/;"	f	class:CDeviceDrawInfo
PrepareImageRect	mate/ButtonST.cpp	/^void CButtonST::PrepareImageRect(BOOL bHasTitle, RECT* rpItem, CRect* rpTitle, BOOL bIsPressed, DWORD dwWidth, DWORD dwHeight, CRect* rpImage)$/;"	f	class:CButtonST
PreparePrinting	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::PreparePrinting(int nDataView, void *pData) $/;"	f	class:CDeviceDrawInfo
PresentIt	mate/msword8.cpp	/^void _Document::PresentIt()$/;"	f	class:_Document
Previous	mate/msword8.cpp	/^LPDISPATCH Paragraph::Previous(VARIANT* Count)$/;"	f	class:Paragraph
Previous	mate/msword8.cpp	/^LPDISPATCH Range2::Previous(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Range2
Previous	mate/msword8.cpp	/^LPDISPATCH Selection::Previous(VARIANT* Unit, VARIANT* Count)$/;"	f	class:Selection
PreviousField	mate/msword8.cpp	/^LPDISPATCH Selection::PreviousField()$/;"	f	class:Selection
PreviousRevision	mate/msword8.cpp	/^LPDISPATCH Selection::PreviousRevision(VARIANT* Wrap)$/;"	f	class:Selection
PreviousSubdocument	mate/msword8.cpp	/^void Range2::PreviousSubdocument()$/;"	f	class:Range2
PreviousSubdocument	mate/msword8.cpp	/^void Selection::PreviousSubdocument()$/;"	f	class:Selection
PrintData	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::PrintData(CSetupInfo *pSetupInfo, int nDataView, void *pData) $/;"	f	class:CDeviceDrawInfo
PrintOut	mate/excel8.cpp	/^void Range::PrintOut(const VARIANT& From, const VARIANT& To, const VARIANT& Copies, const VARIANT& Preview, const VARIANT& ActivePrinter, const VARIANT& PrintToFile, const VARIANT& Collate)$/;"	f	class:Range
PrintOut	mate/excel8.cpp	/^void Worksheets::PrintOut(const VARIANT& From, const VARIANT& To, const VARIANT& Copies, const VARIANT& Preview, const VARIANT& ActivePrinter, const VARIANT& PrintToFile, const VARIANT& Collate)$/;"	f	class:Worksheets
PrintOut	mate/excel8.cpp	/^void _Workbook::PrintOut(const VARIANT& From, const VARIANT& To, const VARIANT& Copies, const VARIANT& Preview, const VARIANT& ActivePrinter, const VARIANT& PrintToFile, const VARIANT& Collate)$/;"	f	class:_Workbook
PrintOut	mate/excel8.cpp	/^void _Worksheet::PrintOut(const VARIANT& From, const VARIANT& To, const VARIANT& Copies, const VARIANT& Preview, const VARIANT& ActivePrinter, const VARIANT& PrintToFile, const VARIANT& Collate)$/;"	f	class:_Worksheet
PrintOut	mate/msword8.cpp	/^void _ApplicationWord::PrintOut(VARIANT* Background, VARIANT* Append, VARIANT* Range, VARIANT* OutputFileName, VARIANT* From, VARIANT* To, VARIANT* Item, VARIANT* Copies, VARIANT* Pages, VARIANT* PageType, VARIANT* PrintToFile, VARIANT* Collate, $/;"	f	class:_ApplicationWord
PrintOut	mate/msword8.cpp	/^void _Document::PrintOut(VARIANT* Background, VARIANT* Append, VARIANT* Range, VARIANT* OutputFileName, VARIANT* From, VARIANT* To, VARIANT* Item, VARIANT* Copies, VARIANT* Pages, VARIANT* PageType, VARIANT* PrintToFile, VARIANT* Collate, $/;"	f	class:_Document
PrintPreview	mate/excel8.cpp	/^void Range::PrintPreview(const VARIANT& EnableChanges)$/;"	f	class:Range
PrintPreview	mate/excel8.cpp	/^void Worksheets::PrintPreview(const VARIANT& EnableChanges)$/;"	f	class:Worksheets
PrintPreview	mate/excel8.cpp	/^void _Workbook::PrintPreview(const VARIANT& EnableChanges)$/;"	f	class:_Workbook
PrintPreview	mate/excel8.cpp	/^void _Worksheet::PrintPreview(const VARIANT& EnableChanges)$/;"	f	class:_Worksheet
PrintPreview	mate/msword8.cpp	/^void _Document::PrintPreview()$/;"	f	class:_Document
ProcessPacketData	cdr_session.c	/^static BOOL ProcessPacketData(struct cdr_session *ps)$/;"	f	file:
ProcessPacketData	tmp/CDRSession.cpp	/^BOOL CCDRSession::ProcessPacketData(void)$/;"	f	class:CCDRSession
ProcessTimerEvent	mate/CDRMateView.cpp	/^void CCDRMateView::ProcessTimerEvent(void)$/;"	f	class:CCDRMateView
Protect	mate/excel8.cpp	/^void _Workbook::Protect(const VARIANT& Password, const VARIANT& Structure, const VARIANT& Windows)$/;"	f	class:_Workbook
Protect	mate/excel8.cpp	/^void _Worksheet::Protect(const VARIANT& Password, const VARIANT& DrawingObjects, const VARIANT& Contents, const VARIANT& Scenarios, const VARIANT& UserInterfaceOnly)$/;"	f	class:_Worksheet
Protect	mate/msword8.cpp	/^void _Document::Protect(long Type, VARIANT* NoReset, VARIANT* Password)$/;"	f	class:_Document
ProtectSharing	mate/excel8.cpp	/^void _Workbook::ProtectSharing(const VARIANT& Filename, const VARIANT& Password, const VARIANT& WriteResPassword, const VARIANT& ReadOnlyRecommended, const VARIANT& CreateBackup, const VARIANT& SharingPassword)$/;"	f	class:_Workbook
PurgeChangeHistoryNow	mate/excel8.cpp	/^void _Workbook::PurgeChangeHistoryNow(long Days, const VARIANT& SharingPassword)$/;"	f	class:_Workbook
Quit	mate/excel8.cpp	/^void _ApplicationExcel::Quit()$/;"	f	class:_ApplicationExcel
Quit	mate/msword8.cpp	/^void _ApplicationWord::Quit(VARIANT* SaveChanges, VARIANT* OriginalFormat, VARIANT* RouteDocument)$/;"	f	class:_ApplicationWord
RA_DATA	inc/CDRType.h	/^} RA_DATA ;$/;"	t	typeref:struct:_RA_DATA
RA_DATA	tmp/CDRType.h	/^} RA_DATA ;$/;"	t	typeref:struct:_RA_DATA
RC_DATA	inc/CDRType.h	/^} RC_DATA ;$/;"	t	typeref:struct:_RC_DATA
RC_DATA	tmp/CDRType.h	/^} RC_DATA ;$/;"	t	typeref:struct:_RC_DATA
RC_TEST_DATA	inc/CDRType.h	/^} RC_TEST_DATA ;$/;"	t	typeref:struct:_RC_TEST_DATA
RC_TEST_DATA	tmp/CDRType.h	/^} RC_TEST_DATA ;$/;"	t	typeref:struct:_RC_TEST_DATA
RECORD	mate/AppLogFile.h	14;"	d
REFR_DATA	inc/CDRType.h	/^} REFR_DATA ;$/;"	t	typeref:struct:_REFR_DATA
REFR_DATA	tmp/CDRType.h	/^} REFR_DATA ;$/;"	t	typeref:struct:_REFR_DATA
RETINO_DATA	inc/CDRType.h	/^} RETINO_DATA ;$/;"	t	typeref:struct:_RETINO_DATA
RETINO_DATA	tmp/CDRType.h	/^} RETINO_DATA ;$/;"	t	typeref:struct:_RETINO_DATA
RIGHT_EYE	mate/ZernikeContext.h	/^    enum { LEFT_EYE = 1, RIGHT_EYE = 0 } ;$/;"	e	enum:CZernikeContext::__anon6
Range	mate/excel8.h	/^	Range() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Range
Range	mate/excel8.h	/^	Range(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Range
Range	mate/excel8.h	/^	Range(const Range& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Range
Range	mate/excel8.h	/^class Range : public COleDispatchDriver$/;"	c
Range	mate/msword8.cpp	/^LPDISPATCH _Document::Range(VARIANT* Start, VARIANT* End)$/;"	f	class:_Document
Range2	mate/msword8.h	/^	Range2() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Range2
Range2	mate/msword8.h	/^	Range2(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Range2
Range2	mate/msword8.h	/^	Range2(const Range2& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Range2
Range2	mate/msword8.h	/^class Range2 : public COleDispatchDriver$/;"	c
RcvThreadFunc	tmp/SerialComm.cpp	/^DWORD WINAPI CSerialComm::RcvThreadFunc(void *pvParam) $/;"	f	class:CSerialComm
Record	mate/AppLogFile.cpp	/^BOOL CAppLogFile::Record(LPCSTR pFormat, ...) $/;"	f	class:CAppLogFile
RecordMacro	mate/excel8.cpp	/^void _ApplicationExcel::RecordMacro(const VARIANT& BasicCode, const VARIANT& XlmCode)$/;"	f	class:_ApplicationExcel
Redo	mate/msword8.cpp	/^BOOL _Document::Redo(VARIANT* Times)$/;"	f	class:_Document
RefreshAll	mate/excel8.cpp	/^void _Workbook::RefreshAll()$/;"	f	class:_Workbook
RegisterXLL	mate/excel8.cpp	/^BOOL _ApplicationExcel::RegisterXLL(LPCTSTR Filename)$/;"	f	class:_ApplicationExcel
RejectAllChanges	mate/excel8.cpp	/^void _Workbook::RejectAllChanges(const VARIANT& When, const VARIANT& Who, const VARIANT& Where)$/;"	f	class:_Workbook
RejectAllRevisions	mate/msword8.cpp	/^void _Document::RejectAllRevisions()$/;"	f	class:_Document
Reload	mate/msword8.cpp	/^void _Document::Reload()$/;"	f	class:_Document
Relocate	mate/msword8.cpp	/^void Range2::Relocate(long Direction)$/;"	f	class:Range2
RemoveCDRData	mate/CDRMateView.cpp	/^void CCDRMateView::RemoveCDRData(int nIdx) $/;"	f	class:CCDRMateView
RemoveIcon	mate/SystemTray.cpp	/^void CSystemTray::RemoveIcon()$/;"	f	class:CSystemTray
RemoveNumbers	mate/msword8.cpp	/^void _Document::RemoveNumbers(VARIANT* NumberType)$/;"	f	class:_Document
RemoveSubtotal	mate/excel8.cpp	/^void Range::RemoveSubtotal()$/;"	f	class:Range
RemoveUser	mate/excel8.cpp	/^void _Workbook::RemoveUser(long Index)$/;"	f	class:_Workbook
Repaginate	mate/msword8.cpp	/^void _Document::Repaginate()$/;"	f	class:_Document
Repeat	mate/excel8.cpp	/^void _ApplicationExcel::Repeat()$/;"	f	class:_ApplicationExcel
Repeat	mate/msword8.cpp	/^BOOL _ApplicationWord::Repeat(VARIANT* Times)$/;"	f	class:_ApplicationWord
Replace	mate/excel8.cpp	/^BOOL Range::Replace(const VARIANT& What, const VARIANT& Replacement, const VARIANT& LookAt, const VARIANT& SearchOrder, const VARIANT& MatchCase, const VARIANT& MatchByte, const VARIANT& MatchControlCharacters, const VARIANT& MatchDiacritics, $/;"	f	class:Range
ReplaceChar	cdr_packet.c	/^static void ReplaceChar(char *pField, char cBefore, char cAfter)$/;"	f	file:
ReplaceChar	tmp/CDRPacket.cpp	/^void CCDRPacket::ReplaceChar(char *pField, char cBefore, char cAfter)$/;"	f	class:CCDRPacket
Reply	mate/excel8.cpp	/^void _Workbook::Reply()$/;"	f	class:_Workbook
Reply	mate/msword8.cpp	/^void _Document::Reply()$/;"	f	class:_Document
ReplyAll	mate/excel8.cpp	/^void _Workbook::ReplyAll()$/;"	f	class:_Workbook
ReplyAll	mate/msword8.cpp	/^void _Document::ReplyAll()$/;"	f	class:_Document
Reset	mate/msword8.cpp	/^void Paragraph::Reset()$/;"	f	class:Paragraph
Reset	mate/msword8.cpp	/^void Paragraphs::Reset()$/;"	f	class:Paragraphs
Reset	mate/msword8.cpp	/^void _Font::Reset()$/;"	f	class:_Font
ResetAllPageBreaks	mate/excel8.cpp	/^void _Worksheet::ResetAllPageBreaks()$/;"	f	class:_Worksheet
ResetColors	mate/excel8.cpp	/^void _Workbook::ResetColors()$/;"	f	class:_Workbook
ResetIgnoreAll	mate/msword8.cpp	/^void _ApplicationWord::ResetIgnoreAll()$/;"	f	class:_ApplicationWord
Resize	mate/msword8.cpp	/^void _ApplicationWord::Resize(long Width, long Height)$/;"	f	class:_ApplicationWord
RetrieveAll	mate/CDROpPannel.cpp	/^BOOL CCDROpPannel::RetrieveAll(CCDRData *pCDR, long lSessNo) $/;"	f	class:CCDROpPannel
Route	mate/excel8.cpp	/^void _Workbook::Route()$/;"	f	class:_Workbook
Route	mate/msword8.cpp	/^void _Document::Route()$/;"	f	class:_Document
Row	mate/msword8.h	/^	Row() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Row
Row	mate/msword8.h	/^	Row(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Row
Row	mate/msword8.h	/^	Row(const Row& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Row
Row	mate/msword8.h	/^class Row : public COleDispatchDriver$/;"	c
RowDifferences	mate/excel8.cpp	/^LPDISPATCH Range::RowDifferences(const VARIANT& Comparison)$/;"	f	class:Range
RowText	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::RowText(int nRow, int nCol, CString sText1, CString sText2, CString sText3, int nAlign) $/;"	f	class:COfficeDrawInfo
Rows	mate/msword8.h	/^	Rows() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Rows
Rows	mate/msword8.h	/^	Rows(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Rows
Rows	mate/msword8.h	/^	Rows(const Rows& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Rows
Rows	mate/msword8.h	/^class Rows : public COleDispatchDriver$/;"	c
Run	mate/excel8.cpp	/^VARIANT Range::Run(const VARIANT& Arg1, const VARIANT& Arg2, const VARIANT& Arg3, const VARIANT& Arg4, const VARIANT& Arg5, const VARIANT& Arg6, const VARIANT& Arg7, const VARIANT& Arg8, const VARIANT& Arg9, const VARIANT& Arg10, $/;"	f	class:Range
Run	mate/excel8.cpp	/^VARIANT _ApplicationExcel::Run(const VARIANT& Macro, const VARIANT& Arg1, const VARIANT& Arg2, const VARIANT& Arg3, const VARIANT& Arg4, const VARIANT& Arg5, const VARIANT& Arg6, const VARIANT& Arg7, const VARIANT& Arg8, const VARIANT& Arg9, $/;"	f	class:_ApplicationExcel
Run	mate/msword8.cpp	/^void _ApplicationWord::Run(LPCTSTR MacroName)$/;"	f	class:_ApplicationWord
RunAutoMacro	mate/msword8.cpp	/^void _Document::RunAutoMacro(long Which)$/;"	f	class:_Document
RunAutoMacros	mate/excel8.cpp	/^void _Workbook::RunAutoMacros(long Which)$/;"	f	class:_Workbook
RunLetterWizard	mate/msword8.cpp	/^void _Document::RunLetterWizard(VARIANT* LetterContent, VARIANT* WizardMode)$/;"	f	class:_Document
SCA_DATA	inc/CDRType.h	/^} SCA_DATA ;$/;"	t	typeref:struct:_SCA_DATA
SCA_DATA	tmp/CDRType.h	/^} SCA_DATA ;$/;"	t	typeref:struct:_SCA_DATA
SEP	clm_data.c	97;"	d	file:
SEP	mrk_data.c	66;"	d	file:
SFLAG_OPEN	serial.c	26;"	d	file:
SKIP_EMPTY_DATA	mate/DeviceDrawInfo.h	45;"	d
SLAVE_MODE	main.c	37;"	d	file:
SMSG	inc/main.h	30;"	d
SRCS	Makefile	/^SRCS=$(OBJS:.o=.c)$/;"	m
STRUCT_BITMAPS	mate/ButtonST.h	/^	} STRUCT_BITMAPS;$/;"	t	class:CButtonST	typeref:struct:CButtonST::_STRUCT_BITMAPS
STRUCT_CALLBACK	mate/ButtonST.h	/^	} STRUCT_CALLBACK;$/;"	t	class:CButtonST	typeref:struct:CButtonST::_STRUCT_CALLBACK
STRUCT_ICONS	mate/ButtonST.h	/^	} STRUCT_ICONS;$/;"	t	class:CButtonST	typeref:struct:CButtonST::_STRUCT_ICONS
STRUCT_SOUND	mate/ButtonST.h	/^	} STRUCT_SOUND;$/;"	t	class:CButtonST	typeref:struct:CButtonST::_STRUCT_SOUND
STR_ALREADY_USED	mate/StringTable.h	31;"	d
STR_CANT_LOAD_EXCEL	mate/StringTable.h	30;"	d
STR_CANT_LOAD_WORD	mate/StringTable.h	29;"	d
STR_CANT_UNLOAD_CLM	mate/StringTable.h	38;"	d
STR_CANT_UNLOAD_EXCEL	mate/StringTable.h	37;"	d
STR_CANT_UNLOAD_MRK	mate/StringTable.h	39;"	d
STR_CANT_UNLOAD_WORD	mate/StringTable.h	36;"	d
STR_CDRMATE	mate/StringTable.h	45;"	d
STR_CLM	mate/StringTable.h	41;"	d
STR_CONNECTED	mate/StringTable.h	25;"	d
STR_CONNECTING	mate/StringTable.h	24;"	d
STR_DASH	mate/StringTable.h	22;"	d
STR_EMPTY	mate/StringTable.h	26;"	d
STR_EXPORTING	mate/StringTable.h	27;"	d
STR_FAILED	mate/StringTable.h	40;"	d
STR_FAILED_DOCUMENT	mate/StringTable.h	34;"	d
STR_FAILED_EXPORT	mate/StringTable.h	28;"	d
STR_FAILED_PRINT	mate/StringTable.h	33;"	d
STR_FAILED_WORKSHEET	mate/StringTable.h	35;"	d
STR_LOG_CONNECT_OK	mate/StringTable.h	66;"	d
STR_LOG_DISCONNECT	mate/StringTable.h	68;"	d
STR_LOG_ERR_CANT_EXCEL	mate/StringTable.h	77;"	d
STR_LOG_ERR_CANT_WORD	mate/StringTable.h	76;"	d
STR_LOG_ERR_CONNECT	mate/StringTable.h	67;"	d
STR_LOG_ERR_LOAD_SETUP	mate/StringTable.h	65;"	d
STR_LOG_ERR_ON_EXPORT	mate/StringTable.h	80;"	d
STR_LOG_ERR_RECV_DATA	mate/StringTable.h	73;"	d
STR_LOG_LAST_PACKET	mate/StringTable.h	69;"	d
STR_LOG_LAST_REPLY	mate/StringTable.h	70;"	d
STR_LOG_LAST_REQUEST	mate/StringTable.h	71;"	d
STR_LOG_RECV_CDRDATA	mate/StringTable.h	72;"	d
STR_LOG_SEND_CLMDATA	mate/StringTable.h	75;"	d
STR_LOG_SEND_MRKDATA	mate/StringTable.h	74;"	d
STR_LOG_SUPPORT_EXCEL	mate/StringTable.h	79;"	d
STR_LOG_SUPPORT_WORD	mate/StringTable.h	78;"	d
STR_LST_DATA_NUM	mate/StringTable.h	13;"	d
STR_LST_DATE	mate/StringTable.h	9;"	d
STR_LST_EXPORT	mate/StringTable.h	11;"	d
STR_LST_NO	mate/StringTable.h	8;"	d
STR_LST_PAT_ID	mate/StringTable.h	10;"	d
STR_LST_PRINT	mate/StringTable.h	12;"	d
STR_LST_RECEIVED	mate/StringTable.h	6;"	d
STR_LST_TRANSFER	mate/StringTable.h	15;"	d
STR_LST_TRANSFERRED	mate/StringTable.h	7;"	d
STR_LST_TYPE	mate/StringTable.h	14;"	d
STR_MRK	mate/StringTable.h	42;"	d
STR_MSG_CANT_EXCEL	mate/StringTable.h	62;"	d
STR_MSG_CANT_WORD	mate/StringTable.h	61;"	d
STR_MSG_DATA_NUM	mate/StringTable.h	53;"	d
STR_MSG_EXT_CSV	mate/StringTable.h	59;"	d
STR_MSG_FAILED_CONNECT	mate/StringTable.h	52;"	d
STR_MSG_FILTER_ALL	mate/StringTable.h	58;"	d
STR_MSG_FILTER_CSV	mate/StringTable.h	55;"	d
STR_MSG_FILTER_DOC	mate/StringTable.h	56;"	d
STR_MSG_FILTER_XLS	mate/StringTable.h	57;"	d
STR_MSG_GRAY_COLOR	mate/StringTable.h	60;"	d
STR_MSG_QUIT	mate/StringTable.h	51;"	d
STR_MSG_QUIT_DISCONNECT	mate/StringTable.h	50;"	d
STR_MSG_TYPE	mate/StringTable.h	54;"	d
STR_PRINTING	mate/StringTable.h	32;"	d
STR_TRAY_CONNECTED	mate/StringTable.h	18;"	d
STR_TRAY_NOT_CONNECTED	mate/StringTable.h	19;"	d
STR_TTL_CONNECTED	mate/StringTable.h	47;"	d
STR_TTL_NOT_CONNECTED	mate/StringTable.h	46;"	d
STR_YES	mate/StringTable.h	23;"	d
ST_ALIGN_HORIZ	mate/ButtonST.h	/^    enum	{	ST_ALIGN_HORIZ	= 0,			\/\/ Icon\/bitmap on the left, text on the right$/;"	e	enum:CButtonST::__anon7
ST_ALIGN_HORIZ_RIGHT	mate/ButtonST.h	/^				ST_ALIGN_HORIZ_RIGHT,			\/\/ Icon\/bitmap on the right, text on the left$/;"	e	enum:CButtonST::__anon7
ST_ALIGN_OVERLAP	mate/ButtonST.h	/^				ST_ALIGN_OVERLAP				\/\/ Icon\/bitmap on the same space as text$/;"	e	enum:CButtonST::__anon7
ST_ALIGN_VERT	mate/ButtonST.h	/^				ST_ALIGN_VERT,					\/\/ Icon\/bitmap on the top, text on the bottom$/;"	e	enum:CButtonST::__anon7
SUBJ_DATA	inc/CDRType.h	/^} SUBJ_DATA ;$/;"	t	typeref:struct:_SUBJ_DATA
SUBJ_DATA	tmp/CDRType.h	/^} SUBJ_DATA ;$/;"	t	typeref:struct:_SUBJ_DATA
SYS_ID_MAX	inc/CDRType.h	21;"	d
SYS_ID_MAX	tmp/CDRType.h	17;"	d
SYS_ID_MIN	inc/CDRType.h	20;"	d
SYS_ID_MIN	tmp/CDRType.h	16;"	d
Save	mate/SetupInfo.cpp	/^BOOL CSetupInfo::Save(const char *pExePath) $/;"	f	class:CSetupInfo
Save	mate/excel8.cpp	/^void _Workbook::Save()$/;"	f	class:_Workbook
Save	mate/msword8.cpp	/^void Documents::Save(VARIANT* NoPrompt, VARIANT* OriginalFormat)$/;"	f	class:Documents
Save	mate/msword8.cpp	/^void _Document::Save()$/;"	f	class:_Document
SaveAs	mate/excel8.cpp	/^void _Workbook::SaveAs(const VARIANT& Filename, const VARIANT& FileFormat, const VARIANT& Password, const VARIANT& WriteResPassword, const VARIANT& ReadOnlyRecommended, const VARIANT& CreateBackup, long AccessMode, const VARIANT& ConflictResolution, $/;"	f	class:_Workbook
SaveAs	mate/excel8.cpp	/^void _Worksheet::SaveAs(LPCTSTR Filename, const VARIANT& FileFormat, const VARIANT& Password, const VARIANT& WriteResPassword, const VARIANT& ReadOnlyRecommended, const VARIANT& CreateBackup, const VARIANT& AddToMru, const VARIANT& TextCodepage, $/;"	f	class:_Worksheet
SaveAs	mate/msword8.cpp	/^void _Document::SaveAs(VARIANT* FileName, VARIANT* FileFormat, VARIANT* LockComments, VARIANT* Password, VARIANT* AddToRecentFiles, VARIANT* WritePassword, VARIANT* ReadOnlyRecommended, VARIANT* EmbedTrueTypeFonts, VARIANT* SaveNativePictureFormat, $/;"	f	class:_Document
SaveCopyAs	mate/excel8.cpp	/^void _Workbook::SaveCopyAs(const VARIANT& Filename)$/;"	f	class:_Workbook
SaveDocument	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::SaveDocument(LPCTSTR pPath) $/;"	f	class:COfficeDrawInfo
SaveWorksheet	mate/OfficeDrawInfo.cpp	/^BOOL COfficeDrawInfo::SaveWorksheet(void) $/;"	f	class:COfficeDrawInfo
SaveWorkspace	mate/excel8.cpp	/^void _ApplicationExcel::SaveWorkspace(const VARIANT& Filename)$/;"	f	class:_ApplicationExcel
Scenarios	mate/excel8.cpp	/^LPDISPATCH _Worksheet::Scenarios(const VARIANT& Index)$/;"	f	class:_Worksheet
ScreenRefresh	mate/msword8.cpp	/^void _ApplicationWord::ScreenRefresh()$/;"	f	class:_ApplicationWord
Section	mate/msword8.h	/^	Section() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Section
Section	mate/msword8.h	/^	Section(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Section
Section	mate/msword8.h	/^	Section(const Section& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Section
Section	mate/msword8.h	/^class Section : public COleDispatchDriver$/;"	c
Select	mate/excel8.cpp	/^void Range::Select()$/;"	f	class:Range
Select	mate/excel8.cpp	/^void Worksheets::Select(const VARIANT& Replace)$/;"	f	class:Worksheets
Select	mate/excel8.cpp	/^void _Worksheet::Select(const VARIANT& Replace)$/;"	f	class:_Worksheet
Select	mate/msword8.cpp	/^void Cell::Select()$/;"	f	class:Cell
Select	mate/msword8.cpp	/^void Column::Select()$/;"	f	class:Column
Select	mate/msword8.cpp	/^void Columns::Select()$/;"	f	class:Columns
Select	mate/msword8.cpp	/^void Range2::Select()$/;"	f	class:Range2
Select	mate/msword8.cpp	/^void Row::Select()$/;"	f	class:Row
Select	mate/msword8.cpp	/^void Rows::Select()$/;"	f	class:Rows
Select	mate/msword8.cpp	/^void Selection::Select()$/;"	f	class:Selection
Select	mate/msword8.cpp	/^void Table::Select()$/;"	f	class:Table
Select	mate/msword8.cpp	/^void _Document::Select()$/;"	f	class:_Document
SelectColumn	mate/msword8.cpp	/^void Selection::SelectColumn()$/;"	f	class:Selection
SelectCurrentAlignment	mate/msword8.cpp	/^void Selection::SelectCurrentAlignment()$/;"	f	class:Selection
SelectCurrentColor	mate/msword8.cpp	/^void Selection::SelectCurrentColor()$/;"	f	class:Selection
SelectCurrentFont	mate/msword8.cpp	/^void Selection::SelectCurrentFont()$/;"	f	class:Selection
SelectCurrentIndent	mate/msword8.cpp	/^void Selection::SelectCurrentIndent()$/;"	f	class:Selection
SelectCurrentSpacing	mate/msword8.cpp	/^void Selection::SelectCurrentSpacing()$/;"	f	class:Selection
SelectCurrentTabs	mate/msword8.cpp	/^void Selection::SelectCurrentTabs()$/;"	f	class:Selection
SelectRow	mate/msword8.cpp	/^void Selection::SelectRow()$/;"	f	class:Selection
Selection	mate/msword8.h	/^	Selection() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Selection
Selection	mate/msword8.h	/^	Selection(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Selection
Selection	mate/msword8.h	/^	Selection(const Selection& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Selection
Selection	mate/msword8.h	/^class Selection : public COleDispatchDriver$/;"	c
Send	mate/CDROpPannel.cpp	/^BOOL CCDROpPannel::Send(LPCTSTR pData) $/;"	f	class:CCDROpPannel
SendData	tmp/SerialComm.cpp	/^BOOL CSerialComm::SendData(const char* pData, int nSize)$/;"	f	class:CSerialComm
SendDataInList	mate/CDRMateView.cpp	/^BOOL CCDRMateView::SendDataInList(int nIdx, int nList) $/;"	f	class:CCDRMateView
SendFax	mate/msword8.cpp	/^void _ApplicationWord::SendFax()$/;"	f	class:_ApplicationWord
SendFax	mate/msword8.cpp	/^void _Document::SendFax(LPCTSTR Address, VARIANT* Subject)$/;"	f	class:_Document
SendKeys	mate/excel8.cpp	/^void _ApplicationExcel::SendKeys(const VARIANT& Keys, const VARIANT& Wait)$/;"	f	class:_ApplicationExcel
SendMail	mate/excel8.cpp	/^void _Workbook::SendMail(const VARIANT& Recipients, const VARIANT& Subject, const VARIANT& ReturnReceipt)$/;"	f	class:_Workbook
SendMail	mate/msword8.cpp	/^void _Document::SendMail()$/;"	f	class:_Document
SendMailer	mate/excel8.cpp	/^void _Workbook::SendMailer(const VARIANT& FileFormat, long Priority)$/;"	f	class:_Workbook
SendMailer	mate/msword8.cpp	/^void _Document::SendMailer(VARIANT* FileFormat, VARIANT* Priority)$/;"	f	class:_Document
SendResponse	tmp/SerialComm.cpp	/^void CSerialComm::SendResponse(int nType)$/;"	f	class:CSerialComm
Serialize	mate/CDRMateDoc.cpp	/^void CCDRMateDoc::Serialize(CArchive& ar)$/;"	f	class:CCDRMateDoc
SetAcceptLabelsInFormulas	mate/excel8.cpp	/^void _Workbook::SetAcceptLabelsInFormulas(BOOL bNewValue)$/;"	f	class:_Workbook
SetActivePrinter	mate/excel8.cpp	/^void _ApplicationExcel::SetActivePrinter(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetActivePrinter	mate/msword8.cpp	/^void _ApplicationWord::SetActivePrinter(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetActiveWritingStyle	mate/msword8.cpp	/^void _Document::SetActiveWritingStyle(VARIANT* LanguageID, LPCTSTR lpszNewValue)$/;"	f	class:_Document
SetAddIndent	mate/excel8.cpp	/^void Range::SetAddIndent(const VARIANT& newValue)$/;"	f	class:Range
SetAlertBeforeOverwriting	mate/excel8.cpp	/^void _ApplicationExcel::SetAlertBeforeOverwriting(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetAlign	mate/ButtonST.cpp	/^DWORD CButtonST::SetAlign(BYTE byAlign, BOOL bRepaint)$/;"	f	class:CButtonST
SetAlignment	mate/msword8.cpp	/^void Paragraph::SetAlignment(long nNewValue)$/;"	f	class:Paragraph
SetAlignment	mate/msword8.cpp	/^void Paragraphs::SetAlignment(long nNewValue)$/;"	f	class:Paragraphs
SetAlignment	mate/msword8.cpp	/^void Row::SetAlignment(long nNewValue)$/;"	f	class:Row
SetAlignment	mate/msword8.cpp	/^void Rows::SetAlignment(long nNewValue)$/;"	f	class:Rows
SetAllCaps	mate/msword8.cpp	/^void _Font::SetAllCaps(long nNewValue)$/;"	f	class:_Font
SetAllowBreakAcrossPages	mate/msword8.cpp	/^void Row::SetAllowBreakAcrossPages(long nNewValue)$/;"	f	class:Row
SetAllowBreakAcrossPages	mate/msword8.cpp	/^void Rows::SetAllowBreakAcrossPages(long nNewValue)$/;"	f	class:Rows
SetAltStartupPath	mate/excel8.cpp	/^void _ApplicationExcel::SetAltStartupPath(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetAlwaysInFront	mate/msword8.cpp	/^void Borders::SetAlwaysInFront(BOOL bNewValue)$/;"	f	class:Borders
SetAlwaysTrack	mate/ButtonST.cpp	/^DWORD CButtonST::SetAlwaysTrack(BOOL bAlwaysTrack)$/;"	f	class:CButtonST
SetAnimation	mate/msword8.cpp	/^void _Font::SetAnimation(long nNewValue)$/;"	f	class:_Font
SetAsTemplateDefault	mate/msword8.cpp	/^void _Font::SetAsTemplateDefault()$/;"	f	class:_Font
SetAskToUpdateLinks	mate/excel8.cpp	/^void _ApplicationExcel::SetAskToUpdateLinks(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetAttachedTemplate	mate/msword8.cpp	/^void _Document::SetAttachedTemplate(VARIANT* newValue)$/;"	f	class:_Document
SetAutoFilterMode	mate/excel8.cpp	/^void _Worksheet::SetAutoFilterMode(BOOL bNewValue)$/;"	f	class:_Worksheet
SetAutoHyphenation	mate/msword8.cpp	/^void _Document::SetAutoHyphenation(BOOL bNewValue)$/;"	f	class:_Document
SetAutoStartup	mate/CDRMateView.cpp	/^void CCDRMateView::SetAutoStartup(BOOL bEnable) $/;"	f	class:CCDRMateView
SetAutoUpdateFrequency	mate/excel8.cpp	/^void _Workbook::SetAutoUpdateFrequency(long nNewValue)$/;"	f	class:_Workbook
SetAutoUpdateSaveChanges	mate/excel8.cpp	/^void _Workbook::SetAutoUpdateSaveChanges(BOOL bNewValue)$/;"	f	class:_Workbook
SetBackground	mate/excel8.cpp	/^void Font::SetBackground(const VARIANT& newValue)$/;"	f	class:Font
SetBackground	mate/msword8.cpp	/^void _Document::SetBackground(LPDISPATCH newValue)$/;"	f	class:_Document
SetBackgroundPatternColorIndex	mate/msword8.cpp	/^void Shading::SetBackgroundPatternColorIndex(long nNewValue)$/;"	f	class:Shading
SetBackgroundPicture	mate/excel8.cpp	/^void _Worksheet::SetBackgroundPicture(LPCTSTR Filename)$/;"	f	class:_Worksheet
SetBitmaps	mate/ButtonST.cpp	/^DWORD CButtonST::SetBitmaps(HBITMAP hBitmapIn, COLORREF crTransColorIn, HBITMAP hBitmapOut, COLORREF crTransColorOut)$/;"	f	class:CButtonST
SetBitmaps	mate/ButtonST.cpp	/^DWORD CButtonST::SetBitmaps(int nBitmapIn, COLORREF crTransColorIn, int nBitmapOut, COLORREF crTransColorOut)$/;"	f	class:CButtonST
SetBk	mate/ButtonST.cpp	/^DWORD CButtonST::SetBk(CDC* pDC)$/;"	f	class:CButtonST
SetBold	mate/excel8.cpp	/^void Font::SetBold(const VARIANT& newValue)$/;"	f	class:Font
SetBold	mate/msword8.cpp	/^void Range2::SetBold(long nNewValue)$/;"	f	class:Range2
SetBold	mate/msword8.cpp	/^void _Font::SetBold(long nNewValue)$/;"	f	class:_Font
SetBorders	mate/msword8.cpp	/^void Cell::SetBorders(LPDISPATCH newValue)$/;"	f	class:Cell
SetBorders	mate/msword8.cpp	/^void Cells::SetBorders(LPDISPATCH newValue)$/;"	f	class:Cells
SetBorders	mate/msword8.cpp	/^void Column::SetBorders(LPDISPATCH newValue)$/;"	f	class:Column
SetBorders	mate/msword8.cpp	/^void Columns::SetBorders(LPDISPATCH newValue)$/;"	f	class:Columns
SetBorders	mate/msword8.cpp	/^void Paragraph::SetBorders(LPDISPATCH newValue)$/;"	f	class:Paragraph
SetBorders	mate/msword8.cpp	/^void Paragraphs::SetBorders(LPDISPATCH newValue)$/;"	f	class:Paragraphs
SetBorders	mate/msword8.cpp	/^void Range2::SetBorders(LPDISPATCH newValue)$/;"	f	class:Range2
SetBorders	mate/msword8.cpp	/^void Row::SetBorders(LPDISPATCH newValue)$/;"	f	class:Row
SetBorders	mate/msword8.cpp	/^void Rows::SetBorders(LPDISPATCH newValue)$/;"	f	class:Rows
SetBorders	mate/msword8.cpp	/^void Section::SetBorders(LPDISPATCH newValue)$/;"	f	class:Section
SetBorders	mate/msword8.cpp	/^void Selection::SetBorders(LPDISPATCH newValue)$/;"	f	class:Selection
SetBorders	mate/msword8.cpp	/^void Table::SetBorders(LPDISPATCH newValue)$/;"	f	class:Table
SetBorders	mate/msword8.cpp	/^void _Font::SetBorders(LPDISPATCH newValue)$/;"	f	class:_Font
SetBrowseExtraFileTypes	mate/msword8.cpp	/^void _ApplicationWord::SetBrowseExtraFileTypes(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetBtnCursor	mate/ButtonST.cpp	/^DWORD CButtonST::SetBtnCursor(int nCursorId, BOOL bRepaint)$/;"	f	class:CButtonST
SetCalculateBeforeSave	mate/excel8.cpp	/^void _ApplicationExcel::SetCalculateBeforeSave(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetCalculation	mate/excel8.cpp	/^void _ApplicationExcel::SetCalculation(long nNewValue)$/;"	f	class:_ApplicationExcel
SetCaption	mate/excel8.cpp	/^void _ApplicationExcel::SetCaption(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetCaption	mate/msword8.cpp	/^void _ApplicationWord::SetCaption(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetCase	mate/msword8.cpp	/^void Range2::SetCase(long nNewValue)$/;"	f	class:Range2
SetCellDragAndDrop	mate/excel8.cpp	/^void _ApplicationExcel::SetCellDragAndDrop(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetChangeHistoryDuration	mate/excel8.cpp	/^void _Workbook::SetChangeHistoryDuration(long nNewValue)$/;"	f	class:_Workbook
SetCheck	mate/ButtonST.cpp	/^DWORD CButtonST::SetCheck(int nCheck, BOOL bRepaint)$/;"	f	class:CButtonST
SetColor	mate/ButtonST.cpp	/^DWORD CButtonST::SetColor(BYTE byColorIndex, COLORREF crColor, BOOL bRepaint)$/;"	f	class:CButtonST
SetColor	mate/excel8.cpp	/^void Font::SetColor(const VARIANT& newValue)$/;"	f	class:Font
SetColor	mate/excel8.cpp	/^void Interior::SetColor(const VARIANT& newValue)$/;"	f	class:Interior
SetColorIndex	mate/excel8.cpp	/^void Font::SetColorIndex(const VARIANT& newValue)$/;"	f	class:Font
SetColorIndex	mate/excel8.cpp	/^void Interior::SetColorIndex(const VARIANT& newValue)$/;"	f	class:Interior
SetColorIndex	mate/msword8.cpp	/^void _Font::SetColorIndex(long nNewValue)$/;"	f	class:_Font
SetColors	mate/excel8.cpp	/^void _Workbook::SetColors(const VARIANT& Index, const VARIANT& newValue)$/;"	f	class:_Workbook
SetColumnSelectMode	mate/msword8.cpp	/^void Selection::SetColumnSelectMode(BOOL bNewValue)$/;"	f	class:Selection
SetColumnWidth	mate/excel8.cpp	/^void Range::SetColumnWidth(const VARIANT& newValue)$/;"	f	class:Range
SetCommandUnderlines	mate/excel8.cpp	/^void _ApplicationExcel::SetCommandUnderlines(long nNewValue)$/;"	f	class:_ApplicationExcel
SetCompatibility	mate/msword8.cpp	/^void _Document::SetCompatibility(long Type, BOOL bNewValue)$/;"	f	class:_Document
SetConflictResolution	mate/excel8.cpp	/^void _Workbook::SetConflictResolution(long nNewValue)$/;"	f	class:_Workbook
SetConsecutiveHyphensLimit	mate/msword8.cpp	/^void _Document::SetConsecutiveHyphensLimit(long nNewValue)$/;"	f	class:_Document
SetConstrainNumeric	mate/excel8.cpp	/^void _ApplicationExcel::SetConstrainNumeric(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetControlCharacters	mate/excel8.cpp	/^void _ApplicationExcel::SetControlCharacters(long nNewValue)$/;"	f	class:_ApplicationExcel
SetCopyObjectsWithCells	mate/excel8.cpp	/^void _ApplicationExcel::SetCopyObjectsWithCells(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetCursor	mate/excel8.cpp	/^void _ApplicationExcel::SetCursor(long nNewValue)$/;"	f	class:_ApplicationExcel
SetCursorMovement	mate/excel8.cpp	/^void _ApplicationExcel::SetCursorMovement(long nNewValue)$/;"	f	class:_ApplicationExcel
SetCustomizationContext	mate/msword8.cpp	/^void _ApplicationWord::SetCustomizationContext(LPDISPATCH newValue)$/;"	f	class:_ApplicationWord
SetCutCopyMode	mate/excel8.cpp	/^void _ApplicationExcel::SetCutCopyMode(long nNewValue)$/;"	f	class:_ApplicationExcel
SetDataEntryMode	mate/excel8.cpp	/^void _ApplicationExcel::SetDataEntryMode(long nNewValue)$/;"	f	class:_ApplicationExcel
SetDataReadEvent	tmp/SerialComm.h	/^	void				SetDataReadEvent() {SetEvent(m_hDataRx);}$/;"	f	class:CSerialComm
SetDate1904	mate/excel8.cpp	/^void _Workbook::SetDate1904(BOOL bNewValue)$/;"	f	class:_Workbook
SetDefaultChart	mate/excel8.cpp	/^void _ApplicationExcel::SetDefaultChart(const VARIANT& FormatName, const VARIANT& Gallery)$/;"	f	class:_ApplicationExcel
SetDefaultColors	mate/ButtonST.cpp	/^DWORD CButtonST::SetDefaultColors(BOOL bRepaint)$/;"	f	class:CButtonST
SetDefaultFilePath	mate/excel8.cpp	/^void _ApplicationExcel::SetDefaultFilePath(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetDefaultSaveFormat	mate/excel8.cpp	/^void _ApplicationExcel::SetDefaultSaveFormat(long nNewValue)$/;"	f	class:_ApplicationExcel
SetDefaultSaveFormat	mate/msword8.cpp	/^void _ApplicationWord::SetDefaultSaveFormat(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetDefaultSheetDirection	mate/excel8.cpp	/^void _ApplicationExcel::SetDefaultSheetDirection(long nNewValue)$/;"	f	class:_ApplicationExcel
SetDefaultTabStop	mate/msword8.cpp	/^void _Document::SetDefaultTabStop(float newValue)$/;"	f	class:_Document
SetDefaultTableSeparator	mate/msword8.cpp	/^void _ApplicationWord::SetDefaultTableSeparator(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetDisplayAlerts	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayAlerts(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayAlerts	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayAlerts(long nNewValue)$/;"	f	class:_ApplicationWord
SetDisplayAutoCompleteTips	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayAutoCompleteTips(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetDisplayClipboardWindow	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayClipboardWindow(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayCommentIndicator	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayCommentIndicator(long nNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayDrawingObjects	mate/excel8.cpp	/^void _Workbook::SetDisplayDrawingObjects(long nNewValue)$/;"	f	class:_Workbook
SetDisplayExcel4Menus	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayExcel4Menus(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayFormulaBar	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayFormulaBar(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayFullScreen	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayFullScreen(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayNoteIndicator	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayNoteIndicator(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayPageBreaks	mate/excel8.cpp	/^void _Worksheet::SetDisplayPageBreaks(BOOL bNewValue)$/;"	f	class:_Worksheet
SetDisplayRecentFiles	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayRecentFiles(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayRecentFiles	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayRecentFiles(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetDisplayScreenTips	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayScreenTips(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetDisplayScrollBars	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayScrollBars(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayScrollBars	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayScrollBars(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetDisplayStatusBar	mate/excel8.cpp	/^void _ApplicationExcel::SetDisplayStatusBar(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetDisplayStatusBar	mate/msword8.cpp	/^void _ApplicationWord::SetDisplayStatusBar(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetDistanceFrom	mate/msword8.cpp	/^void Borders::SetDistanceFrom(long nNewValue)$/;"	f	class:Borders
SetDistanceFromBottom	mate/msword8.cpp	/^void Borders::SetDistanceFromBottom(long nNewValue)$/;"	f	class:Borders
SetDistanceFromLeft	mate/msword8.cpp	/^void Borders::SetDistanceFromLeft(long nNewValue)$/;"	f	class:Borders
SetDistanceFromRight	mate/msword8.cpp	/^void Borders::SetDistanceFromRight(long nNewValue)$/;"	f	class:Borders
SetDistanceFromTop	mate/msword8.cpp	/^void Borders::SetDistanceFromTop(long nNewValue)$/;"	f	class:Borders
SetDoubleStrikeThrough	mate/msword8.cpp	/^void _Font::SetDoubleStrikeThrough(long nNewValue)$/;"	f	class:_Font
SetEditDirectlyInCell	mate/excel8.cpp	/^void _ApplicationExcel::SetEditDirectlyInCell(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetEmbedTrueTypeFonts	mate/msword8.cpp	/^void _Document::SetEmbedTrueTypeFonts(BOOL bNewValue)$/;"	f	class:_Document
SetEmboss	mate/msword8.cpp	/^void _Font::SetEmboss(long nNewValue)$/;"	f	class:_Font
SetEnable	mate/msword8.cpp	/^void Borders::SetEnable(long nNewValue)$/;"	f	class:Borders
SetEnableAnimations	mate/excel8.cpp	/^void _ApplicationExcel::SetEnableAnimations(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetEnableAutoComplete	mate/excel8.cpp	/^void _ApplicationExcel::SetEnableAutoComplete(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetEnableAutoFilter	mate/excel8.cpp	/^void _Worksheet::SetEnableAutoFilter(BOOL bNewValue)$/;"	f	class:_Worksheet
SetEnableCalculation	mate/excel8.cpp	/^void _Worksheet::SetEnableCalculation(BOOL bNewValue)$/;"	f	class:_Worksheet
SetEnableCancelKey	mate/excel8.cpp	/^void _ApplicationExcel::SetEnableCancelKey(long nNewValue)$/;"	f	class:_ApplicationExcel
SetEnableCancelKey	mate/msword8.cpp	/^void _ApplicationWord::SetEnableCancelKey(long nNewValue)$/;"	f	class:_ApplicationWord
SetEnableEvents	mate/excel8.cpp	/^void _ApplicationExcel::SetEnableEvents(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetEnableFirstPageInSection	mate/msword8.cpp	/^void Borders::SetEnableFirstPageInSection(BOOL bNewValue)$/;"	f	class:Borders
SetEnableOtherPagesInSection	mate/msword8.cpp	/^void Borders::SetEnableOtherPagesInSection(BOOL bNewValue)$/;"	f	class:Borders
SetEnableOutlining	mate/excel8.cpp	/^void _Worksheet::SetEnableOutlining(BOOL bNewValue)$/;"	f	class:_Worksheet
SetEnablePivotTable	mate/excel8.cpp	/^void _Worksheet::SetEnablePivotTable(BOOL bNewValue)$/;"	f	class:_Worksheet
SetEnableSelection	mate/excel8.cpp	/^void _Worksheet::SetEnableSelection(long nNewValue)$/;"	f	class:_Worksheet
SetEnableSound	mate/excel8.cpp	/^void _ApplicationExcel::SetEnableSound(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetEnd	mate/msword8.cpp	/^void Range2::SetEnd(long nNewValue)$/;"	f	class:Range2
SetEnd	mate/msword8.cpp	/^void Selection::SetEnd(long nNewValue)$/;"	f	class:Selection
SetEngrave	mate/msword8.cpp	/^void _Font::SetEngrave(long nNewValue)$/;"	f	class:_Font
SetErrCode	mate/Error.cpp	/^void SetErrCode(int nErrCode) $/;"	f
SetExtendMode	mate/msword8.cpp	/^void Selection::SetExtendMode(BOOL bNewValue)$/;"	f	class:Selection
SetFavoredSysID	tmp/CDRSession.cpp	/^void CCDRSession::SetFavoredSysID(int nFavoredSysID)$/;"	f	class:CCDRSession
SetFavoredSysID	tmp/SerialComm.cpp	/^void CSerialComm::SetFavoredSysID(int nSysID) $/;"	f	class:CSerialComm
SetFirstLineIndent	mate/msword8.cpp	/^void Paragraph::SetFirstLineIndent(float newValue)$/;"	f	class:Paragraph
SetFirstLineIndent	mate/msword8.cpp	/^void Paragraphs::SetFirstLineIndent(float newValue)$/;"	f	class:Paragraphs
SetFixedDecimal	mate/excel8.cpp	/^void _ApplicationExcel::SetFixedDecimal(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetFixedDecimalPlaces	mate/excel8.cpp	/^void _ApplicationExcel::SetFixedDecimalPlaces(long nNewValue)$/;"	f	class:_ApplicationExcel
SetFlags	mate/msword8.cpp	/^void Selection::SetFlags(long nNewValue)$/;"	f	class:Selection
SetFlat	mate/ButtonST.cpp	/^DWORD CButtonST::SetFlat(BOOL bFlat, BOOL bRepaint)$/;"	f	class:CButtonST
SetFont	mate/msword8.cpp	/^void Range2::SetFont(LPDISPATCH newValue)$/;"	f	class:Range2
SetFont	mate/msword8.cpp	/^void Selection::SetFont(LPDISPATCH newValue)$/;"	f	class:Selection
SetFontStyle	mate/excel8.cpp	/^void Font::SetFontStyle(const VARIANT& newValue)$/;"	f	class:Font
SetForegroundPatternColorIndex	mate/msword8.cpp	/^void Shading::SetForegroundPatternColorIndex(long nNewValue)$/;"	f	class:Shading
SetFormat	mate/msword8.cpp	/^void Paragraph::SetFormat(LPDISPATCH newValue)$/;"	f	class:Paragraph
SetFormat	mate/msword8.cpp	/^void Paragraphs::SetFormat(LPDISPATCH newValue)$/;"	f	class:Paragraphs
SetFormattedText	mate/msword8.cpp	/^void Range2::SetFormattedText(LPDISPATCH newValue)$/;"	f	class:Range2
SetFormattedText	mate/msword8.cpp	/^void Selection::SetFormattedText(LPDISPATCH newValue)$/;"	f	class:Selection
SetFormula	mate/excel8.cpp	/^void Range::SetFormula(const VARIANT& newValue)$/;"	f	class:Range
SetFormulaArray	mate/excel8.cpp	/^void Range::SetFormulaArray(const VARIANT& newValue)$/;"	f	class:Range
SetFormulaHidden	mate/excel8.cpp	/^void Range::SetFormulaHidden(const VARIANT& newValue)$/;"	f	class:Range
SetFormulaLabel	mate/excel8.cpp	/^void Range::SetFormulaLabel(long nNewValue)$/;"	f	class:Range
SetFormulaLocal	mate/excel8.cpp	/^void Range::SetFormulaLocal(const VARIANT& newValue)$/;"	f	class:Range
SetFormulaR1C1	mate/excel8.cpp	/^void Range::SetFormulaR1C1(const VARIANT& newValue)$/;"	f	class:Range
SetFormulaR1C1Local	mate/excel8.cpp	/^void Range::SetFormulaR1C1Local(const VARIANT& newValue)$/;"	f	class:Range
SetGrammarChecked	mate/msword8.cpp	/^void Range2::SetGrammarChecked(BOOL bNewValue)$/;"	f	class:Range2
SetGrammarChecked	mate/msword8.cpp	/^void _Document::SetGrammarChecked(BOOL bNewValue)$/;"	f	class:_Document
SetHasMailer	mate/msword8.cpp	/^void _Document::SetHasMailer(BOOL bNewValue)$/;"	f	class:_Document
SetHasRoutingSlip	mate/excel8.cpp	/^void _Workbook::SetHasRoutingSlip(BOOL bNewValue)$/;"	f	class:_Workbook
SetHasRoutingSlip	mate/msword8.cpp	/^void _Document::SetHasRoutingSlip(BOOL bNewValue)$/;"	f	class:_Document
SetHeadingFormat	mate/msword8.cpp	/^void Row::SetHeadingFormat(long nNewValue)$/;"	f	class:Row
SetHeadingFormat	mate/msword8.cpp	/^void Rows::SetHeadingFormat(long nNewValue)$/;"	f	class:Rows
SetHeight	mate/excel8.cpp	/^void _ApplicationExcel::SetHeight(double newValue)$/;"	f	class:_ApplicationExcel
SetHeight	mate/msword8.cpp	/^void Cell::SetHeight(VARIANT* RowHeight, long HeightRule)$/;"	f	class:Cell
SetHeight	mate/msword8.cpp	/^void Cell::SetHeight(float newValue)$/;"	f	class:Cell
SetHeight	mate/msword8.cpp	/^void Cells::SetHeight(VARIANT* RowHeight, long HeightRule)$/;"	f	class:Cells
SetHeight	mate/msword8.cpp	/^void Cells::SetHeight(float newValue)$/;"	f	class:Cells
SetHeight	mate/msword8.cpp	/^void Row::SetHeight(float RowHeight, long HeightRule)$/;"	f	class:Row
SetHeight	mate/msword8.cpp	/^void Row::SetHeight(float newValue)$/;"	f	class:Row
SetHeight	mate/msword8.cpp	/^void Rows::SetHeight(float RowHeight, long HeightRule)$/;"	f	class:Rows
SetHeight	mate/msword8.cpp	/^void Rows::SetHeight(float newValue)$/;"	f	class:Rows
SetHeight	mate/msword8.cpp	/^void _ApplicationWord::SetHeight(long nNewValue)$/;"	f	class:_ApplicationWord
SetHeightRule	mate/msword8.cpp	/^void Cell::SetHeightRule(long nNewValue)$/;"	f	class:Cell
SetHeightRule	mate/msword8.cpp	/^void Cells::SetHeightRule(long nNewValue)$/;"	f	class:Cells
SetHeightRule	mate/msword8.cpp	/^void Row::SetHeightRule(long nNewValue)$/;"	f	class:Row
SetHeightRule	mate/msword8.cpp	/^void Rows::SetHeightRule(long nNewValue)$/;"	f	class:Rows
SetHidden	mate/excel8.cpp	/^void Range::SetHidden(const VARIANT& newValue)$/;"	f	class:Range
SetHidden	mate/msword8.cpp	/^void _Font::SetHidden(long nNewValue)$/;"	f	class:_Font
SetHighlightChangesOnScreen	mate/excel8.cpp	/^void _Workbook::SetHighlightChangesOnScreen(BOOL bNewValue)$/;"	f	class:_Workbook
SetHighlightColorIndex	mate/msword8.cpp	/^void Range2::SetHighlightColorIndex(long nNewValue)$/;"	f	class:Range2
SetHorizontalAlignment	mate/excel8.cpp	/^void Range::SetHorizontalAlignment(const VARIANT& newValue)$/;"	f	class:Range
SetHyphenateCaps	mate/msword8.cpp	/^void _Document::SetHyphenateCaps(BOOL bNewValue)$/;"	f	class:_Document
SetHyphenation	mate/msword8.cpp	/^void Paragraph::SetHyphenation(long nNewValue)$/;"	f	class:Paragraph
SetHyphenation	mate/msword8.cpp	/^void Paragraphs::SetHyphenation(long nNewValue)$/;"	f	class:Paragraphs
SetHyphenationZone	mate/msword8.cpp	/^void _Document::SetHyphenationZone(long nNewValue)$/;"	f	class:_Document
SetIcon	mate/ButtonST.cpp	/^DWORD CButtonST::SetIcon(HICON hIconIn, HICON hIconOut)$/;"	f	class:CButtonST
SetIcon	mate/ButtonST.cpp	/^DWORD CButtonST::SetIcon(int nIconIn, int nCxDesiredIn, int nCyDesiredIn, int nIconOut, int nCxDesiredOut, int nCyDesiredOut)$/;"	f	class:CButtonST
SetIcon	mate/ButtonST.cpp	/^DWORD CButtonST::SetIcon(int nIconIn, int nIconOut)$/;"	f	class:CButtonST
SetIcon	mate/SystemTray.cpp	/^BOOL CSystemTray::SetIcon(HICON hIcon)$/;"	f	class:CSystemTray
SetIcon	mate/SystemTray.cpp	/^BOOL CSystemTray::SetIcon(LPCTSTR lpszIconName)$/;"	f	class:CSystemTray
SetIcon	mate/SystemTray.cpp	/^BOOL CSystemTray::SetIcon(UINT nIDResource)$/;"	f	class:CSystemTray
SetIconList	mate/SystemTray.cpp	/^BOOL CSystemTray::SetIconList(HICON* pHIconList, UINT nNumIcons)$/;"	f	class:CSystemTray
SetIconList	mate/SystemTray.cpp	/^BOOL CSystemTray::SetIconList(UINT uFirstIconID, UINT uLastIconID) $/;"	f	class:CSystemTray
SetIgnoreRemoteRequests	mate/excel8.cpp	/^void _ApplicationExcel::SetIgnoreRemoteRequests(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetIndentLevel	mate/excel8.cpp	/^void Range::SetIndentLevel(const VARIANT& newValue)$/;"	f	class:Range
SetInsideColorIndex	mate/msword8.cpp	/^void Borders::SetInsideColorIndex(long nNewValue)$/;"	f	class:Borders
SetInsideLineStyle	mate/msword8.cpp	/^void Borders::SetInsideLineStyle(long nNewValue)$/;"	f	class:Borders
SetInsideLineWidth	mate/msword8.cpp	/^void Borders::SetInsideLineWidth(long nNewValue)$/;"	f	class:Borders
SetInteractive	mate/excel8.cpp	/^void _ApplicationExcel::SetInteractive(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetInvertIfNegative	mate/excel8.cpp	/^void Interior::SetInvertIfNegative(const VARIANT& newValue)$/;"	f	class:Interior
SetIsAddin	mate/excel8.cpp	/^void _Workbook::SetIsAddin(BOOL bNewValue)$/;"	f	class:_Workbook
SetItalic	mate/excel8.cpp	/^void Font::SetItalic(const VARIANT& newValue)$/;"	f	class:Font
SetItalic	mate/msword8.cpp	/^void Range2::SetItalic(long nNewValue)$/;"	f	class:Range2
SetItalic	mate/msword8.cpp	/^void _Font::SetItalic(long nNewValue)$/;"	f	class:_Font
SetItem	mate/excel8.cpp	/^void Range::SetItem(const VARIANT& RowIndex, const VARIANT& ColumnIndex, const VARIANT& newValue)$/;"	f	class:Range
SetIteration	mate/excel8.cpp	/^void _ApplicationExcel::SetIteration(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetJoinBorders	mate/msword8.cpp	/^void Borders::SetJoinBorders(BOOL bNewValue)$/;"	f	class:Borders
SetKeepChangeHistory	mate/excel8.cpp	/^void _Workbook::SetKeepChangeHistory(BOOL bNewValue)$/;"	f	class:_Workbook
SetKeepTogether	mate/msword8.cpp	/^void Paragraph::SetKeepTogether(long nNewValue)$/;"	f	class:Paragraph
SetKeepTogether	mate/msword8.cpp	/^void Paragraphs::SetKeepTogether(long nNewValue)$/;"	f	class:Paragraphs
SetKeepWithNext	mate/msword8.cpp	/^void Paragraph::SetKeepWithNext(long nNewValue)$/;"	f	class:Paragraph
SetKeepWithNext	mate/msword8.cpp	/^void Paragraphs::SetKeepWithNext(long nNewValue)$/;"	f	class:Paragraphs
SetKerning	mate/msword8.cpp	/^void _Font::SetKerning(float newValue)$/;"	f	class:_Font
SetKind	mate/msword8.cpp	/^void _Document::SetKind(long nNewValue)$/;"	f	class:_Document
SetLanguageID	mate/msword8.cpp	/^void Range2::SetLanguageID(long nNewValue)$/;"	f	class:Range2
SetLanguageID	mate/msword8.cpp	/^void Selection::SetLanguageID(long nNewValue)$/;"	f	class:Selection
SetLanguageIDFarEast	mate/msword8.cpp	/^void Range2::SetLanguageIDFarEast(long nNewValue)$/;"	f	class:Range2
SetLanguageIDFarEast	mate/msword8.cpp	/^void Selection::SetLanguageIDFarEast(long nNewValue)$/;"	f	class:Selection
SetLanguageIDOther	mate/msword8.cpp	/^void Range2::SetLanguageIDOther(long nNewValue)$/;"	f	class:Range2
SetLanguageIDOther	mate/msword8.cpp	/^void Selection::SetLanguageIDOther(long nNewValue)$/;"	f	class:Selection
SetLeft	mate/excel8.cpp	/^void _ApplicationExcel::SetLeft(double newValue)$/;"	f	class:_ApplicationExcel
SetLeft	mate/msword8.cpp	/^void _ApplicationWord::SetLeft(long nNewValue)$/;"	f	class:_ApplicationWord
SetLeftIndent	mate/msword8.cpp	/^void Paragraph::SetLeftIndent(float newValue)$/;"	f	class:Paragraph
SetLeftIndent	mate/msword8.cpp	/^void Paragraphs::SetLeftIndent(float newValue)$/;"	f	class:Paragraphs
SetLeftIndent	mate/msword8.cpp	/^void Row::SetLeftIndent(float LeftIndent, long RulerStyle)$/;"	f	class:Row
SetLeftIndent	mate/msword8.cpp	/^void Row::SetLeftIndent(float newValue)$/;"	f	class:Row
SetLeftIndent	mate/msword8.cpp	/^void Rows::SetLeftIndent(float LeftIndent, long RulerStyle)$/;"	f	class:Rows
SetLeftIndent	mate/msword8.cpp	/^void Rows::SetLeftIndent(float newValue)$/;"	f	class:Rows
SetLetterContent	mate/msword8.cpp	/^void _Document::SetLetterContent(VARIANT* LetterContent)$/;"	f	class:_Document
SetLineSpacing	mate/msword8.cpp	/^void Paragraph::SetLineSpacing(float newValue)$/;"	f	class:Paragraph
SetLineSpacing	mate/msword8.cpp	/^void Paragraphs::SetLineSpacing(float newValue)$/;"	f	class:Paragraphs
SetLineSpacingRule	mate/msword8.cpp	/^void Paragraph::SetLineSpacingRule(long nNewValue)$/;"	f	class:Paragraph
SetLineSpacingRule	mate/msword8.cpp	/^void Paragraphs::SetLineSpacingRule(long nNewValue)$/;"	f	class:Paragraphs
SetLinkOnData	mate/excel8.cpp	/^void _Workbook::SetLinkOnData(LPCTSTR Name, const VARIANT& Procedure)$/;"	f	class:_Workbook
SetListChangesOnNewSheet	mate/excel8.cpp	/^void _Workbook::SetListChangesOnNewSheet(BOOL bNewValue)$/;"	f	class:_Workbook
SetLocked	mate/excel8.cpp	/^void Range::SetLocked(const VARIANT& newValue)$/;"	f	class:Range
SetMaxChange	mate/excel8.cpp	/^void _ApplicationExcel::SetMaxChange(double newValue)$/;"	f	class:_ApplicationExcel
SetMaxIterations	mate/excel8.cpp	/^void _ApplicationExcel::SetMaxIterations(long nNewValue)$/;"	f	class:_ApplicationExcel
SetMenu	mate/ButtonST.cpp	/^DWORD CButtonST::SetMenu(UINT nMenu, HWND hParentWnd, BOOL bRepaint)$/;"	f	class:CButtonST
SetMenu	mate/ButtonST.cpp	/^DWORD CButtonST::SetMenu(UINT nMenu, HWND hParentWnd, BOOL bWinXPStyle, UINT nToolbarID, CSize sizeToolbarIcon, COLORREF crToolbarBk, BOOL bRepaint)$/;"	f	class:CButtonST
SetMenuCallback	mate/ButtonST.cpp	/^DWORD CButtonST::SetMenuCallback(HWND hWnd, UINT nMessage, LPARAM lParam)$/;"	f	class:CButtonST
SetMenuDefaultItem	mate/SystemTray.cpp	/^BOOL CSystemTray::SetMenuDefaultItem(UINT uItem, BOOL bByPos)$/;"	f	class:CSystemTray
SetMergeCells	mate/excel8.cpp	/^void Range::SetMergeCells(const VARIANT& newValue)$/;"	f	class:Range
SetMoveAfterReturn	mate/excel8.cpp	/^void _ApplicationExcel::SetMoveAfterReturn(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetMoveAfterReturnDirection	mate/excel8.cpp	/^void _ApplicationExcel::SetMoveAfterReturnDirection(long nNewValue)$/;"	f	class:_ApplicationExcel
SetName	mate/excel8.cpp	/^void Font::SetName(const VARIANT& newValue)$/;"	f	class:Font
SetName	mate/excel8.cpp	/^void Range::SetName(const VARIANT& newValue)$/;"	f	class:Range
SetName	mate/excel8.cpp	/^void _Worksheet::SetName(LPCTSTR lpszNewValue)$/;"	f	class:_Worksheet
SetName	mate/msword8.cpp	/^void _Font::SetName(LPCTSTR lpszNewValue)$/;"	f	class:_Font
SetNameAscii	mate/msword8.cpp	/^void _Font::SetNameAscii(LPCTSTR lpszNewValue)$/;"	f	class:_Font
SetNameFarEast	mate/msword8.cpp	/^void _Font::SetNameFarEast(LPCTSTR lpszNewValue)$/;"	f	class:_Font
SetNameOther	mate/msword8.cpp	/^void _Font::SetNameOther(LPCTSTR lpszNewValue)$/;"	f	class:_Font
SetNoLineNumber	mate/msword8.cpp	/^void Paragraph::SetNoLineNumber(long nNewValue)$/;"	f	class:Paragraph
SetNoLineNumber	mate/msword8.cpp	/^void Paragraphs::SetNoLineNumber(long nNewValue)$/;"	f	class:Paragraphs
SetNotificationWnd	mate/SystemTray.cpp	/^BOOL CSystemTray::SetNotificationWnd(CWnd* pWnd)$/;"	f	class:CSystemTray
SetNumberFormat	mate/excel8.cpp	/^void Range::SetNumberFormat(const VARIANT& newValue)$/;"	f	class:Range
SetNumberFormatLocal	mate/excel8.cpp	/^void Range::SetNumberFormatLocal(const VARIANT& newValue)$/;"	f	class:Range
SetODBCTimeout	mate/excel8.cpp	/^void _ApplicationExcel::SetODBCTimeout(long nNewValue)$/;"	f	class:_ApplicationExcel
SetOnWindow	mate/excel8.cpp	/^void _ApplicationExcel::SetOnWindow(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetOrientation	mate/excel8.cpp	/^void Range::SetOrientation(const VARIANT& newValue)$/;"	f	class:Range
SetOrientation	mate/msword8.cpp	/^void Range2::SetOrientation(long nNewValue)$/;"	f	class:Range2
SetOrientation	mate/msword8.cpp	/^void Selection::SetOrientation(long nNewValue)$/;"	f	class:Selection
SetOutline	mate/msword8.cpp	/^void _Font::SetOutline(long nNewValue)$/;"	f	class:_Font
SetOutlineFont	mate/excel8.cpp	/^void Font::SetOutlineFont(const VARIANT& newValue)$/;"	f	class:Font
SetOutlineLevel	mate/excel8.cpp	/^void Range::SetOutlineLevel(const VARIANT& newValue)$/;"	f	class:Range
SetOutlineLevel	mate/msword8.cpp	/^void Paragraph::SetOutlineLevel(long nNewValue)$/;"	f	class:Paragraph
SetOutlineLevel	mate/msword8.cpp	/^void Paragraphs::SetOutlineLevel(long nNewValue)$/;"	f	class:Paragraphs
SetOutsideColorIndex	mate/msword8.cpp	/^void Borders::SetOutsideColorIndex(long nNewValue)$/;"	f	class:Borders
SetOutsideLineStyle	mate/msword8.cpp	/^void Borders::SetOutsideLineStyle(long nNewValue)$/;"	f	class:Borders
SetOutsideLineWidth	mate/msword8.cpp	/^void Borders::SetOutsideLineWidth(long nNewValue)$/;"	f	class:Borders
SetPageBreak	mate/excel8.cpp	/^void Range::SetPageBreak(long nNewValue)$/;"	f	class:Range
SetPageBreakBefore	mate/msword8.cpp	/^void Paragraph::SetPageBreakBefore(long nNewValue)$/;"	f	class:Paragraph
SetPageBreakBefore	mate/msword8.cpp	/^void Paragraphs::SetPageBreakBefore(long nNewValue)$/;"	f	class:Paragraphs
SetPageSetup	mate/msword8.cpp	/^void Range2::SetPageSetup(LPDISPATCH newValue)$/;"	f	class:Range2
SetPageSetup	mate/msword8.cpp	/^void Section::SetPageSetup(LPDISPATCH newValue)$/;"	f	class:Section
SetPageSetup	mate/msword8.cpp	/^void Selection::SetPageSetup(LPDISPATCH newValue)$/;"	f	class:Selection
SetPageSetup	mate/msword8.cpp	/^void _Document::SetPageSetup(LPDISPATCH newValue)$/;"	f	class:_Document
SetParagraphFormat	mate/msword8.cpp	/^void Range2::SetParagraphFormat(LPDISPATCH newValue)$/;"	f	class:Range2
SetParagraphFormat	mate/msword8.cpp	/^void Selection::SetParagraphFormat(LPDISPATCH newValue)$/;"	f	class:Selection
SetPassword	mate/msword8.cpp	/^void _Document::SetPassword(LPCTSTR lpszNewValue)$/;"	f	class:_Document
SetPattern	mate/excel8.cpp	/^void Interior::SetPattern(const VARIANT& newValue)$/;"	f	class:Interior
SetPatternColor	mate/excel8.cpp	/^void Interior::SetPatternColor(const VARIANT& newValue)$/;"	f	class:Interior
SetPatternColorIndex	mate/excel8.cpp	/^void Interior::SetPatternColorIndex(const VARIANT& newValue)$/;"	f	class:Interior
SetPersonalViewListSettings	mate/excel8.cpp	/^void _Workbook::SetPersonalViewListSettings(BOOL bNewValue)$/;"	f	class:_Workbook
SetPersonalViewPrintSettings	mate/excel8.cpp	/^void _Workbook::SetPersonalViewPrintSettings(BOOL bNewValue)$/;"	f	class:_Workbook
SetPivotTableSelection	mate/excel8.cpp	/^void _ApplicationExcel::SetPivotTableSelection(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetPosition	mate/msword8.cpp	/^void _Font::SetPosition(long nNewValue)$/;"	f	class:_Font
SetPrecisionAsDisplayed	mate/excel8.cpp	/^void _Workbook::SetPrecisionAsDisplayed(BOOL bNewValue)$/;"	f	class:_Workbook
SetPressedStyle	mate/ButtonST.cpp	/^DWORD CButtonST::SetPressedStyle(BYTE byStyle, BOOL bRepaint)$/;"	f	class:CButtonST
SetPrintFormsData	mate/msword8.cpp	/^void _Document::SetPrintFormsData(BOOL bNewValue)$/;"	f	class:_Document
SetPrintFractionalWidths	mate/msword8.cpp	/^void _Document::SetPrintFractionalWidths(BOOL bNewValue)$/;"	f	class:_Document
SetPrintPostScriptOverText	mate/msword8.cpp	/^void _Document::SetPrintPostScriptOverText(BOOL bNewValue)$/;"	f	class:_Document
SetPrintPreview	mate/msword8.cpp	/^void _ApplicationWord::SetPrintPreview(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetPrintRevisions	mate/msword8.cpp	/^void _Document::SetPrintRevisions(BOOL bNewValue)$/;"	f	class:_Document
SetPromptForSummaryInfo	mate/excel8.cpp	/^void _ApplicationExcel::SetPromptForSummaryInfo(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetProtectedForForms	mate/msword8.cpp	/^void Section::SetProtectedForForms(BOOL bNewValue)$/;"	f	class:Section
SetProtocolVer	tmp/CDRPacket.cpp	/^void CCDRPacket::SetProtocolVer(int nVer)$/;"	f	class:CCDRPacket
SetProtocolVer	tmp/CDRSession.cpp	/^void CCDRSession::SetProtocolVer(int nPrtcVer)$/;"	f	class:CCDRSession
SetProtocolVer	tmp/SerialComm.cpp	/^void CSerialComm::SetProtocolVer(int nPrtcVer)$/;"	f	class:CSerialComm
SetRange	mate/msword8.cpp	/^void Range2::SetRange(long Start, long End)$/;"	f	class:Range2
SetRange	mate/msword8.cpp	/^void Selection::SetRange(long Start, long End)$/;"	f	class:Selection
SetReadOnlyRecommended	mate/msword8.cpp	/^void _Document::SetReadOnlyRecommended(BOOL bNewValue)$/;"	f	class:_Document
SetReadingOrder	mate/excel8.cpp	/^void Range::SetReadingOrder(long nNewValue)$/;"	f	class:Range
SetReferenceStyle	mate/excel8.cpp	/^void _ApplicationExcel::SetReferenceStyle(long nNewValue)$/;"	f	class:_ApplicationExcel
SetRightIndent	mate/msword8.cpp	/^void Paragraph::SetRightIndent(float newValue)$/;"	f	class:Paragraph
SetRightIndent	mate/msword8.cpp	/^void Paragraphs::SetRightIndent(float newValue)$/;"	f	class:Paragraphs
SetRollZoom	mate/excel8.cpp	/^void _ApplicationExcel::SetRollZoom(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetRowHeight	mate/excel8.cpp	/^void Range::SetRowHeight(const VARIANT& newValue)$/;"	f	class:Range
SetSaveFormsData	mate/msword8.cpp	/^void _Document::SetSaveFormsData(BOOL bNewValue)$/;"	f	class:_Document
SetSaveLinkValues	mate/excel8.cpp	/^void _Workbook::SetSaveLinkValues(BOOL bNewValue)$/;"	f	class:_Workbook
SetSaveSubsetFonts	mate/msword8.cpp	/^void _Document::SetSaveSubsetFonts(BOOL bNewValue)$/;"	f	class:_Document
SetSaved	mate/excel8.cpp	/^void _Workbook::SetSaved(BOOL bNewValue)$/;"	f	class:_Workbook
SetSaved	mate/msword8.cpp	/^void _Document::SetSaved(BOOL bNewValue)$/;"	f	class:_Document
SetScaling	mate/msword8.cpp	/^void _Font::SetScaling(long nNewValue)$/;"	f	class:_Font
SetScreenUpdating	mate/excel8.cpp	/^void _ApplicationExcel::SetScreenUpdating(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetScreenUpdating	mate/msword8.cpp	/^void _ApplicationWord::SetScreenUpdating(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetScrollArea	mate/excel8.cpp	/^void _Worksheet::SetScrollArea(LPCTSTR lpszNewValue)$/;"	f	class:_Worksheet
SetShadow	mate/excel8.cpp	/^void Font::SetShadow(const VARIANT& newValue)$/;"	f	class:Font
SetShadow	mate/msword8.cpp	/^void Borders::SetShadow(BOOL bNewValue)$/;"	f	class:Borders
SetShadow	mate/msword8.cpp	/^void _Font::SetShadow(long nNewValue)$/;"	f	class:_Font
SetSheetsInNewWorkbook	mate/excel8.cpp	/^void _ApplicationExcel::SetSheetsInNewWorkbook(long nNewValue)$/;"	f	class:_ApplicationExcel
SetShowChartTipNames	mate/excel8.cpp	/^void _ApplicationExcel::SetShowChartTipNames(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetShowChartTipValues	mate/excel8.cpp	/^void _ApplicationExcel::SetShowChartTipValues(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetShowConflictHistory	mate/excel8.cpp	/^void _Workbook::SetShowConflictHistory(BOOL bNewValue)$/;"	f	class:_Workbook
SetShowDetail	mate/excel8.cpp	/^void Range::SetShowDetail(const VARIANT& newValue)$/;"	f	class:Range
SetShowGrammaticalErrors	mate/msword8.cpp	/^void _Document::SetShowGrammaticalErrors(BOOL bNewValue)$/;"	f	class:_Document
SetShowRevisions	mate/msword8.cpp	/^void _Document::SetShowRevisions(BOOL bNewValue)$/;"	f	class:_Document
SetShowSpellingErrors	mate/msword8.cpp	/^void _Document::SetShowSpellingErrors(BOOL bNewValue)$/;"	f	class:_Document
SetShowSummary	mate/msword8.cpp	/^void _Document::SetShowSummary(BOOL bNewValue)$/;"	f	class:_Document
SetShowToolTips	mate/excel8.cpp	/^void _ApplicationExcel::SetShowToolTips(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetShowVisualBasicEditor	mate/msword8.cpp	/^void _ApplicationWord::SetShowVisualBasicEditor(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetShrinkToFit	mate/excel8.cpp	/^void Range::SetShrinkToFit(const VARIANT& newValue)$/;"	f	class:Range
SetSize	mate/excel8.cpp	/^void Font::SetSize(const VARIANT& newValue)$/;"	f	class:Font
SetSize	mate/msword8.cpp	/^void _Font::SetSize(float newValue)$/;"	f	class:_Font
SetSmallCaps	mate/msword8.cpp	/^void _Font::SetSmallCaps(long nNewValue)$/;"	f	class:_Font
SetSound	mate/ButtonST.cpp	/^DWORD CButtonST::SetSound(LPCTSTR lpszSound, HMODULE hMod, BOOL bPlayOnClick, BOOL bPlayAsync)$/;"	f	class:CButtonST
SetSpaceAfter	mate/msword8.cpp	/^void Paragraph::SetSpaceAfter(float newValue)$/;"	f	class:Paragraph
SetSpaceAfter	mate/msword8.cpp	/^void Paragraphs::SetSpaceAfter(float newValue)$/;"	f	class:Paragraphs
SetSpaceBefore	mate/msword8.cpp	/^void Paragraph::SetSpaceBefore(float newValue)$/;"	f	class:Paragraph
SetSpaceBefore	mate/msword8.cpp	/^void Paragraphs::SetSpaceBefore(float newValue)$/;"	f	class:Paragraphs
SetSpaceBetweenColumns	mate/msword8.cpp	/^void Row::SetSpaceBetweenColumns(float newValue)$/;"	f	class:Row
SetSpaceBetweenColumns	mate/msword8.cpp	/^void Rows::SetSpaceBetweenColumns(float newValue)$/;"	f	class:Rows
SetSpacing	mate/msword8.cpp	/^void _Font::SetSpacing(float newValue)$/;"	f	class:_Font
SetSpellingChecked	mate/msword8.cpp	/^void Range2::SetSpellingChecked(BOOL bNewValue)$/;"	f	class:Range2
SetSpellingChecked	mate/msword8.cpp	/^void _Document::SetSpellingChecked(BOOL bNewValue)$/;"	f	class:_Document
SetStandardFont	mate/excel8.cpp	/^void _ApplicationExcel::SetStandardFont(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetStandardFontSize	mate/excel8.cpp	/^void _ApplicationExcel::SetStandardFontSize(double newValue)$/;"	f	class:_ApplicationExcel
SetStandardIcon	mate/SystemTray.cpp	/^BOOL CSystemTray::SetStandardIcon(LPCTSTR lpIconName)$/;"	f	class:CSystemTray
SetStandardIcon	mate/SystemTray.cpp	/^BOOL CSystemTray::SetStandardIcon(UINT nIDResource)$/;"	f	class:CSystemTray
SetStandardWidth	mate/excel8.cpp	/^void _Worksheet::SetStandardWidth(double newValue)$/;"	f	class:_Worksheet
SetStart	mate/msword8.cpp	/^void Range2::SetStart(long nNewValue)$/;"	f	class:Range2
SetStart	mate/msword8.cpp	/^void Selection::SetStart(long nNewValue)$/;"	f	class:Selection
SetStartIsActive	mate/msword8.cpp	/^void Selection::SetStartIsActive(BOOL bNewValue)$/;"	f	class:Selection
SetStartupPath	mate/msword8.cpp	/^void _ApplicationWord::SetStartupPath(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetStatusBar	mate/excel8.cpp	/^void _ApplicationExcel::SetStatusBar(const VARIANT& newValue)$/;"	f	class:_ApplicationExcel
SetStatusBar	mate/msword8.cpp	/^void _ApplicationWord::SetStatusBar(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetStatusText	mate/CDRMateView.cpp	/^void CCDRMateView::SetStatusText(CString sText)$/;"	f	class:CCDRMateView
SetStatusText	mate/MainFrm.cpp	/^void CMainFrame::SetStatusText(LPCTSTR pText)$/;"	f	class:CMainFrame
SetStrikeThrough	mate/msword8.cpp	/^void _Font::SetStrikeThrough(long nNewValue)$/;"	f	class:_Font
SetStrikethrough	mate/excel8.cpp	/^void Font::SetStrikethrough(const VARIANT& newValue)$/;"	f	class:Font
SetStyle	mate/excel8.cpp	/^void Range::SetStyle(const VARIANT& newValue)$/;"	f	class:Range
SetStyle	mate/msword8.cpp	/^void Paragraph::SetStyle(VARIANT* newValue)$/;"	f	class:Paragraph
SetStyle	mate/msword8.cpp	/^void Paragraphs::SetStyle(VARIANT* newValue)$/;"	f	class:Paragraphs
SetStyle	mate/msword8.cpp	/^void Range2::SetStyle(VARIANT* newValue)$/;"	f	class:Range2
SetStyle	mate/msword8.cpp	/^void Selection::SetStyle(VARIANT* newValue)$/;"	f	class:Selection
SetSubscript	mate/excel8.cpp	/^void Font::SetSubscript(const VARIANT& newValue)$/;"	f	class:Font
SetSubscript	mate/msword8.cpp	/^void _Font::SetSubscript(long nNewValue)$/;"	f	class:_Font
SetSummaryLength	mate/msword8.cpp	/^void _Document::SetSummaryLength(long nNewValue)$/;"	f	class:_Document
SetSummaryViewMode	mate/msword8.cpp	/^void _Document::SetSummaryViewMode(long nNewValue)$/;"	f	class:_Document
SetSuperscript	mate/excel8.cpp	/^void Font::SetSuperscript(const VARIANT& newValue)$/;"	f	class:Font
SetSuperscript	mate/msword8.cpp	/^void _Font::SetSuperscript(long nNewValue)$/;"	f	class:_Font
SetSurroundFooter	mate/msword8.cpp	/^void Borders::SetSurroundFooter(BOOL bNewValue)$/;"	f	class:Borders
SetSurroundHeader	mate/msword8.cpp	/^void Borders::SetSurroundHeader(BOOL bNewValue)$/;"	f	class:Borders
SetTabStops	mate/msword8.cpp	/^void Paragraph::SetTabStops(LPDISPATCH newValue)$/;"	f	class:Paragraph
SetTabStops	mate/msword8.cpp	/^void Paragraphs::SetTabStops(LPDISPATCH newValue)$/;"	f	class:Paragraphs
SetTemplateRemoveExtData	mate/excel8.cpp	/^void _Workbook::SetTemplateRemoveExtData(BOOL bNewValue)$/;"	f	class:_Workbook
SetText	mate/msword8.cpp	/^void Range2::SetText(LPCTSTR lpszNewValue)$/;"	f	class:Range2
SetText	mate/msword8.cpp	/^void Selection::SetText(LPCTSTR lpszNewValue)$/;"	f	class:Selection
SetTextRetrievalMode	mate/msword8.cpp	/^void Range2::SetTextRetrievalMode(LPDISPATCH newValue)$/;"	f	class:Range2
SetTexture	mate/msword8.cpp	/^void Shading::SetTexture(long nNewValue)$/;"	f	class:Shading
SetTooltipText	mate/ButtonST.cpp	/^void CButtonST::SetTooltipText(LPCTSTR lpszText, BOOL bActivate)$/;"	f	class:CButtonST
SetTooltipText	mate/ButtonST.cpp	/^void CButtonST::SetTooltipText(int nText, BOOL bActivate)$/;"	f	class:CButtonST
SetTooltipText	mate/SystemTray.cpp	/^BOOL CSystemTray::SetTooltipText(LPCTSTR pszTip)$/;"	f	class:CSystemTray
SetTooltipText	mate/SystemTray.cpp	/^BOOL CSystemTray::SetTooltipText(UINT nID)$/;"	f	class:CSystemTray
SetTop	mate/excel8.cpp	/^void _ApplicationExcel::SetTop(double newValue)$/;"	f	class:_ApplicationExcel
SetTop	mate/msword8.cpp	/^void _ApplicationWord::SetTop(long nNewValue)$/;"	f	class:_ApplicationWord
SetTrackRevisions	mate/msword8.cpp	/^void _Document::SetTrackRevisions(BOOL bNewValue)$/;"	f	class:_Document
SetTransitionExpEval	mate/excel8.cpp	/^void _Worksheet::SetTransitionExpEval(BOOL bNewValue)$/;"	f	class:_Worksheet
SetTransitionFormEntry	mate/excel8.cpp	/^void _Worksheet::SetTransitionFormEntry(BOOL bNewValue)$/;"	f	class:_Worksheet
SetTransitionMenuKey	mate/excel8.cpp	/^void _ApplicationExcel::SetTransitionMenuKey(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetTransitionMenuKeyAction	mate/excel8.cpp	/^void _ApplicationExcel::SetTransitionMenuKeyAction(long nNewValue)$/;"	f	class:_ApplicationExcel
SetTransitionNavigKeys	mate/excel8.cpp	/^void _ApplicationExcel::SetTransitionNavigKeys(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetUILanguage	mate/excel8.cpp	/^void _ApplicationExcel::SetUILanguage(long nNewValue)$/;"	f	class:_ApplicationExcel
SetURL	mate/ButtonST.cpp	/^DWORD CButtonST::SetURL(LPCTSTR lpszURL)$/;"	f	class:CButtonST
SetUnderline	mate/excel8.cpp	/^void Font::SetUnderline(const VARIANT& newValue)$/;"	f	class:Font
SetUnderline	mate/msword8.cpp	/^void Range2::SetUnderline(long nNewValue)$/;"	f	class:Range2
SetUnderline	mate/msword8.cpp	/^void _Font::SetUnderline(long nNewValue)$/;"	f	class:_Font
SetUpdateRemoteReferences	mate/excel8.cpp	/^void _Workbook::SetUpdateRemoteReferences(BOOL bNewValue)$/;"	f	class:_Workbook
SetUpdateStylesOnOpen	mate/msword8.cpp	/^void _Document::SetUpdateStylesOnOpen(BOOL bNewValue)$/;"	f	class:_Document
SetUseStandardHeight	mate/excel8.cpp	/^void Range::SetUseStandardHeight(const VARIANT& newValue)$/;"	f	class:Range
SetUseStandardWidth	mate/excel8.cpp	/^void Range::SetUseStandardWidth(const VARIANT& newValue)$/;"	f	class:Range
SetUserAddress	mate/msword8.cpp	/^void _ApplicationWord::SetUserAddress(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetUserControl	mate/excel8.cpp	/^void _ApplicationExcel::SetUserControl(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetUserControl	mate/msword8.cpp	/^void _Document::SetUserControl(BOOL bNewValue)$/;"	f	class:_Document
SetUserInitials	mate/msword8.cpp	/^void _ApplicationWord::SetUserInitials(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetUserName	mate/excel8.cpp	/^void _ApplicationExcel::SetUserName(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationExcel
SetUserName	mate/msword8.cpp	/^void _ApplicationWord::SetUserName(LPCTSTR lpszNewValue)$/;"	f	class:_ApplicationWord
SetValue	mate/excel8.cpp	/^void Range::SetValue(const VARIANT& newValue)$/;"	f	class:Range
SetValue2	mate/excel8.cpp	/^void Range::SetValue2(const VARIANT& newValue)$/;"	f	class:Range
SetVerticalAlignment	mate/excel8.cpp	/^void Range::SetVerticalAlignment(const VARIANT& newValue)$/;"	f	class:Range
SetVerticalAlignment	mate/msword8.cpp	/^void Cell::SetVerticalAlignment(long nNewValue)$/;"	f	class:Cell
SetVerticalAlignment	mate/msword8.cpp	/^void Cells::SetVerticalAlignment(long nNewValue)$/;"	f	class:Cells
SetVisible	mate/excel8.cpp	/^void Worksheets::SetVisible(const VARIANT& newValue)$/;"	f	class:Worksheets
SetVisible	mate/excel8.cpp	/^void _ApplicationExcel::SetVisible(BOOL bNewValue)$/;"	f	class:_ApplicationExcel
SetVisible	mate/excel8.cpp	/^void _Worksheet::SetVisible(long nNewValue)$/;"	f	class:_Worksheet
SetVisible	mate/msword8.cpp	/^void _ApplicationWord::SetVisible(BOOL bNewValue)$/;"	f	class:_ApplicationWord
SetWidowControl	mate/msword8.cpp	/^void Paragraph::SetWidowControl(long nNewValue)$/;"	f	class:Paragraph
SetWidowControl	mate/msword8.cpp	/^void Paragraphs::SetWidowControl(long nNewValue)$/;"	f	class:Paragraphs
SetWidth	mate/excel8.cpp	/^void _ApplicationExcel::SetWidth(double newValue)$/;"	f	class:_ApplicationExcel
SetWidth	mate/msword8.cpp	/^void Cell::SetWidth(float ColumnWidth, long RulerStyle)$/;"	f	class:Cell
SetWidth	mate/msword8.cpp	/^void Cell::SetWidth(float newValue)$/;"	f	class:Cell
SetWidth	mate/msword8.cpp	/^void Cells::SetWidth(float ColumnWidth, long RulerStyle)$/;"	f	class:Cells
SetWidth	mate/msword8.cpp	/^void Cells::SetWidth(float newValue)$/;"	f	class:Cells
SetWidth	mate/msword8.cpp	/^void Column::SetWidth(float ColumnWidth, long RulerStyle)$/;"	f	class:Column
SetWidth	mate/msword8.cpp	/^void Column::SetWidth(float newValue)$/;"	f	class:Column
SetWidth	mate/msword8.cpp	/^void Columns::SetWidth(float ColumnWidth, long RulerStyle)$/;"	f	class:Columns
SetWidth	mate/msword8.cpp	/^void Columns::SetWidth(float newValue)$/;"	f	class:Columns
SetWidth	mate/msword8.cpp	/^void _ApplicationWord::SetWidth(long nNewValue)$/;"	f	class:_ApplicationWord
SetWindowState	mate/excel8.cpp	/^void _ApplicationExcel::SetWindowState(long nNewValue)$/;"	f	class:_ApplicationExcel
SetWindowState	mate/msword8.cpp	/^void _ApplicationWord::SetWindowState(long nNewValue)$/;"	f	class:_ApplicationWord
SetWindowToNotify	tmp/SerialComm.cpp	/^void CSerialComm::SetWindowToNotify(HWND hWnd) $/;"	f	class:CSerialComm
SetWrapText	mate/excel8.cpp	/^void Range::SetWrapText(const VARIANT& newValue)$/;"	f	class:Range
SetWritePassword	mate/msword8.cpp	/^void _Document::SetWritePassword(LPCTSTR lpszNewValue)$/;"	f	class:_Document
Set_BVF	cdr_session.c	/^static BOOL Set_BVF(struct cdr_session *ps)$/;"	f	file:
Set_BVF	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_BVF(void)$/;"	f	class:CCDRSession
Set_CodeName	mate/excel8.cpp	/^void _Workbook::Set_CodeName(LPCTSTR lpszNewValue)$/;"	f	class:_Workbook
Set_CodeName	mate/excel8.cpp	/^void _Worksheet::Set_CodeName(LPCTSTR lpszNewValue)$/;"	f	class:_Worksheet
Set_CodeName	mate/msword8.cpp	/^void _Document::Set_CodeName(LPCTSTR lpszNewValue)$/;"	f	class:_Document
Set_Default	mate/excel8.cpp	/^void Range::Set_Default(const VARIANT& RowIndex, const VARIANT& ColumnIndex, const VARIANT& newValue)$/;"	f	class:Range
Set_FIN	cdr_session.c	/^static BOOL Set_FIN(struct cdr_session *ps, char *pDesc)$/;"	f	file:
Set_FIN	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_FIN(char *pDesc)$/;"	f	class:CCDRSession
Set_Header	cdr_session.c	/^static BOOL Set_Header(struct cdr_session *ps)$/;"	f	file:
Set_Header	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_Header(void)$/;"	f	class:CCDRSession
Set_KER	cdr_session.c	/^static BOOL Set_KER(struct cdr_session *ps)$/;"	f	file:
Set_KER	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_KER(void)$/;"	f	class:CCDRSession
Set_LENS	cdr_session.c	/^static BOOL Set_LENS(struct cdr_session *ps)$/;"	f	file:
Set_LENS	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_LENS(void)$/;"	f	class:CCDRSession
Set_NP_RA	cdr_session.c	/^static BOOL Set_NP_RA(struct cdr_session *ps)$/;"	f	file:
Set_NP_RA	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_NP_RA(void)$/;"	f	class:CCDRSession
Set_PRISM	cdr_session.c	/^static BOOL Set_PRISM(struct cdr_session *ps, char *pDesc)$/;"	f	file:
Set_PRISM	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_PRISM(char *pDesc)$/;"	f	class:CCDRSession
Set_Patient	cdr_session.c	/^static BOOL Set_Patient(struct cdr_session *ps)$/;"	f	file:
Set_Patient	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_Patient(void)$/;"	f	class:CCDRSession
Set_RC_TEST	cdr_session.c	/^static BOOL Set_RC_TEST(struct cdr_session *ps)$/;"	f	file:
Set_RC_TEST	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_RC_TEST(void)$/;"	f	class:CCDRSession
Set_REF	cdr_session.c	/^static BOOL Set_REF(struct cdr_session *ps)$/;"	f	file:
Set_REF	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_REF(void)$/;"	f	class:CCDRSession
Set_Retino	cdr_session.c	/^static BOOL Set_Retino(struct cdr_session *ps)$/;"	f	file:
Set_Retino	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_Retino(void)$/;"	f	class:CCDRSession
Set_SUBJ	cdr_session.c	/^static BOOL Set_SUBJ(struct cdr_session *ps, char *pDesc)$/;"	f	file:
Set_SUBJ	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_SUBJ(char *pDesc)$/;"	f	class:CCDRSession
Set_TransEnd	cdr_session.c	/^static BOOL Set_TransEnd(struct cdr_session *ps) $/;"	f	file:
Set_TransEnd	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_TransEnd(void) $/;"	f	class:CCDRSession
Set_UN_VA	cdr_session.c	/^static BOOL Set_UN_VA(struct cdr_session *ps)$/;"	f	file:
Set_UN_VA	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_UN_VA(void)$/;"	f	class:CCDRSession
Set_Zernike	cdr_session.c	/^static BOOL Set_Zernike(struct cdr_session *ps, char *pDesc) $/;"	f	file:
Set_Zernike	tmp/CDRSession.cpp	/^BOOL CCDRSession::Set_Zernike(char *pDesc) $/;"	f	class:CCDRSession
Setup	tmp/CDRPacket.cpp	/^BOOL CCDRPacket::Setup(char *pData, int nSize) $/;"	f	class:CCDRPacket
SetupDevice	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::SetupDevice(int nDeviceMode, CDC *pDC, int nPaperWidth, int nPaperHeight) $/;"	f	class:CDeviceDrawInfo
SetupDeviceAsPrinter	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::SetupDeviceAsPrinter(void) $/;"	f	class:CDeviceDrawInfo
SetupTaskBarButton	mate/MainFrm.cpp	/^void CMainFrame::SetupTaskBarButton(void) $/;"	f	class:CMainFrame
SetupTrayIcon	mate/MainFrm.cpp	/^void CMainFrame::SetupTrayIcon(void)$/;"	f	class:CMainFrame
Shading	mate/msword8.h	/^	Shading() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Shading
Shading	mate/msword8.h	/^	Shading(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Shading
Shading	mate/msword8.h	/^	Shading(const Shading& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Shading
Shading	mate/msword8.h	/^class Shading : public COleDispatchDriver$/;"	c
Show	mate/DeviceView.cpp	/^BOOL CDeviceView::Show(CSetupInfo *pSetupInfo, int nMode, void *pData)$/;"	f	class:CDeviceView
Show	mate/excel8.cpp	/^void Range::Show()$/;"	f	class:Range
ShowAllData	mate/excel8.cpp	/^void _Worksheet::ShowAllData()$/;"	f	class:_Worksheet
ShowClipboard	mate/msword8.cpp	/^void _ApplicationWord::ShowClipboard()$/;"	f	class:_ApplicationWord
ShowControls	mate/CDRMateView.cpp	/^void CCDRMateView::ShowControls(int nTabView)$/;"	f	class:CCDRMateView
ShowDataForm	mate/excel8.cpp	/^void _Worksheet::ShowDataForm()$/;"	f	class:_Worksheet
ShowDependents	mate/excel8.cpp	/^void Range::ShowDependents(const VARIANT& Remove)$/;"	f	class:Range
ShowDialogbox	mate/SetupInfo.cpp	/^BOOL CSetupInfo::ShowDialogbox(void)$/;"	f	class:CSetupInfo
ShowErrors	mate/excel8.cpp	/^void Range::ShowErrors()$/;"	f	class:Range
ShowIcon	mate/SystemTray.cpp	/^void CSystemTray::ShowIcon()$/;"	f	class:CSystemTray
ShowMe	mate/msword8.cpp	/^void _ApplicationWord::ShowMe()$/;"	f	class:_ApplicationWord
ShowPrecedents	mate/excel8.cpp	/^void Range::ShowPrecedents(const VARIANT& Remove)$/;"	f	class:Range
Shrink	mate/msword8.cpp	/^void Selection::Shrink()$/;"	f	class:Selection
Shrink	mate/msword8.cpp	/^void _Font::Shrink()$/;"	f	class:_Font
SizeToContent	mate/ButtonST.cpp	/^void CButtonST::SizeToContent()$/;"	f	class:CButtonST
SndThreadFunc	tmp/SerialComm.cpp	/^DWORD WINAPI CSerialComm::SndThreadFunc(void *pvParam)$/;"	f	class:CSerialComm
Sort	mate/excel8.cpp	/^void Range::Sort(const VARIANT& Key1, long Order1, const VARIANT& Key2, const VARIANT& Type, long Order2, const VARIANT& Key3, long Order3, long Header, const VARIANT& OrderCustom, const VARIANT& MatchCase, long Orientation, long SortMethod, $/;"	f	class:Range
Sort	mate/msword8.cpp	/^void Column::Sort(VARIANT* ExcludeHeader, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* CaseSensitive, VARIANT* LanguageID)$/;"	f	class:Column
Sort	mate/msword8.cpp	/^void Range2::Sort(VARIANT* ExcludeHeader, VARIANT* FieldNumber, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* FieldNumber2, VARIANT* SortFieldType2, VARIANT* SortOrder2, VARIANT* FieldNumber3, VARIANT* SortFieldType3, VARIANT* SortOrder3, $/;"	f	class:Range2
Sort	mate/msword8.cpp	/^void Selection::Sort(VARIANT* ExcludeHeader, VARIANT* FieldNumber, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* FieldNumber2, VARIANT* SortFieldType2, VARIANT* SortOrder2, VARIANT* FieldNumber3, VARIANT* SortFieldType3, VARIANT* SortOrder3, $/;"	f	class:Selection
Sort	mate/msword8.cpp	/^void Table::Sort(VARIANT* ExcludeHeader, VARIANT* FieldNumber, VARIANT* SortFieldType, VARIANT* SortOrder, VARIANT* FieldNumber2, VARIANT* SortFieldType2, VARIANT* SortOrder2, VARIANT* FieldNumber3, VARIANT* SortFieldType3, VARIANT* SortOrder3, $/;"	f	class:Table
SortAscending	mate/msword8.cpp	/^void Range2::SortAscending()$/;"	f	class:Range2
SortAscending	mate/msword8.cpp	/^void Selection::SortAscending()$/;"	f	class:Selection
SortAscending	mate/msword8.cpp	/^void Table::SortAscending()$/;"	f	class:Table
SortDescending	mate/msword8.cpp	/^void Range2::SortDescending()$/;"	f	class:Range2
SortDescending	mate/msword8.cpp	/^void Selection::SortDescending()$/;"	f	class:Selection
SortDescending	mate/msword8.cpp	/^void Table::SortDescending()$/;"	f	class:Table
SortSpecial	mate/excel8.cpp	/^void Range::SortSpecial(long SortMethod, const VARIANT& Key1, long Order1, const VARIANT& Type, const VARIANT& Key2, long Order2, const VARIANT& Key3, long Order3, long Header, const VARIANT& OrderCustom, const VARIANT& MatchCase, long Orientation)$/;"	f	class:Range
Space1	mate/msword8.cpp	/^void Paragraph::Space1()$/;"	f	class:Paragraph
Space1	mate/msword8.cpp	/^void Paragraphs::Space1()$/;"	f	class:Paragraphs
Space15	mate/msword8.cpp	/^void Paragraph::Space15()$/;"	f	class:Paragraph
Space15	mate/msword8.cpp	/^void Paragraphs::Space15()$/;"	f	class:Paragraphs
Space2	mate/msword8.cpp	/^void Paragraph::Space2()$/;"	f	class:Paragraph
Space2	mate/msword8.cpp	/^void Paragraphs::Space2()$/;"	f	class:Paragraphs
SpecialCells	mate/excel8.cpp	/^LPDISPATCH Range::SpecialCells(long Type, const VARIANT& Value)$/;"	f	class:Range
Split	mate/msword8.cpp	/^LPDISPATCH Table::Split(VARIANT* BeforeRow)$/;"	f	class:Table
Split	mate/msword8.cpp	/^void Cell::Split(VARIANT* NumRows, VARIANT* NumColumns)$/;"	f	class:Cell
Split	mate/msword8.cpp	/^void Cells::Split(VARIANT* NumRows, VARIANT* NumColumns, VARIANT* MergeBeforeSplit)$/;"	f	class:Cells
SplitCells	mate/OfficeDrawInfo.cpp	/^void COfficeDrawInfo::SplitCells(int nLeftRows, int nLeftCols, int nRightRows, int nRightCols) $/;"	f	class:COfficeDrawInfo
SplitTable	mate/msword8.cpp	/^void Selection::SplitTable()$/;"	f	class:Selection
Start	tmp/LogTracer.h	/^	BOOL Start(void) $/;"	f	class:CLogTracer
StartOf	mate/msword8.cpp	/^long Range2::StartOf(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Range2
StartOf	mate/msword8.cpp	/^long Selection::StartOf(VARIANT* Unit, VARIANT* Extend)$/;"	f	class:Selection
StepAnimation	mate/SystemTray.cpp	/^BOOL CSystemTray::StepAnimation()$/;"	f	class:CSystemTray
Stop	tmp/LogTracer.h	/^	void Stop(void)$/;"	f	class:CLogTracer
StopAnimation	mate/SystemTray.cpp	/^BOOL CSystemTray::StopAnimation()$/;"	f	class:CSystemTray
SubscribeTo	mate/excel8.cpp	/^void Range::SubscribeTo(LPCTSTR Edition, long Format)$/;"	f	class:Range
SubscribeTo	mate/msword8.cpp	/^void Range2::SubscribeTo(LPCTSTR Edition, VARIANT* Format)$/;"	f	class:Range2
SubstituteFont	mate/msword8.cpp	/^void _ApplicationWord::SubstituteFont(LPCTSTR UnavailableFont, LPCTSTR SubstituteFont)$/;"	f	class:_ApplicationWord
Subtotal	mate/excel8.cpp	/^void Range::Subtotal(long GroupBy, long Function, const VARIANT& TotalList, const VARIANT& Replace, const VARIANT& PageBreaks, long SummaryBelowData)$/;"	f	class:Range
SwitchView	mate/Tabwnd.cpp	/^void CTabWnd::SwitchView(int nNewTab)$/;"	f	class:CTabWnd
TABSEL_HEIGHT	mate/Tabwnd.h	18;"	d
TABWND_DEFAULT_ID	mate/Tabwnd.h	14;"	d
TABWND_HEIGHT	mate/Tabwnd.h	15;"	d
TABWND_MEMBER	mate/Tabwnd.h	/^}TABWND_MEMBER;$/;"	t	typeref:struct:__anon4
TAB_DEPL	mate/Tabwnd.h	19;"	d
TAB_HEIGHT	mate/Tabwnd.h	16;"	d
TAB_RECEIVED	mate/CDRMateView.h	34;"	d
TAB_SPACE	mate/Tabwnd.h	17;"	d
TAB_TRANSFER	mate/CDRMateView.h	35;"	d
TCHAR	inc/minIni.h	/^  typedef char TCHAR;$/;"	t
THIS_FILE	mate/AdvancedDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/AdvancedDlg.cpp	12;"	d	file:
THIS_FILE	mate/AppLogFile.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/AppLogFile.cpp	10;"	d	file:
THIS_FILE	mate/ButtonST.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ButtonST.cpp	11;"	d	file:
THIS_FILE	mate/CDRData.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CDRData.cpp	17;"	d	file:
THIS_FILE	mate/CDRMate.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CDRMate.cpp	16;"	d	file:
THIS_FILE	mate/CDRMateDoc.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CDRMateDoc.cpp	11;"	d	file:
THIS_FILE	mate/CDRMateView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CDRMateView.cpp	19;"	d	file:
THIS_FILE	mate/CDROpPannel.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CDROpPannel.cpp	14;"	d	file:
THIS_FILE	mate/CLMData.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/CLMData.cpp	11;"	d	file:
THIS_FILE	mate/ConnectPage.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ConnectPage.cpp	10;"	d	file:
THIS_FILE	mate/DataFrm.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/DataFrm.cpp	10;"	d	file:
THIS_FILE	mate/DataView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/DataView.cpp	10;"	d	file:
THIS_FILE	mate/DeviceDrawInfo.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/DeviceDrawInfo.cpp	13;"	d	file:
THIS_FILE	mate/DeviceView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/DeviceView.cpp	11;"	d	file:
THIS_FILE	mate/FileSystem.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/FileSystem.cpp	10;"	d	file:
THIS_FILE	mate/GeneralPage.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/GeneralPage.cpp	12;"	d	file:
THIS_FILE	mate/ImportDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ImportDlg.cpp	10;"	d	file:
THIS_FILE	mate/InstanceChecker.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/InstanceChecker.cpp	10;"	d	file:
THIS_FILE	mate/ItemDrawInfo.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ItemDrawInfo.cpp	10;"	d	file:
THIS_FILE	mate/Lable.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/Lable.cpp	10;"	d	file:
THIS_FILE	mate/MRKData.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/MRKData.cpp	11;"	d	file:
THIS_FILE	mate/MainFrm.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/MainFrm.cpp	16;"	d	file:
THIS_FILE	mate/OfficeDrawInfo.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/OfficeDrawInfo.cpp	13;"	d	file:
THIS_FILE	mate/PatientHistory.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/PatientHistory.cpp	10;"	d	file:
THIS_FILE	mate/PrintPage.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/PrintPage.cpp	11;"	d	file:
THIS_FILE	mate/SetupInfo.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/SetupInfo.cpp	11;"	d	file:
THIS_FILE	mate/SetupSheet.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/SetupSheet.cpp	10;"	d	file:
THIS_FILE	mate/SystemTray.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/SystemTray.cpp	60;"	d	file:
THIS_FILE	mate/Tabwnd.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/Tabwnd.cpp	15;"	d	file:
THIS_FILE	mate/ZernikeView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ZernikeView.cpp	10;"	d	file:
THIS_FILE	mate/ZernikeWnd.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/ZernikeWnd.cpp	10;"	d	file:
THIS_FILE	mate/excel8.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/excel8.cpp	8;"	d	file:
THIS_FILE	mate/msword8.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	mate/msword8.cpp	8;"	d	file:
TIMER_IMPORT	mate/CDRMateView.h	30;"	d
TRANS_END	inc/CDRType.h	/^} TRANS_END ;$/;"	t	typeref:struct:_TRANS_END
TRANS_END	tmp/CDRType.h	/^} TRANS_END ;$/;"	t	typeref:struct:_TRANS_END
TRUE	inc/CDRType.h	10;"	d
TTM_SETTITLE	mate/ButtonST.cpp	25;"	d	file:
TTM_SETTITLE	mate/ButtonST.cpp	27;"	d	file:
TTM_SETTITLEA	mate/ButtonST.cpp	22;"	d	file:
TTM_SETTITLEW	mate/ButtonST.cpp	23;"	d	file:
TTS_BALLOON	mate/ButtonST.cpp	32;"	d	file:
TabHangingIndent	mate/msword8.cpp	/^void Paragraph::TabHangingIndent(short Count)$/;"	f	class:Paragraph
TabHangingIndent	mate/msword8.cpp	/^void Paragraphs::TabHangingIndent(short Count)$/;"	f	class:Paragraphs
TabIndent	mate/msword8.cpp	/^void Paragraph::TabIndent(short Count)$/;"	f	class:Paragraph
TabIndent	mate/msword8.cpp	/^void Paragraphs::TabIndent(short Count)$/;"	f	class:Paragraphs
Table	mate/excel8.cpp	/^void Range::Table(const VARIANT& RowInput, const VARIANT& ColumnInput)$/;"	f	class:Range
Table	mate/msword8.h	/^	Table() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Table
Table	mate/msword8.h	/^	Table(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Table
Table	mate/msword8.h	/^	Table(const Table& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Table
Table	mate/msword8.h	/^class Table : public COleDispatchDriver$/;"	c
Tables	mate/msword8.h	/^	Tables() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Tables
Tables	mate/msword8.h	/^	Tables(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Tables
Tables	mate/msword8.h	/^	Tables(const Tables& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Tables
Tables	mate/msword8.h	/^class Tables : public COleDispatchDriver$/;"	c
TextToColumns	mate/excel8.cpp	/^void Range::TextToColumns(const VARIANT& Destination, long DataType, long TextQualifier, const VARIANT& ConsecutiveDelimiter, const VARIANT& Tab, const VARIANT& Semicolon, const VARIANT& Comma, const VARIANT& Space, const VARIANT& Other, $/;"	f	class:Range
ToggleFormsDesign	mate/msword8.cpp	/^void _Document::ToggleFormsDesign()$/;"	f	class:_Document
Trace	tmp/LogTracer.h	/^	void Trace(LPCSTR pFormat, ...)$/;"	f	class:CLogTracer
TypeBackspace	mate/msword8.cpp	/^void Selection::TypeBackspace()$/;"	f	class:Selection
TypeParagraph	mate/msword8.cpp	/^void Selection::TypeParagraph()$/;"	f	class:Selection
TypeText	mate/msword8.cpp	/^void Selection::TypeText(LPCTSTR Text)$/;"	f	class:Selection
UN_VA_DATA	inc/CDRType.h	/^} UN_VA_DATA ;$/;"	t	typeref:struct:_UN_VA_DATA
UN_VA_DATA	tmp/CDRType.h	/^} UN_VA_DATA ;$/;"	t	typeref:struct:_UN_VA_DATA
USE_GRAYCOLOR	mate/SetupInfo.h	30;"	d
USE_GRAY_COLOR	mate/DeviceDrawInfo.h	46;"	d
UnLockThis	tmp/LogTracer.h	/^	inline void			UnLockThis() {LeaveCriticalSection(&m_csLock);}$/;"	f	class:CLogTracer
UnLockThis	tmp/SerialComm.h	/^	inline void			UnLockThis() {LeaveCriticalSection(&m_csLock);}$/;"	f	class:CSerialComm
UnMerge	mate/excel8.cpp	/^void Range::UnMerge()$/;"	f	class:Range
Undo	mate/excel8.cpp	/^void _ApplicationExcel::Undo()$/;"	f	class:_ApplicationExcel
Undo	mate/msword8.cpp	/^BOOL _Document::Undo(VARIANT* Times)$/;"	f	class:_Document
UndoClear	mate/msword8.cpp	/^void _Document::UndoClear()$/;"	f	class:_Document
Ungroup	mate/excel8.cpp	/^void Range::Ungroup()$/;"	f	class:Range
Union	mate/excel8.cpp	/^LPDISPATCH _ApplicationExcel::Union(LPDISPATCH Arg1, LPDISPATCH Arg2, const VARIANT& Arg3, const VARIANT& Arg4, const VARIANT& Arg5, const VARIANT& Arg6, const VARIANT& Arg7, const VARIANT& Arg8, const VARIANT& Arg9, const VARIANT& Arg10, const VARIANT& Arg11, $/;"	f	class:_ApplicationExcel
Unprotect	mate/excel8.cpp	/^void _Workbook::Unprotect(const VARIANT& Password)$/;"	f	class:_Workbook
Unprotect	mate/excel8.cpp	/^void _Worksheet::Unprotect(const VARIANT& Password)$/;"	f	class:_Worksheet
Unprotect	mate/msword8.cpp	/^void _Document::Unprotect(VARIANT* Password)$/;"	f	class:_Document
UnprotectSharing	mate/excel8.cpp	/^void _Workbook::UnprotectSharing(const VARIANT& SharingPassword)$/;"	f	class:_Workbook
UpdateAutoFormat	mate/msword8.cpp	/^void Table::UpdateAutoFormat()$/;"	f	class:Table
UpdateFromFile	mate/excel8.cpp	/^void _Workbook::UpdateFromFile()$/;"	f	class:_Workbook
UpdateLink	mate/excel8.cpp	/^void _Workbook::UpdateLink(const VARIANT& Name, const VARIANT& Type)$/;"	f	class:_Workbook
UpdateStyles	mate/msword8.cpp	/^void _Document::UpdateStyles()$/;"	f	class:_Document
UpdateSummaryProperties	mate/msword8.cpp	/^void _Document::UpdateSummaryProperties()$/;"	f	class:_Document
UpdateTransferList	mate/CDRMateView.cpp	/^BOOL CCDRMateView::UpdateTransferList(void) $/;"	f	class:CCDRMateView
VA_DATA	inc/CDRType.h	/^} VA_DATA ;$/;"	t	typeref:struct:_VA_DATA
VA_DATA	tmp/CDRType.h	/^} VA_DATA ;$/;"	t	typeref:struct:_VA_DATA
VC_EXTRALEAN	mate/StdAfx.h	13;"	d
VERSION_STR	main.c	28;"	d	file:
VERT_MARGIN	mate/CDRMateView.h	27;"	d
VIEW_CDR	mate/OfficeDrawInfo.h	20;"	d
VIEW_CLM	mate/OfficeDrawInfo.h	21;"	d
VIEW_MRK	mate/OfficeDrawInfo.h	22;"	d
VIEW_NONE	mate/OfficeDrawInfo.h	19;"	d
ViewCode	mate/msword8.cpp	/^void _Document::ViewCode()$/;"	f	class:_Document
ViewPropertyBrowser	mate/msword8.cpp	/^void _Document::ViewPropertyBrowser()$/;"	f	class:_Document
Visible	mate/SystemTray.h	/^    BOOL Visible() { return !m_bHidden; }$/;"	f	class:CSystemTray
Volatile	mate/excel8.cpp	/^void _ApplicationExcel::Volatile(const VARIANT& Volatile)$/;"	f	class:_ApplicationExcel
WAV_ZPOLY	inc/CDRType.h	24;"	d
WAV_ZPOLY	tmp/CDRType.h	20;"	d
WIN32_LEAN_AND_MEAN	tmp/StdAfx.h	15;"	d
WINDOW_MODE	mate/DeviceDrawInfo.h	40;"	d
WM_NEW_CDR_DATA	tmp/CDRDLL.h	18;"	d
WM_TABCHANGED	mate/Tabwnd.h	24;"	d
WM_TABRESIZE	mate/Tabwnd.h	23;"	d
WORD_MODE	mate/DeviceDrawInfo.h	41;"	d
Wait	mate/excel8.cpp	/^void _ApplicationExcel::Wait(const VARIANT& Time)$/;"	f	class:_ApplicationExcel
WholeStory	mate/msword8.cpp	/^void Range2::WholeStory()$/;"	f	class:Range2
WholeStory	mate/msword8.cpp	/^void Selection::WholeStory()$/;"	f	class:Selection
WindowProc	mate/SystemTray.cpp	/^LRESULT CSystemTray::WindowProc(UINT message, WPARAM wParam, LPARAM lParam) $/;"	f	class:CSystemTray
Workbooks	mate/excel8.h	/^	Workbooks() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Workbooks
Workbooks	mate/excel8.h	/^	Workbooks(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Workbooks
Workbooks	mate/excel8.h	/^	Workbooks(const Workbooks& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Workbooks
Workbooks	mate/excel8.h	/^class Workbooks : public COleDispatchDriver$/;"	c
Worksheets	mate/excel8.h	/^	Worksheets() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:Worksheets
Worksheets	mate/excel8.h	/^	Worksheets(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:Worksheets
Worksheets	mate/excel8.h	/^	Worksheets(const Worksheets& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:Worksheets
Worksheets	mate/excel8.h	/^class Worksheets : public COleDispatchDriver$/;"	c
Write	mate/AppLogFile.cpp	/^BOOL CAppLogFile::Write(LPCSTR pFormat, ...) $/;"	f	class:CAppLogFile
Write	tmp/LogTracer.h	/^	BOOL Write(LPCSTR pFormat, ...)$/;"	f	class:CLogTracer
WriteDCToDIB	mate/Lib_Bitmap.cpp	/^BOOL WriteDCToDIB(LPTSTR szFile, CDC *pDC, int nWidth, int nHeight)$/;"	f
WriteDIB	mate/Lib_Bitmap.cpp	/^BOOL WriteDIB(LPTSTR szFile, HANDLE hDIB)$/;"	f
WriteHeader	mate/AppLogFile.cpp	/^BOOL CAppLogFile::WriteHeader(LPCTSTR pAppName) $/;"	f	class:CAppLogFile
WriteHeader	tmp/LogTracer.h	/^	void WriteHeader(void) $/;"	f	class:CLogTracer
WriteTailer	mate/AppLogFile.cpp	/^BOOL CAppLogFile::WriteTailer(void) $/;"	f	class:CAppLogFile
WriteTailer	tmp/LogTracer.h	/^	void WriteTailer(void)$/;"	f	class:CLogTracer
WriteWindowToDIB	mate/Lib_Bitmap.cpp	/^BOOL WriteWindowToDIB(LPTSTR szFile, CWnd *pWnd)$/;"	f
ZERNIKE_DATA	inc/CDRType.h	/^} ZERNIKE_DATA ;$/;"	t	typeref:struct:_ZERNIKE_DATA
ZERNIKE_DATA	tmp/CDRType.h	/^} ZERNIKE_DATA ;$/;"	t	typeref:struct:_ZERNIKE_DATA
ZMAP_COMA	mate/ZernikeContext.h	12;"	d
ZMAP_CYL_ORD	mate/ZernikeContext.h	11;"	d
ZMAP_HIGH_ORD	mate/ZernikeContext.h	9;"	d
ZMAP_LOW_ORD	mate/ZernikeContext.h	8;"	d
ZMAP_SPH_ABE	mate/ZernikeContext.h	13;"	d
ZMAP_SPH_ORD	mate/ZernikeContext.h	10;"	d
ZPOLY_N	mate/ZernikeContext.h	14;"	d
_APS_3D_CONTROLS	mate/resource.h	151;"	d
_APS_NEXT_COMMAND_VALUE	mate/resource.h	153;"	d
_APS_NEXT_CONTROL_VALUE	mate/resource.h	154;"	d
_APS_NEXT_RESOURCE_VALUE	mate/resource.h	152;"	d
_APS_NEXT_SYMED_VALUE	mate/resource.h	155;"	d
_AUTO_SEND_H_	inc/auto_send.h	2;"	d
_ApplicationExcel	mate/excel8.h	/^	_ApplicationExcel() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_ApplicationExcel
_ApplicationExcel	mate/excel8.h	/^	_ApplicationExcel(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_ApplicationExcel
_ApplicationExcel	mate/excel8.h	/^	_ApplicationExcel(const _ApplicationExcel& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_ApplicationExcel
_ApplicationExcel	mate/excel8.h	/^class _ApplicationExcel : public COleDispatchDriver$/;"	c
_ApplicationWord	mate/msword8.h	/^	_ApplicationWord() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_ApplicationWord
_ApplicationWord	mate/msword8.h	/^	_ApplicationWord(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_ApplicationWord
_ApplicationWord	mate/msword8.h	/^	_ApplicationWord(const _ApplicationWord& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_ApplicationWord
_ApplicationWord	mate/msword8.h	/^class _ApplicationWord : public COleDispatchDriver$/;"	c
_BTNST_H	mate/ButtonST.h	39;"	d
_BUF_LIST_H_	inc/buf_list.h	2;"	d
_BVF_DATA	inc/CDRType.h	/^typedef struct _BVF_DATA $/;"	s
_BVF_DATA	tmp/CDRType.h	/^typedef struct _BVF_DATA $/;"	s
_BVF_TEST_DATA	inc/CDRType.h	/^typedef struct _BVF_TEST_DATA $/;"	s
_BVF_TEST_DATA	tmp/CDRType.h	/^typedef struct _BVF_TEST_DATA $/;"	s
_CAN_HD	inc/CDRType.h	/^typedef struct _CAN_HD $/;"	s
_CAN_HD	tmp/CDRType.h	/^typedef struct _CAN_HD $/;"	s
_CDR_PACKET_H_	inc/cdr_packet.h	2;"	d
_CDR_SESSION_H_	inc/cdr_session.h	2;"	d
_CLM_DATA_H_	inc/clm_data.h	2;"	d
_COEFF_DATA	inc/CDRType.h	/^typedef struct _COEFF_DATA$/;"	s
_COEFF_DATA	tmp/CDRType.h	/^typedef struct _COEFF_DATA$/;"	s
_CONF_H_	inc/conf.h	2;"	d
_CONSOLE_H_	inc/console.h	2;"	d
_CSV_EXPORT_H_	inc/csv_export.h	2;"	d
_CreateWindow	mate/DeviceView.cpp	/^CDataFrm* CDeviceView::_CreateWindow(CSetupInfo *pSetupInfo)$/;"	f	class:CDeviceView
_DATA_DUMP_H_	inc/data_dump.h	2;"	d
_Document	mate/msword8.h	/^	_Document() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_Document
_Document	mate/msword8.h	/^	_Document(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_Document
_Document	mate/msword8.h	/^	_Document(const _Document& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_Document
_Document	mate/msword8.h	/^class _Document : public COleDispatchDriver$/;"	c
_DrawData	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::_DrawData(CDC *pDC, int nCol, int nLine, int nFormat, const char *pText1, $/;"	f	class:CDeviceDrawInfo
_DrawDataHead	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::_DrawDataHead(CDC *pDC, const char *pText, int nCol, int nLine, int nFormat, BOOL bExist) $/;"	f	class:CDeviceDrawInfo
_DrawHorzLine	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::_DrawHorzLine(CDC *pDC, int nLine, int nStartCol) $/;"	f	class:CDeviceDrawInfo
_DrawItemHead	mate/DeviceDrawInfo.cpp	/^BOOL CDeviceDrawInfo::_DrawItemHead(CDC *pDC, const char *pText, int nCol, int nLine, BOOL bGraph) $/;"	f	class:CDeviceDrawInfo
_DrawText	mate/DeviceDrawInfo.cpp	/^void CDeviceDrawInfo::_DrawText(CDC *pDC, const char *pText, int nXPos, int nYPos, int nAlign, int nWidth, BOOL bGray) $/;"	f	class:CDeviceDrawInfo
_Evaluate	mate/excel8.cpp	/^VARIANT _ApplicationExcel::_Evaluate(const VARIANT& Name)$/;"	f	class:_ApplicationExcel
_Evaluate	mate/excel8.cpp	/^VARIANT _Worksheet::_Evaluate(const VARIANT& Name)$/;"	f	class:_Worksheet
_FIN_DATA	inc/CDRType.h	/^typedef struct _FIN_DATA$/;"	s
_FIN_DATA	tmp/CDRType.h	/^typedef struct _FIN_DATA$/;"	s
_Font	mate/msword8.h	/^	_Font() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_Font
_Font	mate/msword8.h	/^	_Font(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_Font
_Font	mate/msword8.h	/^	_Font(const _Font& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_Font
_Font	mate/msword8.h	/^class _Font : public COleDispatchDriver$/;"	c
_HEADER	inc/CDRType.h	/^typedef struct _HEADER$/;"	s
_HEADER	tmp/CDRType.h	/^typedef struct _HEADER$/;"	s
_INCLUDED_SYSTEMTRAY_H_	mate/SystemTray.h	27;"	d
_INOTIFY_H_	inc/inotify.h	2;"	d
_KER_DATA	inc/CDRType.h	/^typedef struct _KER_DATA $/;"	s
_KER_DATA	tmp/CDRType.h	/^typedef struct _KER_DATA $/;"	s
_KR_DATA	inc/CDRType.h	/^typedef struct _KR_DATA $/;"	s
_KR_DATA	tmp/CDRType.h	/^typedef struct _KR_DATA $/;"	s
_LENS_DATA	inc/CDRType.h	/^typedef struct _LENS_DATA $/;"	s
_LENS_DATA	tmp/CDRType.h	/^typedef struct _LENS_DATA $/;"	s
_LTRACE_DECLARE_OBJECT_	tmp/LogTracer.h	18;"	d
_LTRACE_DEFINE_OBJECT_	tmp/LogTracer.h	17;"	d
_LTRACE_START_RECORD_	tmp/LogTracer.h	19;"	d
_LTRACE_STOP_RECORD_	tmp/LogTracer.h	20;"	d
_MAIN_H_	inc/main.h	2;"	d
_MANUAL_SEND_H_	inc/manual_send.h	2;"	d
_MRK_DATA_H_	inc/mrk_data.h	2;"	d
_M_DATA	inc/CDRType.h	/^typedef struct _M_DATA $/;"	s
_M_DATA	tmp/CDRType.h	/^typedef struct _M_DATA $/;"	s
_M_N_DATA	inc/CDRType.h	/^typedef struct _M_N_DATA $/;"	s
_M_N_DATA	tmp/CDRType.h	/^typedef struct _M_N_DATA $/;"	s
_NPA_DATA	inc/CDRType.h	/^typedef struct _NPA_DATA $/;"	s
_NPA_DATA	tmp/CDRType.h	/^typedef struct _NPA_DATA $/;"	s
_NPC_DATA	inc/CDRType.h	/^typedef struct _NPC_DATA $/;"	s
_NPC_DATA	tmp/CDRType.h	/^typedef struct _NPC_DATA $/;"	s
_NP_RA_DATA	inc/CDRType.h	/^typedef struct _NP_RA_DATA $/;"	s
_NP_RA_DATA	tmp/CDRType.h	/^typedef struct _NP_RA_DATA $/;"	s
_PATIENT_DATA	inc/CDRType.h	/^typedef struct _PATIENT_DATA $/;"	s
_PATIENT_DATA	tmp/CDRType.h	/^typedef struct _PATIENT_DATA $/;"	s
_PRISM_DATA	inc/CDRType.h	/^typedef struct _PRISM_DATA$/;"	s
_PRISM_DATA	tmp/CDRType.h	/^typedef struct _PRISM_DATA$/;"	s
_P_DATA	inc/CDRType.h	/^typedef struct _P_DATA $/;"	s
_P_DATA	tmp/CDRType.h	/^typedef struct _P_DATA $/;"	s
_RAW_PACKET_H_	inc/raw_packet.h	2;"	d
_RA_DATA	inc/CDRType.h	/^typedef struct _RA_DATA $/;"	s
_RA_DATA	tmp/CDRType.h	/^typedef struct _RA_DATA $/;"	s
_RC_DATA	inc/CDRType.h	/^typedef struct _RC_DATA $/;"	s
_RC_DATA	tmp/CDRType.h	/^typedef struct _RC_DATA $/;"	s
_RC_TEST_DATA	inc/CDRType.h	/^typedef struct _RC_TEST_DATA$/;"	s
_RC_TEST_DATA	tmp/CDRType.h	/^typedef struct _RC_TEST_DATA$/;"	s
_REFR_DATA	inc/CDRType.h	/^typedef struct _REFR_DATA $/;"	s
_REFR_DATA	tmp/CDRType.h	/^typedef struct _REFR_DATA $/;"	s
_RETINO_DATA	inc/CDRType.h	/^typedef struct _RETINO_DATA $/;"	s
_RETINO_DATA	tmp/CDRType.h	/^typedef struct _RETINO_DATA $/;"	s
_Run2	mate/excel8.cpp	/^VARIANT _ApplicationExcel::_Run2(const VARIANT& Macro, const VARIANT& Arg1, const VARIANT& Arg2, const VARIANT& Arg3, const VARIANT& Arg4, const VARIANT& Arg5, const VARIANT& Arg6, const VARIANT& Arg7, const VARIANT& Arg8, const VARIANT& Arg9, $/;"	f	class:_ApplicationExcel
_SCA_DATA	inc/CDRType.h	/^typedef struct _SCA_DATA $/;"	s
_SCA_DATA	tmp/CDRType.h	/^typedef struct _SCA_DATA $/;"	s
_SERIAL_H_	inc/serial.h	2;"	d
_STRUCT_BITMAPS	mate/ButtonST.h	/^	typedef struct _STRUCT_BITMAPS$/;"	s	class:CButtonST
_STRUCT_CALLBACK	mate/ButtonST.h	/^	typedef struct _STRUCT_CALLBACK$/;"	s	class:CButtonST
_STRUCT_ICONS	mate/ButtonST.h	/^	typedef struct _STRUCT_ICONS$/;"	s	class:CButtonST
_STRUCT_SOUND	mate/ButtonST.h	/^	typedef struct _STRUCT_SOUND$/;"	s	class:CButtonST
_SUBJ_DATA	inc/CDRType.h	/^typedef struct _SUBJ_DATA $/;"	s
_SUBJ_DATA	tmp/CDRType.h	/^typedef struct _SUBJ_DATA $/;"	s
_TRANS_END	inc/CDRType.h	/^typedef struct _TRANS_END$/;"	s
_TRANS_END	tmp/CDRType.h	/^typedef struct _TRANS_END$/;"	s
_UN_VA_DATA	inc/CDRType.h	/^typedef struct _UN_VA_DATA$/;"	s
_UN_VA_DATA	tmp/CDRType.h	/^typedef struct _UN_VA_DATA$/;"	s
_VA_DATA	inc/CDRType.h	/^typedef struct _VA_DATA $/;"	s
_VA_DATA	tmp/CDRType.h	/^typedef struct _VA_DATA $/;"	s
_Workbook	mate/excel8.h	/^	_Workbook() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_Workbook
_Workbook	mate/excel8.h	/^	_Workbook(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_Workbook
_Workbook	mate/excel8.h	/^	_Workbook(const _Workbook& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_Workbook
_Workbook	mate/excel8.h	/^class _Workbook : public COleDispatchDriver$/;"	c
_Worksheet	mate/excel8.h	/^	_Worksheet() {}		\/\/ Calls COleDispatchDriver default constructor$/;"	f	class:_Worksheet
_Worksheet	mate/excel8.h	/^	_Worksheet(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}$/;"	f	class:_Worksheet
_Worksheet	mate/excel8.h	/^	_Worksheet(const _Worksheet& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}$/;"	f	class:_Worksheet
_Worksheet	mate/excel8.h	/^class _Worksheet : public COleDispatchDriver$/;"	c
_ZERNIKE_DATA	inc/CDRType.h	/^typedef struct _ZERNIKE_DATA$/;"	s
_ZERNIKE_DATA	tmp/CDRType.h	/^typedef struct _ZERNIKE_DATA$/;"	s
__CDRPACKET_H__	tmp/CDRPacket.h	3;"	d
__CDRPARAM_H__	tmp/CDRParam.h	3;"	d
__CDRSESSION_H__	tmp/CDRSession.h	3;"	d
__CDRTYPE_H__	inc/CDRType.h	3;"	d
__CDRTYPE_H__	tmp/CDRType.h	3;"	d
__COMM_PC_DEF_H	inc/comm_pc_def.h	13;"	d
__COMM_PC_DEF_H	tmp/comm_pc_def.h	13;"	d
__DEFINE_H__	mate/Define.h	3;"	d
__ERRORCODE_H__	mate/ErrorCode.h	3;"	d
__ERROR_H__	mate/Error.h	3;"	d
__LIB_BITMAP_H__	mate/Lib_Bitmap.h	3;"	d
__LIST_H	inc/list.h	2;"	d
__LOGTRACER_H__	tmp/LogTracer.h	4;"	d
__SERIAL_COMM_H__	tmp/SerialComm.h	3;"	d
__STRINGTABLE_H__	mate/StringTable.h	3;"	d
__UTILITY_H__	mate/Utility.h	3;"	d
__list_add	inc/list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	inc/list.h	/^static inline void __list_del(struct list_head *prev, struct list_head *next)$/;"	f
__list_splice	inc/list.h	/^static inline void __list_splice(struct list_head *list,$/;"	f
_axs	mate/ZernikeContext.h	/^    float       _axs ;$/;"	m	class:CZernikeContext
_bInitCtrls	mate/CDRMateView.h	/^	BOOL			_bInitCtrls ;$/;"	m	class:CCDRMateView
_bListOpen1	mate/CDRMateView.h	/^	BOOL			_bListOpen1 ;$/;"	m	class:CCDRMateView
_bListOpen2	mate/CDRMateView.h	/^	BOOL			_bListOpen2 ;$/;"	m	class:CCDRMateView
_bmpBtnBar	mate/CDRMateView.h	/^	CBitmap			_bmpBtnBar ;$/;"	m	class:CCDRMateView
_bmpCylOrd	mate/ZernikeView.h	/^	CBitmap					_bmpCylOrd ;$/;"	m	class:CZernikeView
_bmpDelete	mate/CDRMateView.h	/^	CBitmap			_bmpDelete ;$/;"	m	class:CCDRMateView
_bmpExport	mate/CDRMateView.h	/^	CBitmap			_bmpExport ;$/;"	m	class:CCDRMateView
_bmpGraph	mate/CDRMateView.h	/^	CBitmap			_bmpGraph ;$/;"	m	class:CCDRMateView
_bmpHLine	mate/CDRMateView.h	/^	CBitmap			_bmpHLine ;$/;"	m	class:CCDRMateView
_bmpHighOrd	mate/ZernikeView.h	/^	CBitmap					_bmpHighOrd ;$/;"	m	class:CZernikeView
_bmpLowOrd	mate/ZernikeView.h	/^	CBitmap					_bmpLowOrd ;$/;"	m	class:CZernikeView
_bmpMenuBar	mate/CDRMateView.h	/^	CBitmap			_bmpMenuBar ;$/;"	m	class:CCDRMateView
_bmpPrint	mate/CDRMateView.h	/^	CBitmap			_bmpPrint ;$/;"	m	class:CCDRMateView
_bmpReport	mate/CDRMateView.h	/^	CBitmap			_bmpReport ;$/;"	m	class:CCDRMateView
_bmpSphOrd	mate/ZernikeView.h	/^	CBitmap					_bmpSphOrd ;$/;"	m	class:CZernikeView
_bmpTitle	mate/ZernikeView.h	/^	CBitmap					_bmpTitle ;$/;"	m	class:CZernikeView
_bmpTransfer	mate/CDRMateView.h	/^	CBitmap			_bmpTransfer ;$/;"	m	class:CCDRMateView
_bmpWnd	mate/ZernikeView.h	/^    CBitmap                _bmpWnd ;$/;"	m	class:CZernikeView
_break	inc/CDRType.h	/^	char			_break[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
_break	tmp/CDRType.h	/^	char			_break[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
_brushBack	mate/Lable.h	/^	CBrush		_brushBack ;$/;"	m	class:CLable
_brushDlg	mate/CDRMateView.h	/^	CBrush			_brushDlg ;$/;"	m	class:CCDRMateView
_btnAbout	mate/CDRMateView.h	/^	CButtonST		_btnAbout ;$/;"	m	class:CCDRMateView
_btnClose	mate/CDRMate.cpp	/^	CButtonST		_btnClose ;$/;"	m	class:CAboutDlg	file:
_btnConnect	mate/CDRMateView.h	/^	CButtonST		_btnConnect ;$/;"	m	class:CCDRMateView
_btnDelete1	mate/CDRMateView.h	/^	CButtonST		_btnDelete1 ;$/;"	m	class:CCDRMateView
_btnDelete2	mate/CDRMateView.h	/^	CButtonST		_btnDelete2 ;$/;"	m	class:CCDRMateView
_btnExit	mate/CDRMateView.h	/^	CButtonST		_btnExit ;$/;"	m	class:CCDRMateView
_btnExport1	mate/CDRMateView.h	/^	CButtonST		_btnExport1 ;$/;"	m	class:CCDRMateView
_btnExport2	mate/CDRMateView.h	/^	CButtonST		_btnExport2 ;$/;"	m	class:CCDRMateView
_btnGraph1	mate/CDRMateView.h	/^	CButtonST		_btnGraph1 ;$/;"	m	class:CCDRMateView
_btnGraph2	mate/CDRMateView.h	/^	CButtonST		_btnGraph2 ;$/;"	m	class:CCDRMateView
_btnList1	mate/CDRMateView.h	/^	CButtonST		_btnList1 ;$/;"	m	class:CCDRMateView
_btnList2	mate/CDRMateView.h	/^	CButtonST		_btnList2 ;$/;"	m	class:CCDRMateView
_btnOptions	mate/CDRMateView.h	/^	CButtonST		_btnOptions ;$/;"	m	class:CCDRMateView
_btnPrint1	mate/CDRMateView.h	/^	CButtonST		_btnPrint1 ;$/;"	m	class:CCDRMateView
_btnPrint2	mate/CDRMateView.h	/^	CButtonST		_btnPrint2 ;$/;"	m	class:CCDRMateView
_btnReport1	mate/CDRMateView.h	/^	CButtonST		_btnReport1 ;$/;"	m	class:CCDRMateView
_btnReport2	mate/CDRMateView.h	/^	CButtonST		_btnReport2 ;$/;"	m	class:CCDRMateView
_captTime	mate/ZernikeContext.h	/^    CTime       _captTime ;$/;"	m	class:CZernikeContext
_coeffs	mate/ZernikeContext.h	/^    double      _coeffs[ZPOLY_N] ;$/;"	m	class:CZernikeContext
_cyl	mate/ZernikeContext.h	/^    float       _cyl ;$/;"	m	class:CZernikeContext
_eyeSide	mate/ZernikeContext.h	/^    int         _eyeSide ;$/;"	m	class:CZernikeContext
_fntLable	mate/CDRMate.cpp	/^	CFont			_fntLable ;$/;"	m	class:CAboutDlg	file:
_font	mate/ZernikeView.h	/^    CFont                  _font ;$/;"	m	class:CZernikeView
_fontAngle	mate/ZernikeView.h	/^    CFont                  _fontAngle ;$/;"	m	class:CZernikeView
_fontHead	mate/ZernikeView.h	/^    CFont                  _fontHead ;$/;"	m	class:CZernikeView
_fontLable	mate/CDRMateView.h	/^	CFont			_fontLable ;$/;"	m	class:CCDRMateView
_fontLevel	mate/ZernikeView.h	/^    CFont                  _fontLevel ;$/;"	m	class:CZernikeView
_fontList	mate/CDRMateView.h	/^	CFont			_fontList ;$/;"	m	class:CCDRMateView
_fontStep	mate/ZernikeView.h	/^    CFont                  _fontStep ;$/;"	m	class:CZernikeView
_isInit	mate/ZernikeView.h	/^    BOOL                   _isInit ;$/;"	m	class:CZernikeView
_isMapComa	mate/ZernikeContext.h	/^    BOOL        _isMapComa ;$/;"	m	class:CZernikeContext
_isMapCylOrd	mate/ZernikeContext.h	/^    BOOL        _isMapCylOrd ;$/;"	m	class:CZernikeContext
_isMapHighOrd	mate/ZernikeContext.h	/^    BOOL        _isMapHighOrd ;$/;"	m	class:CZernikeContext
_isMapLowOrd	mate/ZernikeContext.h	/^    BOOL        _isMapLowOrd ;$/;"	m	class:CZernikeContext
_isMapSphAbe	mate/ZernikeContext.h	/^    BOOL        _isMapSphAbe ;$/;"	m	class:CZernikeContext
_isMapSphOrd	mate/ZernikeContext.h	/^    BOOL        _isMapSphOrd ;$/;"	m	class:CZernikeContext
_isPrinting	mate/ZernikeView.h	/^    BOOL                   _isPrinting ;$/;"	m	class:CZernikeView
_lblCompany	mate/CDRMate.cpp	/^	CLable			_lblCompany ;$/;"	m	class:CAboutDlg	file:
_lblEmail	mate/CDRMate.cpp	/^	CLable			_lblEmail ;$/;"	m	class:CAboutDlg	file:
_lblLine1	mate/CDRMate.cpp	/^	CLable			_lblLine1 ;$/;"	m	class:CAboutDlg	file:
_lblLine2	mate/CDRMate.cpp	/^	CLable			_lblLine2 ;$/;"	m	class:CAboutDlg	file:
_lblList1	mate/CDRMateView.h	/^	CLable			_lblList1 ;$/;"	m	class:CCDRMateView
_lblList2	mate/CDRMateView.h	/^	CLable			_lblList2 ;$/;"	m	class:CCDRMateView
_lblRight	mate/CDRMate.cpp	/^	CLable			_lblRight ;$/;"	m	class:CAboutDlg	file:
_lblVersion	mate/CDRMate.cpp	/^	CLable			_lblVersion ;$/;"	m	class:CAboutDlg	file:
_mapColors	mate/ZernikeContext.h	/^    COLORREF    _mapColors[MAP_LEVEL_N] ;$/;"	m	class:CZernikeContext
_mapComa	mate/ZernikeContext.h	/^    int         _mapComa[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapCylOrd	mate/ZernikeContext.h	/^    int         _mapCylOrd[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapHighOrd	mate/ZernikeContext.h	/^    int         _mapHighOrd[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapHighVal	mate/ZernikeContext.h	/^    double      _mapHighVal[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapLowOrd	mate/ZernikeContext.h	/^    int         _mapLowOrd[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapLowVal	mate/ZernikeContext.h	/^    double      _mapLowVal[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapSphAbe	mate/ZernikeContext.h	/^    int         _mapSphAbe[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_mapSphOrd	mate/ZernikeContext.h	/^    int         _mapSphOrd[MAP_WIDTH][MAP_WIDTH] ;$/;"	m	class:CZernikeContext
_maxDpt	mate/ZernikeContext.h	/^    double      _maxDpt ;$/;"	m	class:CZernikeContext
_maxHigh	mate/ZernikeContext.h	/^    double      _maxHigh ;$/;"	m	class:CZernikeContext
_maxLow	mate/ZernikeContext.h	/^    double      _maxLow ;$/;"	m	class:CZernikeContext
_maxVal	mate/ZernikeContext.h	/^    double      _maxVal ;$/;"	m	class:CZernikeContext
_minDpt	mate/ZernikeContext.h	/^    double      _minDpt ;$/;"	m	class:CZernikeContext
_minHigh	mate/ZernikeContext.h	/^    double      _minHigh ;$/;"	m	class:CZernikeContext
_minLow	mate/ZernikeContext.h	/^    double      _minLow ;$/;"	m	class:CZernikeContext
_minVal	mate/ZernikeContext.h	/^    double      _minVal ;$/;"	m	class:CZernikeContext
_pView	mate/ZernikeWnd.h	/^	CZernikeView		*_pView ;$/;"	m	class:CZernikeWnd
_pZnCtx	mate/ZernikeView.h	/^	CZernikeContext			*_pZnCtx ;$/;"	m	class:CZernikeView
_patientID	mate/ZernikeContext.h	/^    int         _patientID ;$/;"	m	class:CZernikeContext
_printSize	mate/ZernikeView.h	/^    int                    _printSize ;$/;"	m	class:CZernikeView
_rms2ndAst	mate/ZernikeContext.h	/^    double      _rms2ndAst ;$/;"	m	class:CZernikeContext
_rmsAstigma	mate/ZernikeContext.h	/^    double      _rmsAstigma ;$/;"	m	class:CZernikeContext
_rmsComa	mate/ZernikeContext.h	/^    double      _rmsComa ;$/;"	m	class:CZernikeContext
_rmsDefocus	mate/ZernikeContext.h	/^    double      _rmsDefocus ;$/;"	m	class:CZernikeContext
_rmsHighOrd	mate/ZernikeContext.h	/^    double      _rmsHighOrd ;$/;"	m	class:CZernikeContext
_rmsLowOrd	mate/ZernikeContext.h	/^    double      _rmsLowOrd ;$/;"	m	class:CZernikeContext
_rmsOthers	mate/ZernikeContext.h	/^    double      _rmsOthers ;$/;"	m	class:CZernikeContext
_rmsSphAbe	mate/ZernikeContext.h	/^    double      _rmsSphAbe ;$/;"	m	class:CZernikeContext
_sph	mate/ZernikeContext.h	/^    float       _sph ;$/;"	m	class:CZernikeContext
_stBmpWnd	mate/ZernikeView.h	/^    CStatic                _stBmpWnd ;$/;"	m	class:CZernikeView
_stBtnBar1	mate/CDRMateView.h	/^	CStatic			_stBtnBar1 ;$/;"	m	class:CCDRMateView
_stBtnBar2	mate/CDRMateView.h	/^	CStatic			_stBtnBar2 ;$/;"	m	class:CCDRMateView
_stHLine1	mate/CDRMateView.h	/^	CStatic			_stHLine1 ;$/;"	m	class:CCDRMateView
_stHLine2	mate/CDRMateView.h	/^	CStatic			_stHLine2 ;$/;"	m	class:CCDRMateView
_stMenuBar	mate/CDRMateView.h	/^	CStatic			_stMenuBar ;$/;"	m	class:CCDRMateView
_stepNum	mate/ZernikeContext.h	/^    int         _stepNum ;$/;"	m	class:CZernikeContext
_stepVal	mate/ZernikeContext.h	/^    double      _stepVal ;$/;"	m	class:CZernikeContext
_textColor	mate/Lable.h	/^	COLORREF	_textColor ;$/;"	m	class:CLable
_toolTip	mate/CDRMateView.h	/^	CToolTipCtrl	_toolTip ;$/;"	m	class:CCDRMateView
_umRatio	mate/ZernikeContext.h	/^    double      _umRatio ;$/;"	m	class:CZernikeContext
add	inc/CDRType.h	/^	char			add[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
add	tmp/CDRType.h	/^	char			add[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
add_buf_list	buf_list.c	/^int add_buf_list(BUF_LIST *p, char *buf)$/;"	f
age	inc/CDRType.h	/^	char			age[FIELD_SIZE] ;			\/\/ {00-99}$/;"	m	struct:_PATIENT_DATA
age	tmp/CDRType.h	/^	char			age[FIELD_SIZE] ;			\/\/ {00-99}$/;"	m	struct:_PATIENT_DATA
alloc_entry	buf_list.c	/^static BUF_LIST_ENTRY * alloc_entry(char *buf)$/;"	f	file:
apparatus	inc/CDRType.h	/^	char			apparatus[FIELD_SIZE] ;$/;"	m	struct:_TRANS_END
apparatus	tmp/CDRType.h	/^	char			apparatus[FIELD_SIZE] ;$/;"	m	struct:_TRANS_END
auto_send_data	auto_send.c	/^int auto_send_data(int fd, char *name)$/;"	f
auto_write_session_data	cdr_session.c	/^int auto_write_session_data(void)$/;"	f
axs	inc/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
axs	inc/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
axs	inc/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
axs	inc/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
axs	inc/CDRType.h	/^	char		axs[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
axs	tmp/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
axs	tmp/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
axs	tmp/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
axs	tmp/CDRType.h	/^	char			axs[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
axs	tmp/CDRType.h	/^	char		axs[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
bFAddVA	inc/CDRType.h	/^	BOOL	bFAddVA ;$/;"	m	struct:_FIN_DATA
bFAddVA	inc/CDRType.h	/^	BOOL	bFAddVA ;$/;"	m	struct:_SUBJ_DATA
bFAddVA	tmp/CDRType.h	/^	BOOL	bFAddVA ;$/;"	m	struct:_FIN_DATA
bFAddVA	tmp/CDRType.h	/^	BOOL	bFAddVA ;$/;"	m	struct:_SUBJ_DATA
bFMain	inc/CDRType.h	/^	BOOL	bFMain ;$/;"	m	struct:_FIN_DATA
bFMain	inc/CDRType.h	/^	BOOL	bFMain ;$/;"	m	struct:_SUBJ_DATA
bFMain	tmp/CDRType.h	/^	BOOL	bFMain ;$/;"	m	struct:_FIN_DATA
bFMain	tmp/CDRType.h	/^	BOOL	bFMain ;$/;"	m	struct:_SUBJ_DATA
bFNRC	inc/CDRType.h	/^	BOOL	bFNRC ;$/;"	m	struct:_RC_TEST_DATA
bFNRC	tmp/CDRType.h	/^	BOOL	bFNRC ;$/;"	m	struct:_RC_TEST_DATA
bFPRC	inc/CDRType.h	/^	BOOL	bFPRC ;$/;"	m	struct:_RC_TEST_DATA
bFPRC	tmp/CDRType.h	/^	BOOL	bFPRC ;$/;"	m	struct:_RC_TEST_DATA
bFPrism	inc/CDRType.h	/^	BOOL	bFPrism[6] ;$/;"	m	struct:_PRISM_DATA
bFPrism	tmp/CDRType.h	/^	BOOL	bFPrism[6] ;$/;"	m	struct:_PRISM_DATA
bFVA	inc/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_FIN_DATA
bFVA	inc/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_SUBJ_DATA
bFVA	inc/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_UN_VA_DATA
bFVA	tmp/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_FIN_DATA
bFVA	tmp/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_SUBJ_DATA
bFVA	tmp/CDRType.h	/^	BOOL	bFVA ;$/;"	m	struct:_UN_VA_DATA
bLeft	inc/CDRType.h	/^	BOOL	bLeft ;$/;"	m	struct:_KER_DATA
bLeft	tmp/CDRType.h	/^	BOOL	bLeft ;$/;"	m	struct:_KER_DATA
bMain	inc/CDRType.h	/^	BOOL	bMain ;$/;"	m	struct:_LENS_DATA
bMain	tmp/CDRType.h	/^	BOOL	bMain ;$/;"	m	struct:_LENS_DATA
bNMain	inc/CDRType.h	/^	BOOL	bNMain ;$/;"	m	struct:_FIN_DATA
bNMain	inc/CDRType.h	/^	BOOL	bNMain ;$/;"	m	struct:_SUBJ_DATA
bNMain	tmp/CDRType.h	/^	BOOL	bNMain ;$/;"	m	struct:_FIN_DATA
bNMain	tmp/CDRType.h	/^	BOOL	bNMain ;$/;"	m	struct:_SUBJ_DATA
bNNRC	inc/CDRType.h	/^	BOOL	bNNRC ;$/;"	m	struct:_RC_TEST_DATA
bNNRC	tmp/CDRType.h	/^	BOOL	bNNRC ;$/;"	m	struct:_RC_TEST_DATA
bNPRC	inc/CDRType.h	/^	BOOL	bNPRC ;$/;"	m	struct:_RC_TEST_DATA
bNPRC	tmp/CDRType.h	/^	BOOL	bNPRC ;$/;"	m	struct:_RC_TEST_DATA
bNPrism	inc/CDRType.h	/^	BOOL	bNPrism[6] ;$/;"	m	struct:_PRISM_DATA
bNPrism	tmp/CDRType.h	/^	BOOL	bNPrism[6] ;$/;"	m	struct:_PRISM_DATA
bNVA	inc/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_FIN_DATA
bNVA	inc/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_SUBJ_DATA
bNVA	inc/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_UN_VA_DATA
bNVA	tmp/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_FIN_DATA
bNVA	tmp/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_SUBJ_DATA
bNVA	tmp/CDRType.h	/^	BOOL	bNVA ;$/;"	m	struct:_UN_VA_DATA
bRefr	inc/CDRType.h	/^	BOOL	bRefr ;$/;"	m	struct:_REFR_DATA
bRefr	tmp/CDRType.h	/^	BOOL	bRefr ;$/;"	m	struct:_REFR_DATA
bRetino	inc/CDRType.h	/^	BOOL		bRetino ;$/;"	m	struct:_RETINO_DATA
bRetino	tmp/CDRType.h	/^	BOOL		bRetino ;$/;"	m	struct:_RETINO_DATA
bRight	inc/CDRType.h	/^	BOOL	bRight ;$/;"	m	struct:_KER_DATA
bRight	tmp/CDRType.h	/^	BOOL	bRight ;$/;"	m	struct:_KER_DATA
bVA	inc/CDRType.h	/^	BOOL	bVA ;$/;"	m	struct:_LENS_DATA
bVA	tmp/CDRType.h	/^	BOOL	bVA ;$/;"	m	struct:_LENS_DATA
blur	inc/CDRType.h	/^	char			blur[FIELD_SIZE] ;$/;"	m	struct:_RA_DATA
blur	inc/CDRType.h	/^	char			blur[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
blur	tmp/CDRType.h	/^	char			blur[FIELD_SIZE] ;$/;"	m	struct:_RA_DATA
blur	tmp/CDRType.h	/^	char			blur[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
brk_cm	inc/CDRType.h	/^	char			brk_cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brk_cm	tmp/CDRType.h	/^	char			brk_cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brk_ma	inc/CDRType.h	/^	char			brk_ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brk_ma	tmp/CDRType.h	/^	char			brk_ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brk_prism	inc/CDRType.h	/^	char			brk_prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brk_prism	tmp/CDRType.h	/^	char			brk_prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
brushBlack	mate/Tabwnd.h	/^	CBrush brushBlack, brushWhite, brushLGray, brushDGray, brushText;$/;"	m	class:CTabWnd
brushDGray	mate/Tabwnd.h	/^	CBrush brushBlack, brushWhite, brushLGray, brushDGray, brushText;$/;"	m	class:CTabWnd
brushLGray	mate/Tabwnd.h	/^	CBrush brushBlack, brushWhite, brushLGray, brushDGray, brushText;$/;"	m	class:CTabWnd
brushText	mate/Tabwnd.h	/^	CBrush brushBlack, brushWhite, brushLGray, brushDGray, brushText;$/;"	m	class:CTabWnd
brushWhite	mate/Tabwnd.h	/^	CBrush brushBlack, brushWhite, brushLGray, brushDGray, brushText;$/;"	m	class:CTabWnd
buf	inc/buf_list.h	/^	char buf[0];$/;"	m	struct:buf_list_entry_rec
buf_list_entry_rec	inc/buf_list.h	/^typedef struct buf_list_entry_rec {$/;"	s
buf_list_rec	inc/buf_list.h	/^typedef struct buf_list_rec {$/;"	s
bvf	mate/CDRData.h	/^	BVF_TEST_DATA	bvf ;$/;"	m	class:CCDRData
bvf_test	inc/cdr_session.h	/^	struct _BVF_TEST_DATA	bvf_test ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_BVF_TEST_DATA
bvf_test	tmp/CDRSession.h	/^	struct _BVF_TEST_DATA	bvf_test ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_BVF_TEST_DATA
c_01	inc/CDRType.h	/^	char		c_01[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_01	tmp/CDRType.h	/^	char		c_01[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_02	inc/CDRType.h	/^	char		c_02[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_02	tmp/CDRType.h	/^	char		c_02[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_03	inc/CDRType.h	/^	char		c_03[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_03	tmp/CDRType.h	/^	char		c_03[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_04	inc/CDRType.h	/^	char		c_04[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_04	tmp/CDRType.h	/^	char		c_04[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_05	inc/CDRType.h	/^	char		c_05[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_05	tmp/CDRType.h	/^	char		c_05[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_06	inc/CDRType.h	/^	char		c_06[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_06	tmp/CDRType.h	/^	char		c_06[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_07	inc/CDRType.h	/^	char		c_07[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_07	tmp/CDRType.h	/^	char		c_07[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_08	inc/CDRType.h	/^	char		c_08[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_08	tmp/CDRType.h	/^	char		c_08[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_09	inc/CDRType.h	/^	char		c_09[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
c_09	tmp/CDRType.h	/^	char		c_09[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
calcZernikeMap	mate/ZernikeContext.cpp	/^void CZernikeContext::calcZernikeMap(int type)$/;"	f	class:CZernikeContext
calcZernikeRMS	mate/ZernikeContext.cpp	/^void CZernikeContext::calcZernikeRMS(void) $/;"	f	class:CZernikeContext
can_command	inc/CDRType.h	/^	char			can_command[FIELD_SIZE] ;		\/\/ {a-z}$/;"	m	struct:_CAN_HD
can_command	tmp/CDRType.h	/^	char			can_command[FIELD_SIZE] ;		\/\/ {a-z}$/;"	m	struct:_CAN_HD
can_data_size	inc/CDRType.h	/^	char			can_data_size[FIELD_SIZE] ;		\/\/ "$"$/;"	m	struct:_CAN_HD
can_data_size	tmp/CDRType.h	/^	char			can_data_size[FIELD_SIZE] ;		\/\/ "$"$/;"	m	struct:_CAN_HD
can_hd	mate/CDRData.h	/^	CAN_HD			can_hd ;$/;"	m	class:CCDRData
cdr_packet	inc/cdr_packet.h	/^struct cdr_packet {$/;"	s
cdr_packet_free	cdr_packet.c	/^void cdr_packet_free(struct cdr_packet *pkt)$/;"	f
cdr_packet_setup	cdr_packet.c	/^int cdr_packet_setup(struct cdr_packet *pkt, char *pData, int nSize)$/;"	f
cdr_session	inc/cdr_session.h	/^struct cdr_session {$/;"	s
check_cur_dir_conf	main.c	/^static int check_cur_dir_conf(void)$/;"	f	file:
check_file_ext	auto_send.c	/^static int check_file_ext(char *path)$/;"	f	file:
clSCOM	tmp/CDRDLL.cpp	/^CSerialComm					clSCOM ;$/;"	v
clm_data	inc/clm_data.h	/^struct clm_data {$/;"	s
clm_data_GetPacketStr	clm_data.c	/^int clm_data_GetPacketStr(char *buf, int buf_size, int nComputerNo, struct clm_data *plm)$/;"	f
clm_data_ImportFile	clm_data.c	/^BOOL clm_data_ImportFile(struct clm_data *plm, char *path)$/;"	f
close_serial_port	serial.c	/^int close_serial_port(void)$/;"	f
cm	inc/CDRType.h	/^	char			cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
cm	inc/CDRType.h	/^	char			cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
cm	tmp/CDRType.h	/^	char			cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
cm	tmp/CDRType.h	/^	char			cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
company	inc/CDRType.h	/^	char			company[FIELD_SIZE] ;$/;"	m	struct:_TRANS_END
company	tmp/CDRType.h	/^	char			company[FIELD_SIZE] ;$/;"	m	struct:_TRANS_END
company_info	inc/CDRType.h	/^	char			company_info[FIELD_SIZE] ;$/;"	m	struct:_HEADER
company_info	tmp/CDRType.h	/^	char			company_info[FIELD_SIZE] ;$/;"	m	struct:_HEADER
conf_path	conf.c	/^static char conf_path[1024];$/;"	v	file:
conf_rec	inc/conf.h	/^struct conf_rec {$/;"	s
connect_id	serial.c	/^	char connect_id[8+1];$/;"	m	struct:serial_rec	file:
crTransparent	mate/ButtonST.h	/^		COLORREF	crTransparent;	\/\/ Transparent color$/;"	m	struct:CButtonST::_STRUCT_BITMAPS
cyl	inc/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
cyl	inc/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
cyl	inc/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
cyl	inc/CDRType.h	/^	char		cyl[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
cyl	tmp/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
cyl	tmp/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
cyl	tmp/CDRType.h	/^	char			cyl[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
cyl	tmp/CDRType.h	/^	char		cyl[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
d	inc/CDRType.h	/^	char			d[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
d	inc/CDRType.h	/^	char			d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
d	tmp/CDRType.h	/^	char			d[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
d	tmp/CDRType.h	/^	char			d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
date	inc/CDRType.h	/^	char			date[FIELD_SIZE] ;$/;"	m	struct:_HEADER
date	tmp/CDRType.h	/^	char			date[FIELD_SIZE] ;$/;"	m	struct:_HEADER
delete_pid	main.c	/^static void delete_pid(void)$/;"	f	file:
doPrint	mate/ZernikeView.cpp	/^void CZernikeView::doPrint(void) $/;"	f	class:CZernikeView
domin_eye	inc/CDRType.h	/^	char			domin_eye[FIELD_SIZE] ;		\/\/ {L|R}$/;"	m	struct:_PATIENT_DATA
domin_eye	tmp/CDRType.h	/^	char			domin_eye[FIELD_SIZE] ;		\/\/ {L|R}$/;"	m	struct:_PATIENT_DATA
drawTitle	mate/ZernikeView.cpp	/^void CZernikeView::drawTitle(CDC *pDC, int sx, int sy, int width, int height, BOOL bInit) $/;"	f	class:CZernikeView
drawZernikeMap	mate/ZernikeView.cpp	/^void CZernikeView::drawZernikeMap(CDC *pDC, int sx, int sy, int width, int height, int type, BOOL bInit) $/;"	f	class:CZernikeView
dump_BVF_DATA	data_dump.c	/^void dump_BVF_DATA(BVF_DATA *p, int indent) $/;"	f
dump_BVF_TEST_DATA	data_dump.c	/^void dump_BVF_TEST_DATA(BVF_TEST_DATA *p, int indent) $/;"	f
dump_COEFF_DATA	data_dump.c	/^void dump_COEFF_DATA(COEFF_DATA *p, int indent)$/;"	f
dump_FIN_DATA	data_dump.c	/^void dump_FIN_DATA(FIN_DATA *p, int indent)$/;"	f
dump_HEADER	data_dump.c	/^void dump_HEADER(HEADER *p, int indent)$/;"	f
dump_KER_DATA	data_dump.c	/^void dump_KER_DATA(KER_DATA *p, int indent)$/;"	f
dump_KR_DATA	data_dump.c	/^void dump_KR_DATA(KR_DATA *p, int indent)$/;"	f
dump_LENS_DATA	data_dump.c	/^void dump_LENS_DATA (LENS_DATA *p, int indent)$/;"	f
dump_M_DATA	data_dump.c	/^void dump_M_DATA(M_DATA *p, int indent)$/;"	f
dump_M_N_DATA	data_dump.c	/^void dump_M_N_DATA(M_N_DATA *p, int indent)$/;"	f
dump_NPA_DATA	data_dump.c	/^void dump_NPA_DATA(NPA_DATA *p, int indent)$/;"	f
dump_NPC_DATA	data_dump.c	/^void dump_NPC_DATA(NPC_DATA *p, int indent)$/;"	f
dump_NP_RA_DATA	data_dump.c	/^void dump_NP_RA_DATA(NP_RA_DATA *p, int indent)$/;"	f
dump_PATIENT_DATA	data_dump.c	/^void dump_PATIENT_DATA (PATIENT_DATA *p, int indent)$/;"	f
dump_PRISM_DATA	data_dump.c	/^void dump_PRISM_DATA(PRISM_DATA *p, int indent)$/;"	f
dump_P_DATA	data_dump.c	/^void dump_P_DATA(P_DATA *p, int indent)$/;"	f
dump_RA_DATA	data_dump.c	/^void dump_RA_DATA(RA_DATA *p, int indent)$/;"	f
dump_RC_DATA	data_dump.c	/^void dump_RC_DATA(RC_DATA *p, int indent)$/;"	f
dump_RC_TEST_DATA	data_dump.c	/^void dump_RC_TEST_DATA(RC_TEST_DATA *p, int indent)$/;"	f
dump_REFR_DATA	data_dump.c	/^void dump_REFR_DATA(REFR_DATA *p, int indent) $/;"	f
dump_RETINO_DATA	data_dump.c	/^void dump_RETINO_DATA(RETINO_DATA *p, int indent)$/;"	f
dump_SCA_DATA	data_dump.c	/^void dump_SCA_DATA(SCA_DATA *p, int indent)$/;"	f
dump_SUBJ_DATA	data_dump.c	/^void dump_SUBJ_DATA(SUBJ_DATA *p, int indent)$/;"	f
dump_UN_VA_DATA	data_dump.c	/^void dump_UN_VA_DATA(UN_VA_DATA *p, int indent)$/;"	f
dump_VA_DATA	data_dump.c	/^void dump_VA_DATA(VA_DATA *p, int indent) $/;"	f
dump_ZERNIKE_DATA	data_dump.c	/^void dump_ZERNIKE_DATA(ZERNIKE_DATA *p, int indent)$/;"	f
dump_clm_data	data_dump.c	/^void dump_clm_data(struct clm_data *p, int indent)$/;"	f
dump_mrk_data	data_dump.c	/^void dump_mrk_data(struct mrk_data *p, int indent)$/;"	f
dwFlags	mate/ButtonST.h	/^		DWORD		dwFlags;$/;"	m	struct:CButtonST::_STRUCT_SOUND
dwHeight	mate/ButtonST.h	/^		DWORD		dwHeight;		\/\/ Height of bitmap$/;"	m	struct:CButtonST::_STRUCT_BITMAPS
dwHeight	mate/ButtonST.h	/^		DWORD		dwHeight;		\/\/ Height of icon$/;"	m	struct:CButtonST::_STRUCT_ICONS
dwWidth	mate/ButtonST.h	/^		DWORD		dwWidth;		\/\/ Width of bitmap$/;"	m	struct:CButtonST::_STRUCT_BITMAPS
dwWidth	mate/ButtonST.h	/^		DWORD		dwWidth;		\/\/ Width of icon$/;"	m	struct:CButtonST::_STRUCT_ICONS
error_list	inc/main.h	/^enum error_list {$/;"	g
extract_str	clm_data.c	/^int extract_str(char *src, char *target, int target_size)$/;"	f
f_addva	inc/CDRType.h	/^	struct _VA_DATA		f_addva ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
f_addva	inc/CDRType.h	/^	struct _VA_DATA		f_addva ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
f_addva	tmp/CDRType.h	/^	struct _VA_DATA		f_addva ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
f_addva	tmp/CDRType.h	/^	struct _VA_DATA		f_addva ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
f_bvf	inc/CDRType.h	/^	struct _BVF_DATA	f_bvf ;$/;"	m	struct:_BVF_TEST_DATA	typeref:struct:_BVF_TEST_DATA::_BVF_DATA
f_bvf	tmp/CDRType.h	/^	struct _BVF_DATA	f_bvf ;$/;"	m	struct:_BVF_TEST_DATA	typeref:struct:_BVF_TEST_DATA::_BVF_DATA
f_l_main	inc/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_DATA
f_l_main	inc/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_M_DATA
f_l_main	inc/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_DATA
f_l_main	tmp/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_DATA
f_l_main	tmp/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_M_DATA
f_l_main	tmp/CDRType.h	/^	struct _M_DATA		f_l_main ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_DATA
f_l_sca	inc/CDRType.h	/^	struct _SCA_DATA	f_l_sca ;$/;"	m	struct:_REFR_DATA	typeref:struct:_REFR_DATA::_SCA_DATA
f_l_sca	inc/CDRType.h	/^	struct _SCA_DATA	f_l_sca ;$/;"	m	struct:_RETINO_DATA	typeref:struct:_RETINO_DATA::_SCA_DATA
f_l_sca	tmp/CDRType.h	/^	struct _SCA_DATA	f_l_sca ;$/;"	m	struct:_REFR_DATA	typeref:struct:_REFR_DATA::_SCA_DATA
f_l_sca	tmp/CDRType.h	/^	struct _SCA_DATA	f_l_sca ;$/;"	m	struct:_RETINO_DATA	typeref:struct:_RETINO_DATA::_SCA_DATA
f_nrc	inc/CDRType.h	/^	struct _RC_DATA		f_nrc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
f_nrc	tmp/CDRType.h	/^	struct _RC_DATA		f_nrc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
f_prc	inc/CDRType.h	/^	struct _RC_DATA		f_prc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
f_prc	tmp/CDRType.h	/^	struct _RC_DATA		f_prc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
f_prism_l	inc/CDRType.h	/^	struct _P_DATA		f_prism_l[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
f_prism_l	tmp/CDRType.h	/^	struct _P_DATA		f_prism_l[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
f_prism_r	inc/CDRType.h	/^	struct _P_DATA		f_prism_r[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
f_prism_r	tmp/CDRType.h	/^	struct _P_DATA		f_prism_r[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
f_r_main	inc/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_DATA
f_r_main	inc/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_M_DATA
f_r_main	inc/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_DATA
f_r_main	tmp/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_DATA
f_r_main	tmp/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_M_DATA
f_r_main	tmp/CDRType.h	/^	struct _M_DATA		f_r_main ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_DATA
f_r_sca	inc/CDRType.h	/^	struct _SCA_DATA	f_r_sca ;$/;"	m	struct:_REFR_DATA	typeref:struct:_REFR_DATA::_SCA_DATA
f_r_sca	inc/CDRType.h	/^	struct _SCA_DATA	f_r_sca ;$/;"	m	struct:_RETINO_DATA	typeref:struct:_RETINO_DATA::_SCA_DATA
f_r_sca	tmp/CDRType.h	/^	struct _SCA_DATA	f_r_sca ;$/;"	m	struct:_REFR_DATA	typeref:struct:_REFR_DATA::_SCA_DATA
f_r_sca	tmp/CDRType.h	/^	struct _SCA_DATA	f_r_sca ;$/;"	m	struct:_RETINO_DATA	typeref:struct:_RETINO_DATA::_SCA_DATA
f_va	inc/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
f_va	inc/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_VA_DATA
f_va	inc/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
f_va	inc/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_UN_VA_DATA	typeref:struct:_UN_VA_DATA::_VA_DATA
f_va	tmp/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
f_va	tmp/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_LENS_DATA	typeref:struct:_LENS_DATA::_VA_DATA
f_va	tmp/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
f_va	tmp/CDRType.h	/^	struct _VA_DATA		f_va ;$/;"	m	struct:_UN_VA_DATA	typeref:struct:_UN_VA_DATA::_VA_DATA
fd	serial.c	/^	int fd;$/;"	m	struct:serial_rec	file:
fd_monitor	inc/main.h	/^	int fd_monitor;$/;"	m	struct:serial_receiver_param
fd_serial	inc/main.h	/^	int fd_serial;$/;"	m	struct:serial_receiver_param
file_move	auto_send.c	/^static int file_move(char *src, char *dest)$/;"	f	file:
fin	inc/cdr_session.h	/^	struct _FIN_DATA		fin ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_FIN_DATA
fin	mate/CDRData.h	/^	FIN_DATA		fin ;$/;"	m	class:CCDRData
fin	tmp/CDRSession.h	/^	struct _FIN_DATA		fin ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_FIN_DATA
flag	inc/conf.h	/^	int flag;$/;"	m	struct:conf_rec
flag	serial.c	/^	int flag;$/;"	m	struct:serial_rec	file:
free_buf_list	buf_list.c	/^void free_buf_list(BUF_LIST *plist)$/;"	f
fusion	inc/CDRType.h	/^	char			fusion[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
fusion	tmp/CDRType.h	/^	char			fusion[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
g_bSupportExcel	mate/MainFrm.cpp	/^BOOL			g_bSupportExcel = FALSE ;$/;"	v
g_bSupportWord	mate/MainFrm.cpp	/^BOOL			g_bSupportWord = FALSE ;$/;"	v
g_nErrCode	mate/Error.cpp	/^int		g_nErrCode ;		\/\/ global error code. $/;"	v
g_serial	serial.c	/^} g_serial;$/;"	v	typeref:struct:serial_rec
g_session	cdr_session.c	/^struct cdr_session g_session;$/;"	v	typeref:struct:cdr_session
g_szErrStr	mate/Error.cpp	/^char	g_szErrStr[1024] ;	\/\/ global error string. $/;"	v
getView	mate/Tabwnd.cpp	/^CWnd * CTabWnd::getView(int pos)$/;"	f	class:CTabWnd
get_buf_list	buf_list.c	/^int get_buf_list(BUF_LIST *plist, char *buf, int buf_size)$/;"	f
get_clm_field_ptr	clm_data.c	/^static char * get_clm_field_ptr(struct clm_data *plm, int idx)$/;"	f	file:
get_connect_id_str	serial.c	/^char * get_connect_id_str(void)$/;"	f
get_mrk_field_ptr	mrk_data.c	/^static char * get_mrk_field_ptr(struct mrk_data *pmrk, int idx)$/;"	f	file:
geti	inc/minIni.h	/^  long geti(const std::string& Section, const std::string& Key, int DefValue=0) const$/;"	f	class:minIni
getl	inc/minIni.h	/^  long getl(const std::string& Section, const std::string& Key, long DefValue=0) const$/;"	f	class:minIni
gets	inc/minIni.h	/^  std::string gets(const std::string& Section, const std::string& Key, const std::string& DefValue="") const$/;"	f	class:minIni
global_conf	conf.c	/^struct conf_rec global_conf;$/;"	v	typeref:struct:conf_rec
global_flag	main.c	/^int global_flag = 0;$/;"	v
hBitmap	mate/ButtonST.h	/^		HBITMAP		hBitmap;		\/\/ Handle to bitmap$/;"	m	struct:CButtonST::_STRUCT_BITMAPS
hIcon	mate/ButtonST.h	/^		HICON		hIcon;			\/\/ Handle to icon$/;"	m	struct:CButtonST::_STRUCT_ICONS
hMask	mate/ButtonST.h	/^		HBITMAP		hMask;			\/\/ Handle to mask bitmap$/;"	m	struct:CButtonST::_STRUCT_BITMAPS
hMod	mate/ButtonST.h	/^		HMODULE		hMod;$/;"	m	struct:CButtonST::_STRUCT_SOUND
hWnd	mate/ButtonST.h	/^		HWND		hWnd;			\/\/ Handle to window$/;"	m	struct:CButtonST::_STRUCT_CALLBACK
h_max	inc/CDRType.h	/^	char		h_max[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
h_max	tmp/CDRType.h	/^	char		h_max[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
h_min	inc/CDRType.h	/^	char		h_min[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
h_min	tmp/CDRType.h	/^	char		h_min[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
handle_console	console.c	/^int handle_console(char *buf, int args)$/;"	f
handle_dir_monitor	inotify.c	/^void handle_dir_monitor(int fd, BUF_LIST *plist)$/;"	f
handle_serial_data	raw_packet.c	/^int handle_serial_data(int fd, BUF_LIST *plist)$/;"	f
head	inc/buf_list.h	/^	struct list_head head;$/;"	m	struct:buf_list_rec	typeref:struct:buf_list_rec::list_head
header	inc/cdr_session.h	/^	struct _HEADER			header ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_HEADER
header	mate/CDRData.h	/^	HEADER			header ;$/;"	m	class:CCDRData
header	tmp/CDRSession.h	/^	struct _HEADER			header ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_HEADER
horiz	inc/CDRType.h	/^	char			horiz[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
horiz	tmp/CDRType.h	/^	char			horiz[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
indicators	mate/MainFrm.cpp	/^static UINT indicators[] =$/;"	v	file:
iniFilename	inc/minIni.h	/^    std::string iniFilename;$/;"	m	class:minIni
ini_close	inc/minGlue.h	27;"	d
ini_openread	inc/minGlue.h	25;"	d
ini_openwrite	inc/minGlue.h	26;"	d
ini_read	inc/minGlue.h	28;"	d
ini_remove	inc/minGlue.h	31;"	d
ini_rename	inc/minGlue.h	30;"	d
ini_rewind	inc/minGlue.h	32;"	d
ini_write	inc/minGlue.h	29;"	d
initMapColors	mate/ZernikeContext.cpp	/^void CZernikeContext::initMapColors(void) $/;"	f	class:CZernikeContext
initThis	mate/ZernikeContext.cpp	/^void CZernikeContext::initThis(void) $/;"	f	class:CZernikeContext
init_buf_list	buf_list.c	/^void init_buf_list(BUF_LIST *p)$/;"	f
init_dir_monitor	inotify.c	/^int init_dir_monitor(char *path)$/;"	f
internal_buf	raw_packet.c	/^static char internal_buf[MAX_BUF * 2];$/;"	v	file:
internal_buf_pos	raw_packet.c	/^static int internal_buf_pos = 0;$/;"	v	file:
isLeft	inc/CDRType.h	/^	BOOL		isLeft ;$/;"	m	struct:_ZERNIKE_DATA
isLeft	tmp/CDRType.h	/^	BOOL		isLeft ;$/;"	m	struct:_ZERNIKE_DATA
isRight	inc/CDRType.h	/^	BOOL		isRight ;$/;"	m	struct:_ZERNIKE_DATA
isRight	tmp/CDRType.h	/^	BOOL		isRight ;$/;"	m	struct:_ZERNIKE_DATA
is_session_completed	cdr_session.c	/^BOOL is_session_completed(void)$/;"	f
is_slave_mode	main.c	/^int is_slave_mode(void)$/;"	f
ker	inc/cdr_session.h	/^	struct _KER_DATA		ker ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_KER_DATA
ker	mate/CDRData.h	/^	KER_DATA		ker ;$/;"	m	class:CCDRData
ker	tmp/CDRSession.h	/^	struct _KER_DATA		ker ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_KER_DATA
lParam	mate/ButtonST.h	/^		LPARAM		lParam;$/;"	m	struct:CButtonST::_STRUCT_CALLBACK
l_cm	inc/CDRType.h	/^	char			l_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
l_cm	tmp/CDRType.h	/^	char			l_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
l_d	inc/CDRType.h	/^	char			l_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
l_d	tmp/CDRType.h	/^	char			l_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
l_eye	inc/CDRType.h	/^	struct _COEFF_DATA		l_eye ;$/;"	m	struct:_ZERNIKE_DATA	typeref:struct:_ZERNIKE_DATA::_COEFF_DATA
l_eye	tmp/CDRType.h	/^	struct _COEFF_DATA		l_eye ;$/;"	m	struct:_ZERNIKE_DATA	typeref:struct:_ZERNIKE_DATA::_COEFF_DATA
l_max	inc/CDRType.h	/^	char		l_max[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
l_max	tmp/CDRType.h	/^	char		l_max[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
l_min	inc/CDRType.h	/^	char		l_min[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
l_min	tmp/CDRType.h	/^	char		l_min[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
l_va	inc/CDRType.h	/^	char			l_va[FIELD_SIZE] ;$/;"	m	struct:_VA_DATA
l_va	tmp/CDRType.h	/^	char			l_va[FIELD_SIZE] ;$/;"	m	struct:_VA_DATA
lens	inc/cdr_session.h	/^	struct _LENS_DATA		lens ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_LENS_DATA
lens	mate/CDRData.h	/^	LENS_DATA		lens ;$/;"	m	class:CCDRData
lens	tmp/CDRSession.h	/^	struct _LENS_DATA		lens ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_LENS_DATA
list	inc/buf_list.h	/^	struct list_head list;$/;"	m	struct:buf_list_entry_rec	typeref:struct:buf_list_entry_rec::list_head
list_add	inc/list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	inc/list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	inc/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_del_init	inc/list.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f
list_empty	inc/list.h	/^static inline int list_empty(struct list_head *head)$/;"	f
list_entry	inc/list.h	189;"	d
list_for_each	inc/list.h	197;"	d
list_for_each_entry	inc/list.h	225;"	d
list_for_each_entry_safe	inc/list.h	237;"	d
list_for_each_prev	inc/list.h	205;"	d
list_for_each_safe	inc/list.h	215;"	d
list_head	inc/list.h	/^struct list_head {$/;"	s
list_move	inc/list.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f
list_move_tail	inc/list.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f
list_splice	inc/list.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f
list_splice_init	inc/list.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f
load_conf	conf.c	/^int load_conf(void)$/;"	f
lower_case	auto_send.c	/^static void lower_case(char *str)$/;"	f	file:
lpszSound	mate/ButtonST.h	/^		LPCTSTR		lpszSound;$/;"	m	struct:CButtonST::_STRUCT_SOUND
ltrim	manual_send.c	/^static void ltrim(char *buf)$/;"	f	file:
m_DefaultMenuItemByPos	mate/SystemTray.h	/^    BOOL         m_DefaultMenuItemByPos;$/;"	m	class:CSystemTray
m_DefaultMenuItemID	mate/SystemTray.h	/^    UINT         m_DefaultMenuItemID;$/;"	m	class:CSystemTray
m_IDI	mate/DeviceDrawInfo.h	/^	CItemDrawInfo	m_IDI[ITM_TOTAL_NUM] ;$/;"	m	class:CDeviceDrawInfo
m_IDI	mate/OfficeDrawInfo.h	/^	CItemDrawInfo	m_IDI[ITM_TOTAL_NUM] ;$/;"	m	class:COfficeDrawInfo
m_IconList	mate/SystemTray.h	/^    CArray<HICON, HICON> m_IconList;$/;"	m	class:CSystemTray
m_Ker	inc/mrk_data.h	/^	KER_DATA		m_Ker ;$/;"	m	struct:mrk_data
m_Ker	mate/MRKData.h	/^	KER_DATA		m_Ker ;$/;"	m	class:CMRKData
m_Lens	inc/clm_data.h	/^	LENS_DATA m_Lens;$/;"	m	struct:clm_data
m_Lens	mate/CLMData.h	/^	LENS_DATA		m_Lens ;$/;"	m	class:CCLMData
m_Refr	inc/mrk_data.h	/^	REFR_DATA		m_Refr ;$/;"	m	struct:mrk_data
m_Refr	mate/MRKData.h	/^	REFR_DATA		m_Refr ;$/;"	m	class:CMRKData
m_StartTime	mate/SystemTray.h	/^    COleDateTime m_StartTime;$/;"	m	class:CSystemTray
m_ToolTip	mate/ButtonST.h	/^	CToolTipCtrl m_ToolTip;			\/\/ Tooltip$/;"	m	class:CButtonST
m_appExcel	mate/OfficeDrawInfo.h	/^	_ApplicationExcel	m_appExcel ;$/;"	m	class:COfficeDrawInfo
m_appWord	mate/OfficeDrawInfo.h	/^	_ApplicationWord	m_appWord ;$/;"	m	class:COfficeDrawInfo
m_arCDRData	mate/CDRMateView.h	/^	CPtrArray		m_arCDRData ;$/;"	m	class:CCDRMateView
m_arDelFilePath	mate/CDRMateView.h	/^	CStringArray	m_arDelFilePath ;		\/\/ path of the deleted import files. $/;"	m	class:CCDRMateView
m_arDelFileTime	mate/CDRMateView.h	/^	CStringArray	m_arDelFileTime ;		\/\/ creation time of the deleted import files. $/;"	m	class:CCDRMateView
m_arFields	mate/CLMData.h	/^	CStringArray	m_arFields ;$/;"	m	class:CCLMData
m_arFields	mate/MRKData.h	/^	CStringArray	m_arFields ;$/;"	m	class:CMRKData
m_arImportFilePath	mate/CDRMateView.h	/^	CStringArray	m_arImportFilePath ;	\/\/ path of the imported files. $/;"	m	class:CCDRMateView
m_arImportFileTime	mate/CDRMateView.h	/^	CStringArray	m_arImportFileTime ;$/;"	m	class:CCDRMateView
m_arRcvDataDesc	inc/cdr_session.h	/^	BOOL					m_arRcvDataDesc[DATA_DESC_N] ;$/;"	m	struct:cdr_session
m_arRcvDataDesc	tmp/CDRSession.h	/^	BOOL					m_arRcvDataDesc[DATA_DESC_N] ;$/;"	m	class:CCDRSession
m_arSelected	mate/PrintPage.h	/^	CUIntArray	m_arSelected ;$/;"	m	class:CPrintPage
m_arSelectedItem	mate/SetupInfo.h	/^	int			m_arSelectedItem[ITM_TOTAL_NUM] ;$/;"	m	class:CSetupInfo
m_arUnselected	mate/PrintPage.h	/^	CUIntArray	m_arUnselected ;$/;"	m	class:CPrintPage
m_arUnselectedItem	mate/SetupInfo.h	/^	int			m_arUnselectedItem[ITM_TOTAL_NUM] ;$/;"	m	class:CSetupInfo
m_bAlwaysTrack	mate/ButtonST.h	/^	BOOL		m_bAlwaysTrack;		\/\/ Always hilight button?$/;"	m	class:CButtonST
m_bAutoConnect	mate/ConnectPage.h	/^	BOOL	m_bAutoConnect;$/;"	m	class:CConnectPage
m_bAutoConnect	mate/SetupInfo.h	/^	BOOL		m_bAutoConnect ;$/;"	m	class:CSetupInfo
m_bAutoExport	mate/AdvancedDlg.h	/^	BOOL	m_bAutoExport ;$/;"	m	class:CAdvancedDlg
m_bAutoExport	mate/GeneralPage.h	/^	BOOL	m_bAutoExport ;$/;"	m	class:CGeneralPage
m_bAutoExport	mate/SetupInfo.h	/^	BOOL		m_bAutoExport ;$/;"	m	class:CSetupInfo
m_bAutoPrint	mate/GeneralPage.h	/^	BOOL	m_bAutoPrint ;$/;"	m	class:CGeneralPage
m_bAutoPrint	mate/SetupInfo.h	/^	BOOL		m_bAutoPrint ;$/;"	m	class:CSetupInfo
m_bAutoStartup	mate/ConnectPage.h	/^	BOOL	m_bAutoStartup;$/;"	m	class:CConnectPage
m_bAutoStartup	mate/SetupInfo.h	/^	BOOL		m_bAutoStartup ;$/;"	m	class:CSetupInfo
m_bAutoTransfer	mate/GeneralPage.h	/^	BOOL	m_bAutoTransfer ;$/;"	m	class:CGeneralPage
m_bAutoTransfer	mate/SetupInfo.h	/^	BOOL		m_bAutoTransfer ;$/;"	m	class:CSetupInfo
m_bCompleted	inc/cdr_session.h	/^	BOOL					m_bCompleted ;$/;"	m	struct:cdr_session
m_bCompleted	tmp/CDRSession.h	/^	BOOL					m_bCompleted ;$/;"	m	class:CCDRSession
m_bConnected	mate/CDROpPannel.h	/^	BOOL		m_bConnected ;$/;"	m	class:CCDROpPannel
m_bConnected	tmp/SerialComm.h	/^	BOOL				m_bConnected ;$/;"	m	class:CSerialComm
m_bCreateSubFolder	mate/AdvancedDlg.h	/^	BOOL	m_bCreateSubFolder ;$/;"	m	class:CAdvancedDlg
m_bCreateSubFolder	mate/GeneralPage.h	/^	BOOL	m_bCreateSubFolder ;$/;"	m	class:CGeneralPage
m_bCreateSubFolder	mate/SetupInfo.h	/^	BOOL		m_bCreateSubFolder ;$/;"	m	class:CSetupInfo
m_bDrawBorder	mate/ButtonST.h	/^	BOOL		m_bDrawBorder;		\/\/ Draw border?$/;"	m	class:CButtonST
m_bDrawFlatFocus	mate/ButtonST.h	/^	BOOL		m_bDrawFlatFocus;	\/\/ Draw focus rectangle for flat button?$/;"	m	class:CButtonST
m_bDrawTransparent	mate/ButtonST.h	/^	BOOL		m_bDrawTransparent;	\/\/ Draw transparent?$/;"	m	class:CButtonST
m_bEnabled	mate/SystemTray.h	/^    BOOL            m_bEnabled;   \/\/ does O\/S support tray icon?$/;"	m	class:CSystemTray
m_bExcelApp	mate/OfficeDrawInfo.h	/^	BOOL			m_bExcelApp ;$/;"	m	class:COfficeDrawInfo
m_bFH	mate/PatientHistory.h	/^	BOOL	m_bFH, m_bMC, m_bMH, m_bOC, m_bVR ;$/;"	m	class:CPatientHistory
m_bFamilyHistory	mate/AdvancedDlg.h	/^	BOOL	m_bFamilyHistory;$/;"	m	class:CAdvancedDlg
m_bFamilyHistory	mate/GeneralPage.h	/^	BOOL	m_bFamilyHistory;$/;"	m	class:CGeneralPage
m_bFamilyHistory	mate/SetupInfo.h	/^	BOOL		m_bFamilyHistory ;$/;"	m	class:CSetupInfo
m_bHalfPage	mate/DeviceDrawInfo.h	/^	BOOL		m_bHalfPage ;		\/\/ print 2 pages per 1 paper. $/;"	m	class:CDeviceDrawInfo
m_bHidden	mate/SystemTray.h	/^    BOOL            m_bHidden;    \/\/ Has the icon been hidden?$/;"	m	class:CSystemTray
m_bHistoryInput	mate/AdvancedDlg.h	/^	BOOL	m_bHistoryInput;$/;"	m	class:CAdvancedDlg
m_bHistoryInput	mate/GeneralPage.h	/^	BOOL	m_bHistoryInput;$/;"	m	class:CGeneralPage
m_bHistoryInput	mate/SetupInfo.h	/^	BOOL		m_bHistoryInput ;$/;"	m	class:CSetupInfo
m_bIsCheckBox	mate/ButtonST.h	/^	BOOL		m_bIsCheckBox;		\/\/ Is the button a checkbox?$/;"	m	class:CButtonST
m_bIsDefault	mate/ButtonST.h	/^	BOOL		m_bIsDefault;		\/\/ Is default button?$/;"	m	class:CButtonST
m_bIsDisabled	mate/ButtonST.h	/^	BOOL		m_bIsDisabled;		\/\/ Is button disabled?$/;"	m	class:CButtonST
m_bIsFlat	mate/ButtonST.h	/^	BOOL		m_bIsFlat;			\/\/ Is a flat button?$/;"	m	class:CButtonST
m_bIsFocused	mate/ButtonST.h	/^	BOOL		m_bIsFocused;		\/\/ Is button focused?$/;"	m	class:CButtonST
m_bIsPressed	mate/ButtonST.h	/^	BOOL		m_bIsPressed;		\/\/ Is button pressed?$/;"	m	class:CButtonST
m_bLock	mate/Tabwnd.h	/^	BOOL m_bLock;$/;"	m	class:CTabWnd
m_bMC	mate/PatientHistory.h	/^	BOOL	m_bFH, m_bMC, m_bMH, m_bOC, m_bVR ;$/;"	m	class:CPatientHistory
m_bMH	mate/PatientHistory.h	/^	BOOL	m_bFH, m_bMC, m_bMH, m_bOC, m_bVR ;$/;"	m	class:CPatientHistory
m_bMajorComplaints	mate/AdvancedDlg.h	/^	BOOL	m_bMajorComplaints;$/;"	m	class:CAdvancedDlg
m_bMajorComplaints	mate/GeneralPage.h	/^	BOOL	m_bMajorComplaints;$/;"	m	class:CGeneralPage
m_bMajorComplaints	mate/SetupInfo.h	/^	BOOL		m_bMajorComplaints ;$/;"	m	class:CSetupInfo
m_bMedicalHistory	mate/AdvancedDlg.h	/^	BOOL	m_bMedicalHistory;$/;"	m	class:CAdvancedDlg
m_bMedicalHistory	mate/GeneralPage.h	/^	BOOL	m_bMedicalHistory;$/;"	m	class:CGeneralPage
m_bMedicalHistory	mate/SetupInfo.h	/^	BOOL		m_bMedicalHistory ;$/;"	m	class:CSetupInfo
m_bMenuDisplayed	mate/ButtonST.h	/^	BOOL		m_bMenuDisplayed;	\/\/ Is menu displayed ?$/;"	m	class:CButtonST
m_bMinimized	mate/MainFrm.h	/^	BOOL			m_bMinimized ;$/;"	m	class:CMainFrame
m_bMouseOnButton	mate/ButtonST.h	/^	BOOL		m_bMouseOnButton;	\/\/ Is mouse over the button?$/;"	m	class:CButtonST
m_bOC	mate/PatientHistory.h	/^	BOOL	m_bFH, m_bMC, m_bMH, m_bOC, m_bVR ;$/;"	m	class:CPatientHistory
m_bOtherComments	mate/AdvancedDlg.h	/^	BOOL	m_bOtherComments;$/;"	m	class:CAdvancedDlg
m_bOtherComments	mate/GeneralPage.h	/^	BOOL	m_bOtherComments;$/;"	m	class:CGeneralPage
m_bOtherComments	mate/SetupInfo.h	/^	BOOL		m_bOtherComments ;$/;"	m	class:CSetupInfo
m_bPatientHistory	mate/CDRData.h	/^	BOOL			m_bPatientHistory ;$/;"	m	class:CCDRData
m_bPrtcVerErr	inc/cdr_session.h	/^	BOOL					m_bPrtcVerErr ;$/;"	m	struct:cdr_session
m_bPrtcVerErr	tmp/CDRSession.h	/^	BOOL					m_bPrtcVerErr ;$/;"	m	class:CCDRSession
m_bShowDisabledBitmap	mate/ButtonST.h	/^	BOOL	m_bShowDisabledBitmap;$/;"	m	class:CButtonST
m_bUsing	mate/AppLogFile.h	/^	BOOL		m_bUsing ;$/;"	m	class:CAppLogFile
m_bVR	mate/PatientHistory.h	/^	BOOL	m_bFH, m_bMC, m_bMH, m_bOC, m_bVR ;$/;"	m	class:CPatientHistory
m_bValidImportPath	mate/CDRMateView.h	/^	BOOL			m_bValidImportPath ;	\/\/ the import directory is valid?$/;"	m	class:CCDRMateView
m_bVisionRequirement	mate/AdvancedDlg.h	/^	BOOL	m_bVisionRequirement;$/;"	m	class:CAdvancedDlg
m_bVisionRequirement	mate/GeneralPage.h	/^	BOOL	m_bVisionRequirement;$/;"	m	class:CGeneralPage
m_bVisionRequirement	mate/SetupInfo.h	/^	BOOL		m_bVisionRequirement ;$/;"	m	class:CSetupInfo
m_bWordApp	mate/OfficeDrawInfo.h	/^	BOOL			m_bWordApp ;$/;"	m	class:COfficeDrawInfo
m_bWritable	tmp/LogTracer.h	/^	BOOL			m_bWritable ;						\/\/ any output stream is opened. $/;"	m	class:CLogTracer
m_bmpBk	mate/ButtonST.h	/^	CBitmap		m_bmpBk;$/;"	m	class:CButtonST
m_book	mate/OfficeDrawInfo.h	/^	_Workbook		m_book ;$/;"	m	class:COfficeDrawInfo
m_btnDelete	mate/CDRMateView.h	/^	CXTButton	m_btnDelete;$/;"	m	class:CCDRMateView
m_btnExport	mate/CDRMateView.h	/^	CXTButton	m_btnExport;$/;"	m	class:CCDRMateView
m_btnPrint	mate/CDRMateView.h	/^	CXTButton	m_btnPrint;$/;"	m	class:CCDRMateView
m_btnSend	mate/CDRMateView.h	/^	CXTButton	m_btnSend;$/;"	m	class:CCDRMateView
m_btnView	mate/CDRMateView.h	/^	CXTButton	m_btnView;$/;"	m	class:CCDRMateView
m_byAlign	mate/ButtonST.h	/^	BYTE		m_byAlign;			\/\/ Align mode$/;"	m	class:CButtonST
m_byByteSize	tmp/SerialComm.h	/^	BYTE				m_byByteSize ;$/;"	m	class:CSerialComm
m_byParity	tmp/SerialComm.h	/^	BYTE				m_byParity ;$/;"	m	class:CSerialComm
m_byStopBits	tmp/SerialComm.h	/^	BYTE				m_byStopBits ;$/;"	m	class:CSerialComm
m_cOpPannel	mate/MainFrm.h	/^	CCDROpPannel	m_cOpPannel ;$/;"	m	class:CMainFrame
m_cSetupInfo	mate/MainFrm.h	/^	CSetupInfo		m_cSetupInfo ;$/;"	m	class:CMainFrame
m_cSndNodeID	inc/cdr_packet.h	/^	char			m_cSndNodeID ;$/;"	m	struct:cdr_packet
m_cSndNodeID	tmp/CDRPacket.h	/^	char			m_cSndNodeID ;$/;"	m	class:CCDRPacket
m_cSndSysID	inc/cdr_packet.h	/^	char			m_cSndSysID ;$/;"	m	struct:cdr_packet
m_cSndSysID	tmp/CDRPacket.h	/^	char			m_cSndSysID ;$/;"	m	class:CCDRPacket
m_clCDRData	mate/DataFrm.h	/^	CCDRData				m_clCDRData ;$/;"	m	class:CDataFrm
m_clCLMData	mate/DataFrm.h	/^	CCLMData				m_clCLMData ;$/;"	m	class:CDataFrm
m_clMRKData	mate/DataFrm.h	/^	CMRKData				m_clMRKData ;$/;"	m	class:CDataFrm
m_clPack	tmp/CDRSession.h	/^	CCDRPacket				m_clPack ;$/;"	m	class:CCDRSession
m_clSess	tmp/SerialComm.h	/^	CCDRSession			m_clSess ;$/;"	m	class:CSerialComm
m_clSessLast	tmp/SerialComm.h	/^	CCDRSession			m_clSessLast ;$/;"	m	class:CSerialComm
m_crColors	mate/ButtonST.h	/^	COLORREF	m_crColors[BTNST_MAX_COLORS];	\/\/ Colors to be used$/;"	m	class:CButtonST
m_csBitmaps	mate/ButtonST.h	/^	STRUCT_BITMAPS	m_csBitmaps[2];$/;"	m	class:CButtonST
m_csCallbacks	mate/ButtonST.h	/^	STRUCT_CALLBACK	m_csCallbacks;$/;"	m	class:CButtonST
m_csIcons	mate/ButtonST.h	/^	STRUCT_ICONS	m_csIcons[2];$/;"	m	class:CButtonST
m_csLock	tmp/LogTracer.h	/^	CRITICAL_SECTION	m_csLock ;						\/\/ for thread safe. $/;"	m	class:CLogTracer
m_csLock	tmp/SerialComm.h	/^	CRITICAL_SECTION	m_csLock ;$/;"	m	class:CSerialComm
m_csSounds	mate/ButtonST.h	/^	STRUCT_SOUND	m_csSounds[2];	\/\/ Index 0 = Over	1 = Clicked$/;"	m	class:CButtonST
m_dcBk	mate/ButtonST.h	/^	CDC			m_dcBk;$/;"	m	class:CButtonST
m_doc	mate/OfficeDrawInfo.h	/^	_Document		m_doc ;$/;"	m	class:COfficeDrawInfo
m_dwBaudRate	mate/CDROpPannel.h	/^	DWORD		m_dwBaudRate ;$/;"	m	class:CCDROpPannel
m_dwBaudRate	tmp/SerialComm.h	/^	DWORD				m_dwBaudRate ;$/;"	m	class:CSerialComm
m_dwMsgThreadId	tmp/SerialComm.h	/^	DWORD				m_dwMsgThreadId ;$/;"	m	class:CSerialComm
m_dwRcvThreadId	tmp/SerialComm.h	/^	DWORD				m_dwRcvThreadId ;$/;"	m	class:CSerialComm
m_dwSndThreadId	tmp/SerialComm.h	/^	DWORD				m_dwSndThreadId ;$/;"	m	class:CSerialComm
m_dwStyle	mate/Tabwnd.h	/^	UINT m_dwStyle;$/;"	m	class:CTabWnd
m_dwToolTipStyle	mate/ButtonST.h	/^	DWORD		m_dwToolTipStyle;	\/\/ Style of tooltip control$/;"	m	class:CButtonST
m_fLog	mate/AppLogFile.h	/^	CFile		m_fLog ;$/;"	m	class:CAppLogFile
m_font	mate/OfficeDrawInfo.h	/^	_Font			m_font ;$/;"	m	class:COfficeDrawInfo
m_hCommPort	tmp/SerialComm.h	/^	HANDLE				m_hCommPort ;$/;"	m	class:CSerialComm
m_hCursor	mate/ButtonST.h	/^	HCURSOR		m_hCursor;			\/\/ Handle to cursor$/;"	m	class:CButtonST
m_hDataRx	tmp/SerialComm.h	/^	HANDLE				m_hDataRx ;$/;"	m	class:CSerialComm
m_hDataTx	tmp/SerialComm.h	/^	HANDLE				m_hDataTx ;$/;"	m	class:CSerialComm
m_hFile	tmp/LogTracer.h	/^	HANDLE			m_hFile ;$/;"	m	class:CLogTracer
m_hMenu	mate/ButtonST.h	/^	HMENU		m_hMenu;			\/\/ Handle to associated menu$/;"	m	class:CButtonST
m_hMsgThread	tmp/SerialComm.h	/^	HANDLE				m_hMsgThread ;$/;"	m	class:CSerialComm
m_hMsgThreadStarted	tmp/SerialComm.h	/^	HANDLE				m_hMsgThreadStarted ;$/;"	m	class:CSerialComm
m_hMsgThreadTerm	tmp/SerialComm.h	/^	HANDLE				m_hMsgThreadTerm ;$/;"	m	class:CSerialComm
m_hNotifyWnd	tmp/SerialComm.h	/^	HWND				m_hNotifyWnd ;$/;"	m	class:CSerialComm
m_hParentWndMenu	mate/ButtonST.h	/^	HWND		m_hParentWndMenu;	\/\/ Handle to window for menu selection$/;"	m	class:CButtonST
m_hRcvThread	tmp/SerialComm.h	/^	HANDLE				m_hRcvThread ;$/;"	m	class:CSerialComm
m_hRcvThreadStarted	tmp/SerialComm.h	/^	HANDLE				m_hRcvThreadStarted ;$/;"	m	class:CSerialComm
m_hRcvThreadTerm	tmp/SerialComm.h	/^	HANDLE				m_hRcvThreadTerm ;$/;"	m	class:CSerialComm
m_hSavedIcon	mate/SystemTray.h	/^    HICON        m_hSavedIcon;$/;"	m	class:CSystemTray
m_hSndThread	tmp/SerialComm.h	/^	HANDLE				m_hSndThread ;$/;"	m	class:CSerialComm
m_hSndThreadStarted	tmp/SerialComm.h	/^	HANDLE				m_hSndThreadStarted ;$/;"	m	class:CSerialComm
m_hSndThreadTerm	tmp/SerialComm.h	/^	HANDLE				m_hSndThreadTerm ;$/;"	m	class:CSerialComm
m_hTrayIcon	mate/MainFrm.h	/^	HICON			m_hTrayIcon ;$/;"	m	class:CMainFrame
m_hTrayIcon2	mate/MainFrm.h	/^	HICON			m_hTrayIcon2 ;$/;"	m	class:CMainFrame
m_lPrtcVer	mate/CDRData.h	/^	long			m_lPrtcVer ;	\/\/ protocol version.$/;"	m	class:CCDRData
m_lSessNo	mate/CDRData.h	/^	long			m_lSessNo ;		\/\/ session no. $/;"	m	class:CCDRData
m_lstPrintable	mate/PrintPage.h	/^	CListCtrl	m_lstPrintable;$/;"	m	class:CPrintPage
m_lstReceiver	mate/CDRMateView.h	/^	CXTListCtrl	m_lstReceiver;$/;"	m	class:CCDRMateView
m_lstSelected	mate/PrintPage.h	/^	CListCtrl	m_lstSelected;$/;"	m	class:CPrintPage
m_lstTransfer	mate/CDRMateView.h	/^	CXTListCtrl	m_lstTransfer;$/;"	m	class:CCDRMateView
m_menuPopup	mate/ButtonST.h	/^	BCMenu		m_menuPopup;		\/\/ BCMenu class instance$/;"	m	class:CButtonST
m_mergedCols	mate/OfficeDrawInfo.h	/^	CUIntArray		m_mergedCols ;$/;"	m	class:COfficeDrawInfo
m_mergedRows	mate/OfficeDrawInfo.h	/^	CUIntArray		m_mergedRows ;$/;"	m	class:COfficeDrawInfo
m_nAnimationPeriod	mate/SystemTray.h	/^    int          m_nAnimationPeriod;$/;"	m	class:CSystemTray
m_nBaudRate	mate/ConnectPage.h	/^	int		m_nBaudRate;$/;"	m	class:CConnectPage
m_nBaudRate	mate/SetupInfo.h	/^	int			m_nBaudRate ;$/;"	m	class:CSetupInfo
m_nCharWidth	mate/DeviceDrawInfo.h	/^	int			m_nCharWidth ;$/;"	m	class:CDeviceDrawInfo
m_nCheck	mate/ButtonST.h	/^	int			m_nCheck;			\/\/ Current value for checkbox$/;"	m	class:CButtonST
m_nColSpace	mate/DeviceDrawInfo.h	/^	int			m_nColSpace ;		\/\/ the interval between columns. $/;"	m	class:CDeviceDrawInfo
m_nColWidth	mate/DeviceDrawInfo.h	/^	int			m_nColWidth ;		\/\/ the column width is fixed size. $/;"	m	class:CDeviceDrawInfo
m_nColumn	mate/ItemDrawInfo.h	/^	int			m_nColumn ;$/;"	m	class:CItemDrawInfo
m_nComputer	mate/ConnectPage.h	/^	int		m_nComputer;$/;"	m	class:CConnectPage
m_nComputerId	mate/SetupInfo.h	/^	int			m_nComputerId ;$/;"	m	class:CSetupInfo
m_nConnectTarget	mate/ConnectPage.h	/^	int		m_nConnectTarget ;$/;"	m	class:CConnectPage
m_nConnectTarget	mate/SetupInfo.h	/^	int			m_nConnectTarget ;$/;"	m	class:CSetupInfo
m_nCurRow	mate/OfficeDrawInfo.h	/^	int				m_nCurRow ;$/;"	m	class:COfficeDrawInfo
m_nCurrentIcon	mate/SystemTray.h	/^    int          m_nCurrentIcon;$/;"	m	class:CSystemTray
m_nCurrentLine	mate/DeviceDrawInfo.h	/^	int			m_nCurrentLine ;	\/\/ the current drawing line. $/;"	m	class:CDeviceDrawInfo
m_nCurrentPage	mate/DeviceDrawInfo.h	/^	int			m_nCurrentPage ;	\/\/ the current page no. $/;"	m	class:CDeviceDrawInfo
m_nCurrentTab	mate/CDRMateView.h	/^	int				m_nCurrentTab ;$/;"	m	class:CCDRMateView
m_nDataFormat	mate/OfficeDrawInfo.h	/^	int				m_nDataFormat ;$/;"	m	class:COfficeDrawInfo
m_nDataView	mate/DeviceDrawInfo.h	/^	int			m_nDataView ;		$/;"	m	class:CDeviceDrawInfo
m_nDataView	mate/OfficeDrawInfo.h	/^	int				m_nDataView ;$/;"	m	class:COfficeDrawInfo
m_nDataWidth	mate/DeviceDrawInfo.h	/^	int			m_nDataWidth ;		\/\/ data drawing with in column. $/;"	m	class:CDeviceDrawInfo
m_nDelRecordInRecv	mate/SetupInfo.h	/^	int			m_nDelRecordInRecv ;$/;"	m	class:CSetupInfo
m_nDelRecordInTrans	mate/SetupInfo.h	/^	int			m_nDelRecordInTrans ;$/;"	m	class:CSetupInfo
m_nDeleteRecv	mate/GeneralPage.h	/^	int		m_nDeleteRecv;$/;"	m	class:CGeneralPage
m_nDeleteTrans	mate/GeneralPage.h	/^	int		m_nDeleteTrans;$/;"	m	class:CGeneralPage
m_nDeviceMode	mate/DeviceDrawInfo.h	/^	int			m_nDeviceMode ;		\/\/ the device type for drawing. $/;"	m	class:CDeviceDrawInfo
m_nDrawItem	mate/DeviceDrawInfo.h	/^	int			m_nDrawItem ;		\/\/ the item number for drawing. $/;"	m	class:CDeviceDrawInfo
m_nErrVersion	inc/cdr_session.h	/^	int						m_nErrVersion ;$/;"	m	struct:cdr_session
m_nErrVersion	tmp/CDRSession.h	/^	int						m_nErrVersion ;$/;"	m	class:CCDRSession
m_nExportType	mate/AdvancedDlg.h	/^	int		m_nExportType;$/;"	m	class:CAdvancedDlg
m_nExportType	mate/GeneralPage.h	/^	int		m_nExportType;$/;"	m	class:CGeneralPage
m_nExportType	mate/SetupInfo.h	/^	int			m_nExportType ;$/;"	m	class:CSetupInfo
m_nFavoredSysID	inc/cdr_session.h	/^	int						m_nFavoredSysID ;					\/\/ 0 ~ 7.$/;"	m	struct:cdr_session
m_nFavoredSysID	tmp/CDRSession.h	/^	int						m_nFavoredSysID ;					\/\/ 0 ~ 7.$/;"	m	class:CCDRSession
m_nFileCreation	mate/AdvancedDlg.h	/^	int		m_nFileCreation;$/;"	m	class:CAdvancedDlg
m_nFileCreation	mate/GeneralPage.h	/^	int		m_nFileCreation;$/;"	m	class:CGeneralPage
m_nFileCreation	mate/SetupInfo.h	/^	int			m_nFileCreation ;$/;"	m	class:CSetupInfo
m_nFileCreation2	mate/AdvancedDlg.h	/^	int		m_nFileCreation2;$/;"	m	class:CAdvancedDlg
m_nFileCreation2	mate/GeneralPage.h	/^	int		m_nFileCreation2;$/;"	m	class:CGeneralPage
m_nFileCreation2	mate/SetupInfo.h	/^	int			m_nFileCreation2 ;$/;"	m	class:CSetupInfo
m_nFldPos	inc/cdr_packet.h	/^	int				m_nFldPos ;$/;"	m	struct:cdr_packet
m_nFldPos	tmp/CDRPacket.h	/^	int				m_nFldPos ;$/;"	m	class:CCDRPacket
m_nFontSize	mate/PrintPage.h	/^	int		m_nFontSize;$/;"	m	class:CPrintPage
m_nFontSize	mate/SetupInfo.h	/^	int			m_nFontSize ;$/;"	m	class:CSetupInfo
m_nFooterLine	mate/DeviceDrawInfo.h	/^	int			m_nFooterLine ;		\/\/ lines for page footer. $/;"	m	class:CDeviceDrawInfo
m_nGender	mate/PatientHistory.h	/^	int		m_nGender ;$/;"	m	class:CPatientHistory
m_nHeaderLine	mate/DeviceDrawInfo.h	/^	int			m_nHeaderLine ;		\/\/ lines for page header. $/;"	m	class:CDeviceDrawInfo
m_nHorzMargin	mate/DeviceDrawInfo.h	/^	int			m_nHorzMargin ;$/;"	m	class:CDeviceDrawInfo
m_nIDEvent	mate/SystemTray.cpp	/^UINT CSystemTray::m_nIDEvent = 4567;$/;"	m	class:CSystemTray	file:
m_nIDEvent	mate/SystemTray.h	/^    static UINT  m_nIDEvent;$/;"	m	class:CSystemTray
m_nIndentLeft	mate/DeviceDrawInfo.h	/^	int			m_nIndentLeft ;		\/\/ left indentation size in column. $/;"	m	class:CDeviceDrawInfo
m_nIndentRight	mate/DeviceDrawInfo.h	/^	int			m_nIndentRight ;	\/\/ right indentation size in column. $/;"	m	class:CDeviceDrawInfo
m_nItemNo	mate/ItemDrawInfo.h	/^	int			m_nItemNo ;$/;"	m	class:CItemDrawInfo
m_nItemNum	mate/OfficeDrawInfo.h	/^	int				m_nItemNum ;$/;"	m	class:COfficeDrawInfo
m_nLineHeight	mate/DeviceDrawInfo.h	/^	int			m_nLineHeight ;$/;"	m	class:CDeviceDrawInfo
m_nLineNum	mate/ItemDrawInfo.h	/^	int			m_nLineNum ;$/;"	m	class:CItemDrawInfo
m_nLinePerPage	mate/DeviceDrawInfo.h	/^	int			m_nLinePerPage ;$/;"	m	class:CDeviceDrawInfo
m_nListSizeInRecv	mate/SetupInfo.h	/^	int			m_nListSizeInRecv ;$/;"	m	class:CSetupInfo
m_nListSizeInTrans	mate/SetupInfo.h	/^	int			m_nListSizeInTrans ;$/;"	m	class:CSetupInfo
m_nPageHeight	mate/DeviceDrawInfo.h	/^	int			m_nPageHeight ;		\/\/ page height excluding vertical margins. $/;"	m	class:CDeviceDrawInfo
m_nPageNo	mate/ItemDrawInfo.h	/^	int			m_nPageNo ;$/;"	m	class:CItemDrawInfo
m_nPageWidth	mate/DeviceDrawInfo.h	/^	int			m_nPageWidth ;		\/\/ page width excluding horizontal margins. $/;"	m	class:CDeviceDrawInfo
m_nPaperDirection	mate/PrintPage.h	/^	int		m_nPaperDirection ;$/;"	m	class:CPrintPage
m_nPaperDirection	mate/SetupInfo.h	/^	int			m_nPaperDirection ;$/;"	m	class:CSetupInfo
m_nPaperHeight	mate/DeviceDrawInfo.h	/^	int			m_nPaperHeight ;	\/\/ paper height in pixels. $/;"	m	class:CDeviceDrawInfo
m_nPaperSize	mate/PrintPage.h	/^	int		m_nPaperSize ;$/;"	m	class:CPrintPage
m_nPaperSize	mate/SetupInfo.h	/^	int			m_nPaperSize ;$/;"	m	class:CSetupInfo
m_nPaperWidth	mate/DeviceDrawInfo.h	/^	int			m_nPaperWidth ;		\/\/ paper width in pixels. $/;"	m	class:CDeviceDrawInfo
m_nPatientGender	mate/CDRData.h	/^	int				m_nPatientGender ;$/;"	m	class:CCDRData
m_nPort	mate/CDROpPannel.h	/^	int			m_nPort ;$/;"	m	class:CCDROpPannel
m_nPort	mate/ConnectPage.h	/^	int		m_nPort;$/;"	m	class:CConnectPage
m_nPortNo	mate/SetupInfo.h	/^	int			m_nPortNo ;$/;"	m	class:CSetupInfo
m_nPrintAlign	mate/PrintPage.h	/^	int		m_nPrintAlign;$/;"	m	class:CPrintPage
m_nPrintAlignment	mate/SetupInfo.h	/^	int			m_nPrintAlignment ;$/;"	m	class:CSetupInfo
m_nPrintEmptyData	mate/PrintPage.h	/^	int		m_nPrintEmptyData ;$/;"	m	class:CPrintPage
m_nPrintEmptyData	mate/SetupInfo.h	/^	int			m_nPrintEmptyData ;$/;"	m	class:CSetupInfo
m_nPrintMode	mate/DeviceDrawInfo.h	/^	BOOL		m_nPrintMode ;		$/;"	m	class:CDeviceDrawInfo
m_nPrintMode	mate/PrintPage.h	/^	int		m_nPrintMode;$/;"	m	class:CPrintPage
m_nPrintMode	mate/SetupInfo.h	/^	int			m_nPrintMode ;$/;"	m	class:CSetupInfo
m_nProtocolVer	inc/cdr_packet.h	/^	int m_nProtocolVer;$/;"	m	struct:cdr_packet
m_nProtocolVer	inc/cdr_session.h	/^	int						m_nProtocolVer ;$/;"	m	struct:cdr_session
m_nProtocolVer	mate/ConnectPage.h	/^	int		m_nProtocolVer;$/;"	m	class:CConnectPage
m_nProtocolVer	mate/SetupInfo.h	/^	int			m_nProtocolVer ;$/;"	m	class:CSetupInfo
m_nProtocolVer	tmp/CDRPacket.h	/^	int				m_nProtocolVer ;$/;"	m	class:CCDRPacket
m_nProtocolVer	tmp/CDRSession.h	/^	int						m_nProtocolVer ;$/;"	m	class:CCDRSession
m_nPrtcVer	tmp/SerialComm.h	/^	int					m_nPrtcVer ;$/;"	m	class:CSerialComm
m_nRcvBytes	tmp/SerialComm.h	/^	int					m_nRcvBytes ;$/;"	m	class:CSerialComm
m_nSelectedItem	mate/SetupInfo.h	/^	int			m_nSelectedItem ;$/;"	m	class:CSetupInfo
m_nSelection	mate/ImportDlg.h	/^	int				m_nSelection ;$/;"	m	class:CImportDlg
m_nSize	inc/cdr_packet.h	/^	int				m_nSize ;$/;"	m	struct:cdr_packet
m_nSize	tmp/CDRPacket.h	/^	int				m_nSize ;$/;"	m	class:CCDRPacket
m_nSizeRecv	mate/GeneralPage.h	/^	int		m_nSizeRecv;$/;"	m	class:CGeneralPage
m_nSizeTrans	mate/GeneralPage.h	/^	int		m_nSizeTrans;$/;"	m	class:CGeneralPage
m_nSndBytes	tmp/SerialComm.h	/^	int					m_nSndBytes ;$/;"	m	class:CSerialComm
m_nStartLine	mate/ItemDrawInfo.h	/^	int			m_nStartLine ;$/;"	m	class:CItemDrawInfo
m_nSubFolder	mate/AdvancedDlg.h	/^	int		m_nSubFolder;$/;"	m	class:CAdvancedDlg
m_nSubFolder	mate/GeneralPage.h	/^	int		m_nSubFolder;$/;"	m	class:CGeneralPage
m_nSubFolder	mate/SetupInfo.h	/^	int			m_nSubFolder ;$/;"	m	class:CSetupInfo
m_nSystemID	inc/cdr_packet.h	/^	int				m_nSystemID ;$/;"	m	struct:cdr_packet
m_nSystemID	mate/ConnectPage.h	/^	int		m_nSystemID;$/;"	m	class:CConnectPage
m_nSystemID	mate/SetupInfo.h	/^	int			m_nSystemID ;$/;"	m	class:CSetupInfo
m_nSystemID	tmp/CDRPacket.h	/^	int				m_nSystemID ;$/;"	m	class:CCDRPacket
m_nTitleLine	mate/DeviceDrawInfo.h	/^	int			m_nTitleLine ;		\/\/ lines for the first page's title. $/;"	m	class:CDeviceDrawInfo
m_nTotalHeight	mate/DeviceDrawInfo.h	/^	int			m_nTotalHeight ;	\/\/ the total height for scroll. $/;"	m	class:CDeviceDrawInfo
m_nTrayNotifyMsg	mate/MainFrm.h	/^	int				m_nTrayNotifyMsg ;$/;"	m	class:CMainFrame
m_nTypeStyle	mate/ButtonST.h	/^	UINT		m_nTypeStyle;		\/\/ Button style$/;"	m	class:CButtonST
m_nUnselectedItem	mate/SetupInfo.h	/^	int			m_nUnselectedItem ;$/;"	m	class:CSetupInfo
m_nVertMargin	mate/DeviceDrawInfo.h	/^	int			m_nVertMargin ;$/;"	m	class:CDeviceDrawInfo
m_nWidth	mate/ItemDrawInfo.h	/^	int			m_nWidth ;$/;"	m	class:CItemDrawInfo
m_nWordVer	mate/OfficeDrawInfo.h	/^	int				m_nWordVer ;$/;"	m	class:COfficeDrawInfo
m_pBoldFont	mate/Tabwnd.h	/^	CFont *m_pFont, *m_pBoldFont;$/;"	m	class:CTabWnd
m_pCDRData	mate/DeviceDrawInfo.h	/^	CCDRData	*m_pCDRData ;$/;"	m	class:CDeviceDrawInfo
m_pCDRData	mate/OfficeDrawInfo.h	/^	CCDRData		*m_pCDRData ;$/;"	m	class:COfficeDrawInfo
m_pCLMData	mate/DeviceDrawInfo.h	/^	CCLMData	*m_pCLMData ;$/;"	m	class:CDeviceDrawInfo
m_pCLMData	mate/OfficeDrawInfo.h	/^	CCLMData		*m_pCLMData ;$/;"	m	class:COfficeDrawInfo
m_pDDI	mate/DataView.h	/^	CDeviceDrawInfo	*m_pDDI ;$/;"	m	class:CDataView
m_pDDIPrint	mate/DataFrm.h	/^	CDeviceDrawInfo			*m_pDDIPrint ;$/;"	m	class:CDataFrm
m_pDDIView	mate/DataFrm.h	/^	CDeviceDrawInfo			*m_pDDIView ;$/;"	m	class:CDataFrm
m_pData	inc/cdr_packet.h	/^	char*			m_pData ;$/;"	m	struct:cdr_packet
m_pData	mate/ItemDrawInfo.h	/^	void		*m_pData ;$/;"	m	class:CItemDrawInfo
m_pData	tmp/CDRPacket.h	/^	char*			m_pData ;$/;"	m	class:CCDRPacket
m_pDataView	mate/DataFrm.h	/^	CDataView				*m_pDataView ;$/;"	m	class:CDataFrm
m_pFont	mate/Tabwnd.h	/^	CFont *m_pFont, *m_pBoldFont;$/;"	m	class:CTabWnd
m_pFontB	mate/DeviceDrawInfo.h	/^	CFont		*m_pFontB ;			\/\/ font bold. $/;"	m	class:CDeviceDrawInfo
m_pFontN	mate/DeviceDrawInfo.h	/^	CFont		*m_pFontN ;			\/\/ font normal. $/;"	m	class:CDeviceDrawInfo
m_pMRKData	mate/DeviceDrawInfo.h	/^	CMRKData	*m_pMRKData ;$/;"	m	class:CDeviceDrawInfo
m_pMRKData	mate/OfficeDrawInfo.h	/^	CMRKData		*m_pMRKData ;$/;"	m	class:COfficeDrawInfo
m_pOpPannel	mate/CDRMateView.h	/^	CCDROpPannel	*m_pOpPannel ;$/;"	m	class:CCDRMateView
m_pRcvBuff	tmp/SerialComm.h	/^	char*				m_pRcvBuff ;$/;"	m	class:CSerialComm
m_pSetupInfo	mate/CDRMateView.h	/^	CSetupInfo		*m_pSetupInfo ;$/;"	m	class:CCDRMateView
m_pSetupInfo	mate/DeviceDrawInfo.h	/^	CSetupInfo	*m_pSetupInfo ;$/;"	m	class:CDeviceDrawInfo
m_pSetupInfo	mate/OfficeDrawInfo.h	/^	CSetupInfo		*m_pSetupInfo ;$/;"	m	class:COfficeDrawInfo
m_pSysTray	mate/MainFrm.h	/^	CSystemTray		*m_pSysTray ;$/;"	m	class:CMainFrame
m_pageConnect	mate/SetupInfo.h	/^	CConnectPage	*m_pageConnect ;$/;"	m	class:CSetupInfo
m_pageGeneral	mate/SetupInfo.h	/^	CGeneralPage	*m_pageGeneral ;$/;"	m	class:CSetupInfo
m_pagePrint	mate/SetupInfo.h	/^	CPrintPage		*m_pagePrint ;$/;"	m	class:CSetupInfo
m_pbmpOldBk	mate/ButtonST.h	/^	CBitmap*	m_pbmpOldBk;$/;"	m	class:CButtonST
m_pdcPrinter	mate/DeviceDrawInfo.h	/^	CDC			*m_pdcPrinter ;		\/\/ printer device context. $/;"	m	class:CDeviceDrawInfo
m_propSetup	mate/SetupInfo.h	/^	CSetupSheet		*m_propSetup ;$/;"	m	class:CSetupInfo
m_ptImageOrg	mate/ButtonST.h	/^	POINT	m_ptImageOrg;$/;"	m	class:CButtonST
m_ptPagePos	mate/DeviceDrawInfo.h	/^	CPoint		m_ptPagePos[2] ;	\/\/ starting position of the page. $/;"	m	class:CDeviceDrawInfo
m_ptPressedOffset	mate/ButtonST.h	/^	POINT	m_ptPressedOffset;$/;"	m	class:CButtonST
m_sAge	mate/PatientHistory.h	/^	CString	m_sAge;$/;"	m	class:CPatientHistory
m_sConnectID	tmp/SerialComm.h	/^	char				m_sConnectID[32] ;$/;"	m	class:CSerialComm
m_sDataNo	inc/clm_data.h	/^	char m_sDataNo[FIELD_SIZE];$/;"	m	struct:clm_data
m_sDataNo	inc/mrk_data.h	/^	char m_sDataNo[FIELD_SIZE] ;$/;"	m	struct:mrk_data
m_sDataNo	mate/CLMData.h	/^	CString			m_sDataNo ;$/;"	m	class:CCLMData
m_sDataNo	mate/MRKData.h	/^	CString			m_sDataNo ;$/;"	m	class:CMRKData
m_sDataNum	mate/ImportDlg.h	/^	CString	m_sDataNum;$/;"	m	class:CImportDlg
m_sDate	mate/CLMData.h	/^	CString			m_sDate ;$/;"	m	class:CCLMData
m_sDate	mate/MRKData.h	/^	CString			m_sDate ;$/;"	m	class:CMRKData
m_sDesc	inc/cdr_packet.h	/^	char			m_sDesc[5] ;$/;"	m	struct:cdr_packet
m_sDesc	tmp/CDRPacket.h	/^	char			m_sDesc[5] ;$/;"	m	class:CCDRPacket
m_sExePath	mate/CDRMateView.h	/^	CString			m_sExePath ;$/;"	m	class:CCDRMateView
m_sExportDir	mate/GeneralPage.h	/^	CString	m_sExportDir;$/;"	m	class:CGeneralPage
m_sExportDir	mate/SetupInfo.h	/^	CString		m_sExportDir ;$/;"	m	class:CSetupInfo
m_sFamilyHistory	mate/CDRData.h	/^	CString			m_sFamilyHistory ;$/;"	m	class:CCDRData
m_sFamilyHistory	mate/PatientHistory.h	/^	CString	m_sFamilyHistory;$/;"	m	class:CPatientHistory
m_sFileName	mate/AdvancedDlg.h	/^	CString	m_sFileName;$/;"	m	class:CAdvancedDlg
m_sFileName	mate/AppLogFile.h	/^	CString		m_sFileName ;$/;"	m	class:CAppLogFile
m_sFileName	mate/CDRData.h	/^	CString			m_sFileName ;$/;"	m	class:CCDRData
m_sFileName	mate/GeneralPage.h	/^	CString	m_sFileName;$/;"	m	class:CGeneralPage
m_sFileName	mate/SetupInfo.h	/^	CString		m_sFileName ;$/;"	m	class:CSetupInfo
m_sFilePath	mate/CDRData.h	/^	CString			m_sFilePath ;$/;"	m	class:CCDRData
m_sImportDir	mate/GeneralPage.h	/^	CString	m_sImportDir;$/;"	m	class:CGeneralPage
m_sImportDir	mate/SetupInfo.h	/^	CString		m_sImportDir ;$/;"	m	class:CSetupInfo
m_sItemName	mate/ItemDrawInfo.h	/^	CString		m_sItemName ;$/;"	m	class:CItemDrawInfo
m_sLogPath	mate/AppLogFile.h	/^	CString		m_sLogPath ;$/;"	m	class:CAppLogFile
m_sMajorComplaints	mate/CDRData.h	/^	CString			m_sMajorComplaints ;$/;"	m	class:CCDRData
m_sMajorComplaints	mate/PatientHistory.h	/^	CString	m_sMajorComplaints;$/;"	m	class:CPatientHistory
m_sManualExportDir	mate/AdvancedDlg.h	/^	CString	m_sManualExportDir;$/;"	m	class:CAdvancedDlg
m_sManualExportDir	mate/GeneralPage.h	/^	CString	m_sManualExportDir ;$/;"	m	class:CGeneralPage
m_sManualExportDir	mate/SetupInfo.h	/^	CString		m_sManualExportDir ;$/;"	m	class:CSetupInfo
m_sMedicalHistory	mate/CDRData.h	/^	CString			m_sMedicalHistory ;$/;"	m	class:CCDRData
m_sMedicalHistory	mate/PatientHistory.h	/^	CString	m_sMedicalHistory;$/;"	m	class:CPatientHistory
m_sName	mate/PatientHistory.h	/^	CString	m_sName;$/;"	m	class:CPatientHistory
m_sOtherComments	mate/CDRData.h	/^	CString			m_sOtherComments ;$/;"	m	class:CCDRData
m_sOtherComments	mate/PatientHistory.h	/^	CString	m_sOtherComments;$/;"	m	class:CPatientHistory
m_sPD	inc/clm_data.h	/^	char m_sPD[FIELD_SIZE];$/;"	m	struct:clm_data
m_sPD	inc/mrk_data.h	/^	char m_sPD[FIELD_SIZE];$/;"	m	struct:mrk_data
m_sPD	mate/CLMData.h	/^	CString			m_sPD ;$/;"	m	class:CCLMData
m_sPD	mate/MRKData.h	/^	CString			m_sPD ;$/;"	m	class:CMRKData
m_sPacket	mate/CLMData.h	/^	CString			m_sPacket ;$/;"	m	class:CCLMData
m_sPacket	mate/MRKData.h	/^	CString			m_sPacket ;$/;"	m	class:CMRKData
m_sPath	mate/CLMData.h	/^	CString			m_sPath ;$/;"	m	class:CCLMData
m_sPath	mate/MRKData.h	/^	CString			m_sPath ;$/;"	m	class:CMRKData
m_sPatientAge	mate/CDRData.h	/^	CString			m_sPatientAge ;$/;"	m	class:CCDRData
m_sPatientName	mate/CDRData.h	/^	CString			m_sPatientName ;$/;"	m	class:CCDRData
m_sPort	tmp/SerialComm.h	/^	char				m_sPort[32] ;$/;"	m	class:CSerialComm
m_sSessID	mate/CDRData.h	/^	CString			m_sSessID ;		\/\/ session id. $/;"	m	class:CCDRData
m_sType	mate/ImportDlg.h	/^	CString	m_sType;$/;"	m	class:CImportDlg
m_sVisionRequirement	mate/CDRData.h	/^	CString			m_sVisionRequirement ;$/;"	m	class:CCDRData
m_sVisionRequirement	mate/PatientHistory.h	/^	CString	m_sVisionRequirement;$/;"	m	class:CPatientHistory
m_sel	mate/OfficeDrawInfo.h	/^	Selection		m_sel ;$/;"	m	class:COfficeDrawInfo
m_selTab	mate/Tabwnd.h	/^	int m_selTab;$/;"	m	class:CTabWnd
m_sheet	mate/OfficeDrawInfo.h	/^	_Worksheet		m_sheet ;$/;"	m	class:COfficeDrawInfo
m_szFilePath	tmp/LogTracer.h	/^	TCHAR			m_szFilePath[FILE_PATH_MAX_LEN] ;$/;"	m	class:CLogTracer
m_szInfoBuff	tmp/LogTracer.h	/^	TCHAR			m_szInfoBuff[INFO_BUFFER_SIZE] ;	\/\/ support unicode string. $/;"	m	class:CLogTracer
m_szRcvBuff_B	tmp/SerialComm.h	/^	char				m_szRcvBuff_B[BUFF_SIZE] ;			\/\/ back buffer. $/;"	m	class:CSerialComm
m_szRcvBuff_F	tmp/SerialComm.h	/^	char				m_szRcvBuff_F[BUFF_SIZE] ;			\/\/ front buffer. $/;"	m	class:CSerialComm
m_szSndBuff	tmp/SerialComm.h	/^	char				m_szSndBuff[BUFF_SIZE] ;$/;"	m	class:CSerialComm
m_szURL	mate/ButtonST.h	/^	TCHAR		m_szURL[_MAX_PATH];	\/\/ URL to open when clicked$/;"	m	class:CButtonST
m_tabWnd	mate/MainFrm.h	/^	CTabWnd			m_tabWnd;$/;"	m	class:CMainFrame
m_tbl	mate/OfficeDrawInfo.h	/^	Table			m_tbl ;$/;"	m	class:COfficeDrawInfo
m_tbls	mate/OfficeDrawInfo.h	/^	Tables			m_tbls ;$/;"	m	class:COfficeDrawInfo
m_tnd	mate/SystemTray.h	/^    NOTIFYICONDATA  m_tnd;$/;"	m	class:CSystemTray
m_uIDTimer	mate/SystemTray.h	/^    UINT         m_uIDTimer;$/;"	m	class:CSystemTray
m_viewList	mate/Tabwnd.h	/^	CList <TABWND_MEMBER *,TABWND_MEMBER *> m_viewList;$/;"	m	class:CTabWnd
m_wndStatusBar	mate/MainFrm.h	/^	CStatusBar  m_wndStatusBar;$/;"	m	class:CMainFrame
m_wndToolBar	mate/MainFrm.h	/^	CToolBar    m_wndToolBar;$/;"	m	class:CMainFrame
ma	inc/CDRType.h	/^	char			ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
ma	tmp/CDRType.h	/^	char			ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
magic	inc/buf_list.h	/^	int magic;$/;"	m	struct:buf_list_rec
magic	inc/cdr_packet.h	/^	int magic;$/;"	m	struct:cdr_packet
main	list.c	/^int main(int argc, char *argv[])$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
main_routine	main.c	/^static void main_routine(void)$/;"	f	file:
make_conf_path	conf.c	/^void make_conf_path(char *path)$/;"	f
make_def_file_name	cdr_session.c	/^static char * make_def_file_name(char *patient_id)$/;"	f	file:
make_file_list	manual_send.c	/^static int make_file_list(BUF_LIST *plist)$/;"	f	file:
make_raw_packet	raw_packet.c	/^static int make_raw_packet(BUF_LIST *plist)$/;"	f	file:
make_response_packet	cdr_packet.c	/^int make_response_packet(struct cdr_packet *rcv_pkt, int type, char *buf, int buf_size)$/;"	f
make_space	data_dump.c	/^static char * make_space(int indent)$/;"	f	file:
manual_path	inc/conf.h	/^	char manual_path[1024];$/;"	m	struct:conf_rec
manual_send_data	manual_send.c	/^int manual_send_data(int fd)$/;"	f
minIni	inc/minIni.h	/^  minIni(const std::string& filename) : iniFilename(filename)$/;"	f	class:minIni
minIni	inc/minIni.h	/^class minIni$/;"	c
min_stereo	inc/CDRType.h	/^	char			min_stereo[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
min_stereo	tmp/CDRType.h	/^	char			min_stereo[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
mm	inc/CDRType.h	/^	char			mm[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
mm	tmp/CDRType.h	/^	char			mm[FIELD_SIZE] ;$/;"	m	struct:_KR_DATA
model_name	inc/CDRType.h	/^	char			model_name[FIELD_SIZE] ;$/;"	m	struct:_HEADER
model_name	tmp/CDRType.h	/^	char			model_name[FIELD_SIZE] ;$/;"	m	struct:_HEADER
mrk_data	inc/mrk_data.h	/^struct mrk_data {$/;"	s
mrk_data_GetPacketStr	mrk_data.c	/^int mrk_data_GetPacketStr(char *buf, int buf_size, int nComputerNo, struct mrk_data *pmrk)$/;"	f
mrk_data_ImportFile	mrk_data.c	/^BOOL mrk_data_ImportFile(struct mrk_data *pmrk, char *path) $/;"	f
mutex	inc/buf_list.h	/^	pthread_mutex_t mutex;$/;"	m	struct:buf_list_rec
nMessage	mate/ButtonST.h	/^		UINT		nMessage;		\/\/ Message identifier$/;"	m	struct:CButtonST::_STRUCT_CALLBACK
n_bvf	inc/CDRType.h	/^	struct _BVF_DATA	n_bvf ;$/;"	m	struct:_BVF_TEST_DATA	typeref:struct:_BVF_TEST_DATA::_BVF_DATA
n_bvf	tmp/CDRType.h	/^	struct _BVF_DATA	n_bvf ;$/;"	m	struct:_BVF_TEST_DATA	typeref:struct:_BVF_TEST_DATA::_BVF_DATA
n_l_nmain	inc/CDRType.h	/^	struct _M_N_DATA	n_l_nmain ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_N_DATA
n_l_nmain	inc/CDRType.h	/^	struct _M_N_DATA	n_l_nmain ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_N_DATA
n_l_nmain	tmp/CDRType.h	/^	struct _M_N_DATA	n_l_nmain ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_N_DATA
n_l_nmain	tmp/CDRType.h	/^	struct _M_N_DATA	n_l_nmain ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_N_DATA
n_nrc	inc/CDRType.h	/^	struct _RC_DATA		n_nrc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
n_nrc	tmp/CDRType.h	/^	struct _RC_DATA		n_nrc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
n_prc	inc/CDRType.h	/^	struct _RC_DATA		n_prc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
n_prc	tmp/CDRType.h	/^	struct _RC_DATA		n_prc ;$/;"	m	struct:_RC_TEST_DATA	typeref:struct:_RC_TEST_DATA::_RC_DATA
n_prism_l	inc/CDRType.h	/^	struct _P_DATA		n_prism_l[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
n_prism_l	tmp/CDRType.h	/^	struct _P_DATA		n_prism_l[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
n_prism_r	inc/CDRType.h	/^	struct _P_DATA		n_prism_r[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
n_prism_r	tmp/CDRType.h	/^	struct _P_DATA		n_prism_r[6] ;$/;"	m	struct:_PRISM_DATA	typeref:struct:_PRISM_DATA::_P_DATA
n_r_nmain	inc/CDRType.h	/^	struct _M_N_DATA	n_r_nmain ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_N_DATA
n_r_nmain	inc/CDRType.h	/^	struct _M_N_DATA	n_r_nmain ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_N_DATA
n_r_nmain	tmp/CDRType.h	/^	struct _M_N_DATA	n_r_nmain ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_M_N_DATA
n_r_nmain	tmp/CDRType.h	/^	struct _M_N_DATA	n_r_nmain ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_M_N_DATA
n_va	inc/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
n_va	inc/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
n_va	inc/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_UN_VA_DATA	typeref:struct:_UN_VA_DATA::_VA_DATA
n_va	tmp/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_FIN_DATA	typeref:struct:_FIN_DATA::_VA_DATA
n_va	tmp/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_SUBJ_DATA	typeref:struct:_SUBJ_DATA::_VA_DATA
n_va	tmp/CDRType.h	/^	struct _VA_DATA		n_va ;$/;"	m	struct:_UN_VA_DATA	typeref:struct:_UN_VA_DATA::_VA_DATA
new	mate/AdvancedDlg.cpp	11;"	d	file:
new	mate/AppLogFile.cpp	9;"	d	file:
new	mate/ButtonST.cpp	10;"	d	file:
new	mate/CDRData.cpp	16;"	d	file:
new	mate/CDRMate.cpp	15;"	d	file:
new	mate/CDRMateDoc.cpp	10;"	d	file:
new	mate/CDRMateView.cpp	18;"	d	file:
new	mate/CDROpPannel.cpp	13;"	d	file:
new	mate/CLMData.cpp	10;"	d	file:
new	mate/ConnectPage.cpp	9;"	d	file:
new	mate/DataFrm.cpp	9;"	d	file:
new	mate/DataView.cpp	9;"	d	file:
new	mate/DeviceDrawInfo.cpp	12;"	d	file:
new	mate/DeviceView.cpp	10;"	d	file:
new	mate/FileSystem.cpp	9;"	d	file:
new	mate/GeneralPage.cpp	11;"	d	file:
new	mate/ImportDlg.cpp	9;"	d	file:
new	mate/InstanceChecker.cpp	9;"	d	file:
new	mate/ItemDrawInfo.cpp	9;"	d	file:
new	mate/Lable.cpp	9;"	d	file:
new	mate/MRKData.cpp	10;"	d	file:
new	mate/MainFrm.cpp	15;"	d	file:
new	mate/OfficeDrawInfo.cpp	12;"	d	file:
new	mate/PatientHistory.cpp	9;"	d	file:
new	mate/PrintPage.cpp	10;"	d	file:
new	mate/SetupInfo.cpp	10;"	d	file:
new	mate/SetupSheet.cpp	9;"	d	file:
new	mate/SystemTray.cpp	59;"	d	file:
new	mate/Tabwnd.cpp	14;"	d	file:
new	mate/ZernikeView.cpp	9;"	d	file:
new	mate/ZernikeWnd.cpp	9;"	d	file:
new	mate/excel8.cpp	7;"	d	file:
new	mate/msword8.cpp	7;"	d	file:
next	inc/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
np_ra	inc/cdr_session.h	/^	struct _NP_RA_DATA		np_ra ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_NP_RA_DATA
np_ra	mate/CDRData.h	/^	NP_RA_DATA		np_ra ;$/;"	m	class:CCDRData
np_ra	tmp/CDRSession.h	/^	struct _NP_RA_DATA		np_ra ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_NP_RA_DATA
npa	inc/CDRType.h	/^	struct _NPA_DATA	npa ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_NPA_DATA
npa	tmp/CDRType.h	/^	struct _NPA_DATA	npa ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_NPA_DATA
npc	inc/CDRType.h	/^	struct _NPC_DATA	npc ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_NPC_DATA
npc	tmp/CDRType.h	/^	struct _NPC_DATA	npc ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_NPC_DATA
npd	inc/CDRType.h	/^	char			npd[FIELD_SIZE] ;			\/\/ {45.0-75.0}$/;"	m	struct:_PATIENT_DATA
npd	tmp/CDRType.h	/^	char			npd[FIELD_SIZE] ;			\/\/ {45.0-75.0}$/;"	m	struct:_PATIENT_DATA
npd_l	inc/CDRType.h	/^	char			npd_l[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
npd_l	tmp/CDRType.h	/^	char			npd_l[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
npd_r	inc/CDRType.h	/^	char			npd_r[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
npd_r	tmp/CDRType.h	/^	char			npd_r[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
nra	inc/CDRType.h	/^	struct _RA_DATA		nra ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_RA_DATA
nra	tmp/CDRType.h	/^	struct _RA_DATA		nra ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_RA_DATA
oldtio	serial.c	/^	struct termios oldtio;$/;"	m	struct:serial_rec	typeref:struct:serial_rec::termios	file:
open_serial_port	serial.c	/^int open_serial_port(char *port, int baud)$/;"	f
ou	inc/CDRType.h	/^	char			ou[FIELD_SIZE] ;		$/;"	m	struct:_VA_DATA
ou	tmp/CDRType.h	/^	char			ou[FIELD_SIZE] ;		$/;"	m	struct:_VA_DATA
ou_cm	inc/CDRType.h	/^	char			ou_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
ou_cm	tmp/CDRType.h	/^	char			ou_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
ou_d	inc/CDRType.h	/^	char			ou_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
ou_d	tmp/CDRType.h	/^	char			ou_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
pWnd	mate/Tabwnd.h	/^	CWnd *pWnd;$/;"	m	struct:__anon4
p_x	inc/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
p_x	inc/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
p_x	inc/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_P_DATA
p_x	tmp/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
p_x	tmp/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
p_x	tmp/CDRType.h	/^	char			p_x[FIELD_SIZE] ;$/;"	m	struct:_P_DATA
p_y	inc/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
p_y	inc/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
p_y	inc/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_P_DATA
p_y	tmp/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
p_y	tmp/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
p_y	tmp/CDRType.h	/^	char			p_y[FIELD_SIZE] ;$/;"	m	struct:_P_DATA
packet	inc/cdr_session.h	/^	struct cdr_packet packet;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::cdr_packet
patient	inc/cdr_session.h	/^	struct _PATIENT_DATA	patient ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_PATIENT_DATA
patient	mate/CDRData.h	/^	PATIENT_DATA	patient ;$/;"	m	class:CCDRData
patient	tmp/CDRSession.h	/^	struct _PATIENT_DATA	patient ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_PATIENT_DATA
patient_id	inc/CDRType.h	/^	char			patient_id[FIELD_SIZE] ;$/;"	m	struct:_HEADER
patient_id	tmp/CDRType.h	/^	char			patient_id[FIELD_SIZE] ;$/;"	m	struct:_HEADER
pd	inc/CDRType.h	/^	char			pd[FIELD_SIZE] ;			\/\/ {48.0-80.0}$/;"	m	struct:_PATIENT_DATA
pd	tmp/CDRType.h	/^	char			pd[FIELD_SIZE] ;			\/\/ {48.0-80.0}$/;"	m	struct:_PATIENT_DATA
pd_l	inc/CDRType.h	/^	char			pd_l[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
pd_l	tmp/CDRType.h	/^	char			pd_l[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
pd_r	inc/CDRType.h	/^	char			pd_r[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
pd_r	tmp/CDRType.h	/^	char			pd_r[FIELD_SIZE] ;$/;"	m	struct:_PATIENT_DATA
penBlack	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penDGray	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penDGray2	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penL1Gray	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penL2Gray	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penWhite	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
penWhite2	mate/Tabwnd.h	/^	CPen penWhite, penWhite2, penBlack, penL1Gray, penL2Gray, penDGray, penDGray2;$/;"	m	class:CTabWnd
port	inc/conf.h	/^	char port[256];$/;"	m	struct:conf_rec
pra	inc/CDRType.h	/^	struct _RA_DATA		pra ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_RA_DATA
pra	tmp/CDRType.h	/^	struct _RA_DATA		pra ;$/;"	m	struct:_NP_RA_DATA	typeref:struct:_NP_RA_DATA::_RA_DATA
prev	inc/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prism	inc/CDRType.h	/^	char			prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
prism	inc/cdr_session.h	/^	struct _PRISM_DATA		prism ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_PRISM_DATA
prism	mate/CDRData.h	/^	PRISM_DATA		prism ;$/;"	m	class:CCDRData
prism	tmp/CDRSession.h	/^	struct _PRISM_DATA		prism ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_PRISM_DATA
prism	tmp/CDRType.h	/^	char			prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
proc_cmd_options	main.c	/^static int proc_cmd_options(int argc, char *argv[])$/;"	f	file:
proc_file_list	manual_send.c	/^static int proc_file_list(int fd, BUF_LIST *plist)$/;"	f	file:
process_gui_msg	console.c	/^static void process_gui_msg(char *msg)$/;"	f	file:
protocol_ver	inc/conf.h	/^	char protocol_ver[8];$/;"	m	struct:conf_rec
pszTrayNotifyMsg	mate/MainFrm.cpp	/^const char *pszTrayNotifyMsg	= "HDR Mate Tray Notification" ;$/;"	v
put	inc/minIni.h	/^  bool put(const std::string& Section, const std::string& Key, const std::string& Value) const$/;"	f	class:minIni
put	inc/minIni.h	/^  bool put(const std::string& Section, const std::string& Key, long Value) const$/;"	f	class:minIni
r1_l	inc/CDRType.h	/^	struct _KR_DATA		r1_l ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r1_l	tmp/CDRType.h	/^	struct _KR_DATA		r1_l ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r1_r	inc/CDRType.h	/^	struct _KR_DATA		r1_r ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r1_r	tmp/CDRType.h	/^	struct _KR_DATA		r1_r ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r2_l	inc/CDRType.h	/^	struct _KR_DATA		r2_l ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r2_l	tmp/CDRType.h	/^	struct _KR_DATA		r2_l ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r2_r	inc/CDRType.h	/^	struct _KR_DATA		r2_r ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r2_r	tmp/CDRType.h	/^	struct _KR_DATA		r2_r ;$/;"	m	struct:_KER_DATA	typeref:struct:_KER_DATA::_KR_DATA
r_cm	inc/CDRType.h	/^	char			r_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
r_cm	tmp/CDRType.h	/^	char			r_cm[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
r_d	inc/CDRType.h	/^	char			r_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
r_d	tmp/CDRType.h	/^	char			r_d[FIELD_SIZE] ;$/;"	m	struct:_NPA_DATA
r_eye	inc/CDRType.h	/^	struct _COEFF_DATA		r_eye ;$/;"	m	struct:_ZERNIKE_DATA	typeref:struct:_ZERNIKE_DATA::_COEFF_DATA
r_eye	tmp/CDRType.h	/^	struct _COEFF_DATA		r_eye ;$/;"	m	struct:_ZERNIKE_DATA	typeref:struct:_ZERNIKE_DATA::_COEFF_DATA
r_va	inc/CDRType.h	/^	char			r_va[FIELD_SIZE] ;$/;"	m	struct:_VA_DATA
r_va	tmp/CDRType.h	/^	char			r_va[FIELD_SIZE] ;$/;"	m	struct:_VA_DATA
raw_packet_list	inc/main.h	/^	BUF_LIST *raw_packet_list;$/;"	m	struct:serial_receiver_param
raw_packet_processor	cdr_session.c	/^int raw_packet_processor(int fd, char *raw_packet, int packet_size)$/;"	f
rc_test	inc/cdr_session.h	/^	struct _RC_TEST_DATA	rc_test ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_RC_TEST_DATA
rc_test	mate/CDRData.h	/^	RC_TEST_DATA	rc_test ;$/;"	m	class:CCDRData
rc_test	tmp/CDRSession.h	/^	struct _RC_TEST_DATA	rc_test ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_RC_TEST_DATA
rcv_cm	inc/CDRType.h	/^	char			rcv_cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_cm	tmp/CDRType.h	/^	char			rcv_cm[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_ma	inc/CDRType.h	/^	char			rcv_ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_ma	tmp/CDRType.h	/^	char			rcv_ma[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_node_id	inc/CDRType.h	/^	char			rcv_node_id[FIELD_SIZE] ;		\/\/ {0-3}$/;"	m	struct:_CAN_HD
rcv_node_id	tmp/CDRType.h	/^	char			rcv_node_id[FIELD_SIZE] ;		\/\/ {0-3}$/;"	m	struct:_CAN_HD
rcv_prism	inc/CDRType.h	/^	char			rcv_prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_prism	tmp/CDRType.h	/^	char			rcv_prism[FIELD_SIZE] ;$/;"	m	struct:_NPC_DATA
rcv_sys_id	inc/CDRType.h	/^	char			rcv_sys_id[FIELD_SIZE] ;		\/\/ {0-a}$/;"	m	struct:_CAN_HD
rcv_sys_id	tmp/CDRType.h	/^	char			rcv_sys_id[FIELD_SIZE] ;		\/\/ {0-a}$/;"	m	struct:_CAN_HD
received	inc/conf.h	/^	char received[1024];$/;"	m	struct:conf_rec
recv	inc/CDRType.h	/^	char			recv[FIELD_SIZE] ;$/;"	m	struct:_RA_DATA
recv	inc/CDRType.h	/^	char			recv[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
recv	tmp/CDRType.h	/^	char			recv[FIELD_SIZE] ;$/;"	m	struct:_RA_DATA
recv	tmp/CDRType.h	/^	char			recv[FIELD_SIZE] ;$/;"	m	struct:_RC_DATA
refr	inc/cdr_session.h	/^	struct _REFR_DATA		refr ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_REFR_DATA
refr	mate/CDRData.h	/^	REFR_DATA		refr ;$/;"	m	class:CCDRData
refr	tmp/CDRSession.h	/^	struct _REFR_DATA		refr ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_REFR_DATA
resizeTab	mate/Tabwnd.cpp	/^void CTabWnd::resizeTab()$/;"	f	class:CTabWnd
retino	inc/cdr_session.h	/^	struct _RETINO_DATA		retino ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_RETINO_DATA
retino	mate/CDRData.h	/^	RETINO_DATA		retino ;$/;"	m	class:CCDRData
retino	tmp/CDRSession.h	/^	struct _RETINO_DATA		retino ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_RETINO_DATA
rtrim	manual_send.c	/^static void rtrim(char *buf)$/;"	f	file:
se	inc/CDRType.h	/^	char			se[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
se	tmp/CDRType.h	/^	char			se[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
send_clm_mrk_file	auto_send.c	/^int send_clm_mrk_file(int fd, int type, char *path)$/;"	f
send_data_to_cdr	auto_send.c	/^int send_data_to_cdr(int fd, char *path)$/;"	f
send_raw_packet	cdr_session.c	/^int send_raw_packet(int fd, char *buf, int buf_size)$/;"	f
serial_rec	serial.c	/^struct serial_rec {$/;"	s	file:
serial_receiver	main.c	/^static void * serial_receiver(void *args)$/;"	f	file:
serial_receiver_param	inc/main.h	/^struct serial_receiver_param {$/;"	s
setBackColor	mate/Lable.cpp	/^void CLable::setBackColor(COLORREF color)$/;"	f	class:CLable
setTextColor	mate/Lable.cpp	/^void CLable::setTextColor(COLORREF color)$/;"	f	class:CLable
setZernikeData	mate/ZernikeContext.cpp	/^void CZernikeContext::setZernikeData(int nPatNo, int nSide, ZERNIKE_DATA &zdata)$/;"	f	class:CZernikeContext
setZernikeData	mate/ZernikeWnd.cpp	/^void CZernikeWnd::setZernikeData(int nPatNo, int nSide, ZERNIKE_DATA &zdata)$/;"	f	class:CZernikeWnd
set_favored_system_id	cdr_session.c	/^void set_favored_system_id(int id)$/;"	f
set_protocol_version	cdr_session.c	/^void set_protocol_version(char *ver_str)$/;"	f
setup_signal	main.c	/^static int setup_signal(void)$/;"	f	file:
signal_handler	main.c	/^static void signal_handler(int sig)$/;"	f	file:
snd_node_id	inc/CDRType.h	/^	char			snd_node_id[FIELD_SIZE] ;		\/\/ {0-3}$/;"	m	struct:_CAN_HD
snd_node_id	tmp/CDRType.h	/^	char			snd_node_id[FIELD_SIZE] ;		\/\/ {0-3}$/;"	m	struct:_CAN_HD
snd_sys_id	inc/CDRType.h	/^	char			snd_sys_id[FIELD_SIZE] ;		\/\/ {0-a}$/;"	m	struct:_CAN_HD
snd_sys_id	tmp/CDRType.h	/^	char			snd_sys_id[FIELD_SIZE] ;		\/\/ {0-a}$/;"	m	struct:_CAN_HD
speed	inc/conf.h	/^	int speed;$/;"	m	struct:conf_rec
speed_str_to_brate	conf.c	/^static int speed_str_to_brate(char *str)$/;"	f	file:
sph	inc/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
sph	inc/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
sph	inc/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
sph	inc/CDRType.h	/^	char		sph[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
sph	tmp/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_M_DATA
sph	tmp/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_M_N_DATA
sph	tmp/CDRType.h	/^	char			sph[FIELD_SIZE] ;$/;"	m	struct:_SCA_DATA
sph	tmp/CDRType.h	/^	char		sph[FIELD_SIZE] ;$/;"	m	struct:_COEFF_DATA
stereo	inc/CDRType.h	/^	char			stereo[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
stereo	tmp/CDRType.h	/^	char			stereo[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
subj	inc/cdr_session.h	/^	struct _SUBJ_DATA		subj ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_SUBJ_DATA
subj	mate/CDRData.h	/^	SUBJ_DATA		subj ;$/;"	m	class:CCDRData
subj	tmp/CDRSession.h	/^	struct _SUBJ_DATA		subj ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_SUBJ_DATA
system_id	inc/conf.h	/^	int system_id;$/;"	m	struct:conf_rec
szInfoBuff	mate/AppLogFile.h	/^	TCHAR		szInfoBuff[INFO_BUFFER_SIZE] ;$/;"	m	class:CAppLogFile
szLabel	mate/Tabwnd.h	/^	char szLabel[32];$/;"	m	struct:__anon4
szSound	mate/ButtonST.h	/^		TCHAR		szSound[_MAX_PATH];$/;"	m	struct:CButtonST::_STRUCT_SOUND
theApp	mate/CDRMate.cpp	/^CCDRMateApp theApp;$/;"	v
trans	inc/cdr_session.h	/^	struct _TRANS_END		trans ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_TRANS_END
trans	tmp/CDRSession.h	/^	struct _TRANS_END		trans ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_TRANS_END
trans_end	mate/CDRData.h	/^	TRANS_END		trans_end ;$/;"	m	class:CCDRData
transfer	inc/conf.h	/^	char transfer[1024];$/;"	m	struct:conf_rec
transfer_list	inc/main.h	/^	BUF_LIST *transfer_list;$/;"	m	struct:serial_receiver_param
transferred	inc/conf.h	/^	char transferred[1024];$/;"	m	struct:conf_rec
u_rat	inc/CDRType.h	/^	char		u_rat[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
u_rat	tmp/CDRType.h	/^	char		u_rat[FIELD_SIZE] ;$/;"	m	struct:_ZERNIKE_DATA
un_va	inc/cdr_session.h	/^	struct _UN_VA_DATA		un_va ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_UN_VA_DATA
un_va	mate/CDRData.h	/^	UN_VA_DATA		un_va ;$/;"	m	class:CCDRData
un_va	tmp/CDRSession.h	/^	struct _UN_VA_DATA		un_va ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_UN_VA_DATA
usage	main.c	/^static void usage(char *argv0)$/;"	f	file:
ver_numb	inc/CDRType.h	/^	char			ver_numb[FIELD_SIZE] ;$/;"	m	struct:_HEADER
ver_numb	tmp/CDRType.h	/^	char			ver_numb[FIELD_SIZE] ;$/;"	m	struct:_HEADER
vert	inc/CDRType.h	/^	char			vert[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
vert	tmp/CDRType.h	/^	char			vert[FIELD_SIZE] ;$/;"	m	struct:_BVF_DATA
wParam	mate/ButtonST.h	/^		WPARAM		wParam;$/;"	m	struct:CButtonST::_STRUCT_CALLBACK
wd	inc/CDRType.h	/^	char			wd[FIELD_SIZE] ;			\/\/ {35-70}$/;"	m	struct:_PATIENT_DATA
wd	tmp/CDRType.h	/^	char			wd[FIELD_SIZE] ;			\/\/ {35-70}$/;"	m	struct:_PATIENT_DATA
write_pid	main.c	/^static int write_pid(void)$/;"	f	file:
x_max	mate/Tabwnd.h	/^	int x_min, x_max;$/;"	m	struct:__anon4
x_min	mate/Tabwnd.h	/^	int x_min, x_max;$/;"	m	struct:__anon4
zdata	inc/cdr_session.h	/^	struct _ZERNIKE_DATA	zdata ;$/;"	m	struct:cdr_session	typeref:struct:cdr_session::_ZERNIKE_DATA
zdata	mate/CDRData.h	/^	ZERNIKE_DATA	zdata ;$/;"	m	class:CCDRData
zdata	tmp/CDRSession.h	/^	struct _ZERNIKE_DATA	zdata ;$/;"	m	class:CCDRSession	typeref:struct:CCDRSession::_ZERNIKE_DATA
~CAppLogFile	mate/AppLogFile.cpp	/^CAppLogFile::~CAppLogFile()$/;"	f	class:CAppLogFile
~CButtonST	mate/ButtonST.cpp	/^CButtonST::~CButtonST()$/;"	f	class:CButtonST
~CCDRData	mate/CDRData.cpp	/^CCDRData::~CCDRData()$/;"	f	class:CCDRData
~CCDRMateDoc	mate/CDRMateDoc.cpp	/^CCDRMateDoc::~CCDRMateDoc()$/;"	f	class:CCDRMateDoc
~CCDRMateView	mate/CDRMateView.cpp	/^CCDRMateView::~CCDRMateView()$/;"	f	class:CCDRMateView
~CCDROpPannel	mate/CDROpPannel.cpp	/^CCDROpPannel::~CCDROpPannel()$/;"	f	class:CCDROpPannel
~CCDRPacket	tmp/CDRPacket.cpp	/^CCDRPacket::~CCDRPacket() $/;"	f	class:CCDRPacket
~CCDRSession	tmp/CDRSession.cpp	/^CCDRSession::~CCDRSession()$/;"	f	class:CCDRSession
~CCLMData	mate/CLMData.cpp	/^CCLMData::~CCLMData()$/;"	f	class:CCLMData
~CConnectPage	mate/ConnectPage.cpp	/^CConnectPage::~CConnectPage()$/;"	f	class:CConnectPage
~CDataFrm	mate/DataFrm.cpp	/^CDataFrm::~CDataFrm()$/;"	f	class:CDataFrm
~CDataView	mate/DataView.cpp	/^CDataView::~CDataView()$/;"	f	class:CDataView
~CDeviceDrawInfo	mate/DeviceDrawInfo.cpp	/^CDeviceDrawInfo::~CDeviceDrawInfo()$/;"	f	class:CDeviceDrawInfo
~CDeviceView	mate/DeviceView.cpp	/^CDeviceView::~CDeviceView()$/;"	f	class:CDeviceView
~CFileSystem	mate/FileSystem.cpp	/^CFileSystem::~CFileSystem()$/;"	f	class:CFileSystem
~CGeneralPage	mate/GeneralPage.cpp	/^CGeneralPage::~CGeneralPage()$/;"	f	class:CGeneralPage
~CInstanceChecker	mate/InstanceChecker.cpp	/^CInstanceChecker::~CInstanceChecker()$/;"	f	class:CInstanceChecker
~CItemDrawInfo	mate/ItemDrawInfo.cpp	/^CItemDrawInfo::~CItemDrawInfo()$/;"	f	class:CItemDrawInfo
~CLable	mate/Lable.cpp	/^CLable::~CLable()$/;"	f	class:CLable
~CLogTracer	tmp/LogTracer.h	/^	virtual ~CLogTracer()$/;"	f	class:CLogTracer
~CMRKData	mate/MRKData.cpp	/^CMRKData::~CMRKData()$/;"	f	class:CMRKData
~CMainFrame	mate/MainFrm.cpp	/^CMainFrame::~CMainFrame()$/;"	f	class:CMainFrame
~COfficeDrawInfo	mate/OfficeDrawInfo.cpp	/^COfficeDrawInfo::~COfficeDrawInfo()$/;"	f	class:COfficeDrawInfo
~CPrintPage	mate/PrintPage.cpp	/^CPrintPage::~CPrintPage()$/;"	f	class:CPrintPage
~CSerialComm	tmp/SerialComm.cpp	/^CSerialComm::~CSerialComm()$/;"	f	class:CSerialComm
~CSetupInfo	mate/SetupInfo.cpp	/^CSetupInfo::~CSetupInfo()$/;"	f	class:CSetupInfo
~CSetupSheet	mate/SetupSheet.cpp	/^CSetupSheet::~CSetupSheet()$/;"	f	class:CSetupSheet
~CSystemTray	mate/SystemTray.cpp	/^CSystemTray::~CSystemTray()$/;"	f	class:CSystemTray
~CTabWnd	mate/Tabwnd.cpp	/^CTabWnd::~CTabWnd()$/;"	f	class:CTabWnd
~CZernikeContext	mate/ZernikeContext.cpp	/^CZernikeContext::~CZernikeContext(void)$/;"	f	class:CZernikeContext
~CZernikeView	mate/ZernikeView.cpp	/^CZernikeView::~CZernikeView()$/;"	f	class:CZernikeView
~CZernikeWnd	mate/ZernikeWnd.cpp	/^CZernikeWnd::~CZernikeWnd()$/;"	f	class:CZernikeWnd
